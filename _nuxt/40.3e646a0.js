(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{517:function(n){n.exports=JSON.parse('{"title":"Build GNU Source-highlight supporting Rust for NixOS","subtitle":"NixOS的にlessをRust対応にしよう","date":"2019-03-10T00:00:00.000Z","tags":["Rust","NixOS"],"bodyContent":"Let\'s Rust syntax highlighten in less!\\n\\n1. We need to apply [a patch](https://gist.github.com/tav/3846383).\\n1. To apply the patch, make a simple overlay(~/.config/nixpkgs/overlays/source-highlight.nix) against [the expression](https://github.com/NixOS/nixpkgs/blob/master/pkgs/tools/text/source-highlight/default.nix) in the master branch.\\n1. But somehow I failed to build it due to lack of makeinfo.\\n1. So add super.texinfo to the `BuildInputs` in the overlay.\\n1. Run `nix-env -i source-highliht` and got it.\\n1. Activate this feature with the following settings:\\n\\n```shell\\nexport LESS=\'-R\'\\nexport LESSOPEN=\'|| ~/.nix-profile/bin/src-hilite-lesspipe.sh %s\'\\n```\\n\\nThe double veritical bars are important!\\n\\n> However, if the first character of LESSOPEN  starts  with  two  vertical  bars, the exit status of the script becomes meaningful.  If the exit status is zero, the output is considered to  be replacement text, even if it empty.  If the exit status is nonzero, any output is ignored and the original file is used.  For compatibility with previous versions of  less, if LESSOPEN starts with only one vertical bar, the exit status of the preprocessor is ignored.\\n\\nIn most cases in which `less` is used as a pager, this settings is identital to the original\\nbehavior. On the other side, with a single bar, `less` clears the sceen to switch to full\\nscreen mode.\\n\\n### files\\n\\n- ~/.config/nixpkgs/overlays/source-highlight.nix\\n\\n```nix\\nself: super:\\n{\\n    sourceHighlight = super.sourceHighlight.overrideAttrs (attrs: {\\n        buildInputs = [ super.boost super.texinfo ];\\n        patches = [ ~/.config/nixpkgs/rust.patch ];\\n    });\\n}\\n```\\n\\n- ~/.config/nixpkgs/rust.patch\\n\\n```diff\\ndiff -urN source-highlight-3.1.8/src/Makefile.am source-highlight-3.1.8-Rust/src/Makefile.am\\n--- source-highlight-3.1.8/src/Makefile.am      2015-03-30 22:00:00.000000000 +0900\\n+++ source-highlight-3.1.8-Rust/src/Makefile.am 2019-03-10 21:38:57.249427742 +0900\\n@@ -86,7 +86,7 @@\\n errors.lang erlang.lang proto.lang vala.lang lisp.lang islisp.lang \\\\\\n scheme.lang po.lang opa.lang javalog.lang upc.lang tml.lang \\\\\\n lilypond.lang coffeescript.lang go.lang \\\\\\n-r.lang s.lang zsh.lang groovy.lang json.lang feature.lang\\n+r.lang s.lang zsh.lang groovy.lang json.lang feature.lang rust.lang\\n \\n LANGFILES_NOTTOCHECK= \\\\\\n tml_formatting_all.lang  tml_macrolinks.lang      tml_macrosdelayed2.lang \\\\\\ndiff -urN source-highlight-3.1.8/src/Makefile.in source-highlight-3.1.8-Rust/src/Makefile.in\\n--- source-highlight-3.1.8/src/Makefile.in      2015-03-31 00:04:55.000000000 +0900\\n+++ source-highlight-3.1.8-Rust/src/Makefile.in 2019-03-10 21:39:16.152740165 +0900\\n@@ -838,7 +838,7 @@\\n errors.lang erlang.lang proto.lang vala.lang lisp.lang islisp.lang \\\\\\n scheme.lang po.lang opa.lang javalog.lang upc.lang tml.lang \\\\\\n lilypond.lang coffeescript.lang go.lang \\\\\\n-r.lang s.lang zsh.lang groovy.lang json.lang feature.lang\\n+r.lang s.lang zsh.lang groovy.lang json.lang feature.lang rust.lang\\n \\n LANGFILES_NOTTOCHECK = \\\\\\n tml_formatting_all.lang  tml_macrolinks.lang      tml_macrosdelayed2.lang \\\\\\ndiff -urN source-highlight-3.1.8/src/lang.map source-highlight-3.1.8-Rust/src/lang.map\\n--- source-highlight-3.1.8/src/lang.map 2015-03-30 20:26:24.000000000 +0900\\n+++ source-highlight-3.1.8-Rust/src/lang.map    2019-03-10 22:19:59.609966381 +0900\\n@@ -169,3 +169,5 @@\\n groovy = groovy.lang\\n json = json.lang\\n feature = feature.lang\\n+rust = rust.lang\\n+rs = rust.lang\\ndiff -urN source-highlight-3.1.8/src/rust.lang source-highlight-3.1.8-Rust/src/rust.lang\\n--- source-highlight-3.1.8/src/rust.lang        1970-01-01 09:00:00.000000000 +0900\\n+++ source-highlight-3.1.8-Rust/src/rust.lang   2019-03-10 13:09:20.711181631 +0900\\n@@ -0,0 +1,18 @@\\n+preproc = \\"import\\",\\"package\\"\\n+\\n+include \\"c_comment.lang\\"\\n+\\n+include \\"number.lang\\"\\n+\\n+string delim \\"\\\\\\"\\" \\"\\\\\\"\\" escape \\"\\\\\\\\\\"\\n+string delim \\"\'\\" \\"\'\\"  escape \\"\\\\\\\\\\"\\n+string delim \\"`\\" \\"`\\"  escape \\"\\\\\\\\\\" multiline\\n+\\n+keyword = \\"as|assert|break|const|copy|do|drop|else|enum|export|extern|fail|false|fn|for|if|impl|let|log|loop|match|mod|move|mut|p\\nriv|pub|pure|ref|return|struct|true|trait|type|unsafe|use|while\\"\\n+keyword = \\"be|self|static|export|assert|log|fail\\"\\n+\\n+type = \\"bool|char|f32|f64|float|i8|i16|i32|i64|int|str|u8|u16|u32|u64|uint\\"\\n+\\n+include \\"symbols.lang\\"\\n+\\n+cbracket = \\"{|}\\"\\n```","bodyHtml":"<p>Let\'s Rust syntax highlighten in less!</p>\\n<ol>\\n<li>We need to apply <a href=\\"https://gist.github.com/tav/3846383\\">a patch</a>.</li>\\n<li>To apply the patch, make a simple overlay(~/.config/nixpkgs/overlays/source-highlight.nix) against <a href=\\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/tools/text/source-highlight/default.nix\\">the expression</a> in the master branch.</li>\\n<li>But somehow I failed to build it due to lack of makeinfo.</li>\\n<li>So add super.texinfo to the <code>BuildInputs</code> in the overlay.</li>\\n<li>Run <code>nix-env -i source-highliht</code> and got it.</li>\\n<li>Activate this feature with the following settings:</li>\\n</ol>\\n<pre><code class=\\"hljs\\">export LESS=\'-R\'\\nexport LESSOPEN=\'|| ~/.nix-profile/bin/src-hilite-lesspipe.sh %s\'</code></pre><p>The double veritical bars are important!</p>\\n<blockquote>\\n<p>However, if the first character of LESSOPEN  starts  with  two  vertical  bars, the exit status of the script becomes meaningful.  If the exit status is zero, the output is considered to  be replacement text, even if it empty.  If the exit status is nonzero, any output is ignored and the original file is used.  For compatibility with previous versions of  less, if LESSOPEN starts with only one vertical bar, the exit status of the preprocessor is ignored.</p>\\n</blockquote>\\n<p>In most cases in which <code>less</code> is used as a pager, this settings is identital to the original\\nbehavior. On the other side, with a single bar, <code>less</code> clears the sceen to switch to full\\nscreen mode.</p>\\n<h3>files</h3>\\n<ul>\\n<li>~/.config/nixpkgs/overlays/source-highlight.nix</li>\\n</ul>\\n<pre><code class=\\"hljs\\">self: super:\\n{\\n    <span class=\\"hljs-attr\\">sourceHighlight</span> = super.sourceHighlight.overrideAttrs (attrs: {\\n        <span class=\\"hljs-attr\\">buildInputs</span> = [ super.boost super.texinfo ];\\n        <span class=\\"hljs-attr\\">patches</span> = [ ~/.config/nixpkgs/rust.patch ];\\n    });\\n}</code></pre><ul>\\n<li>~/.config/nixpkgs/rust.patch</li>\\n</ul>\\n<pre><code class=\\"hljs\\">diff -urN source-highlight-3.1.8/src/Makefile.am source-highlight-3.1.8-Rust/src/Makefile.am\\n<span class=\\"hljs-comment\\">--- source-highlight-3.1.8/src/Makefile.am      2015-03-30 22:00:00.000000000 +0900</span>\\n<span class=\\"hljs-comment\\">+++ source-highlight-3.1.8-Rust/src/Makefile.am 2019-03-10 21:38:57.249427742 +0900</span>\\n<span class=\\"hljs-meta\\">@@ -86,7 +86,7 @@</span>\\n errors.lang erlang.lang proto.lang vala.lang lisp.lang islisp.lang \\\\\\n scheme.lang po.lang opa.lang javalog.lang upc.lang tml.lang \\\\\\n lilypond.lang coffeescript.lang go.lang \\\\\\n<span class=\\"hljs-deletion\\">-r.lang s.lang zsh.lang groovy.lang json.lang feature.lang</span>\\n<span class=\\"hljs-addition\\">+r.lang s.lang zsh.lang groovy.lang json.lang feature.lang rust.lang</span>\\n \\n LANGFILES_NOTTOCHECK= \\\\\\n tml_formatting_all.lang  tml_macrolinks.lang      tml_macrosdelayed2.lang \\\\\\ndiff -urN source-highlight-3.1.8/src/Makefile.in source-highlight-3.1.8-Rust/src/Makefile.in\\n<span class=\\"hljs-comment\\">--- source-highlight-3.1.8/src/Makefile.in      2015-03-31 00:04:55.000000000 +0900</span>\\n<span class=\\"hljs-comment\\">+++ source-highlight-3.1.8-Rust/src/Makefile.in 2019-03-10 21:39:16.152740165 +0900</span>\\n<span class=\\"hljs-meta\\">@@ -838,7 +838,7 @@</span>\\n errors.lang erlang.lang proto.lang vala.lang lisp.lang islisp.lang \\\\\\n scheme.lang po.lang opa.lang javalog.lang upc.lang tml.lang \\\\\\n lilypond.lang coffeescript.lang go.lang \\\\\\n<span class=\\"hljs-deletion\\">-r.lang s.lang zsh.lang groovy.lang json.lang feature.lang</span>\\n<span class=\\"hljs-addition\\">+r.lang s.lang zsh.lang groovy.lang json.lang feature.lang rust.lang</span>\\n \\n LANGFILES_NOTTOCHECK = \\\\\\n tml_formatting_all.lang  tml_macrolinks.lang      tml_macrosdelayed2.lang \\\\\\ndiff -urN source-highlight-3.1.8/src/lang.map source-highlight-3.1.8-Rust/src/lang.map\\n<span class=\\"hljs-comment\\">--- source-highlight-3.1.8/src/lang.map 2015-03-30 20:26:24.000000000 +0900</span>\\n<span class=\\"hljs-comment\\">+++ source-highlight-3.1.8-Rust/src/lang.map    2019-03-10 22:19:59.609966381 +0900</span>\\n<span class=\\"hljs-meta\\">@@ -169,3 +169,5 @@</span>\\n groovy = groovy.lang\\n json = json.lang\\n feature = feature.lang\\n<span class=\\"hljs-addition\\">+rust = rust.lang</span>\\n<span class=\\"hljs-addition\\">+rs = rust.lang</span>\\ndiff -urN source-highlight-3.1.8/src/rust.lang source-highlight-3.1.8-Rust/src/rust.lang\\n<span class=\\"hljs-comment\\">--- source-highlight-3.1.8/src/rust.lang        1970-01-01 09:00:00.000000000 +0900</span>\\n<span class=\\"hljs-comment\\">+++ source-highlight-3.1.8-Rust/src/rust.lang   2019-03-10 13:09:20.711181631 +0900</span>\\n<span class=\\"hljs-meta\\">@@ -0,0 +1,18 @@</span>\\n<span class=\\"hljs-addition\\">+preproc = \\"import\\",\\"package\\"</span>\\n<span class=\\"hljs-addition\\">+</span>\\n<span class=\\"hljs-addition\\">+include \\"c_comment.lang\\"</span>\\n<span class=\\"hljs-addition\\">+</span>\\n<span class=\\"hljs-addition\\">+include \\"number.lang\\"</span>\\n<span class=\\"hljs-addition\\">+</span>\\n<span class=\\"hljs-addition\\">+string delim \\"\\\\\\"\\" \\"\\\\\\"\\" escape \\"\\\\\\\\\\"</span>\\n<span class=\\"hljs-addition\\">+string delim \\"\'\\" \\"\'\\"  escape \\"\\\\\\\\\\"</span>\\n<span class=\\"hljs-addition\\">+string delim \\"`\\" \\"`\\"  escape \\"\\\\\\\\\\" multiline</span>\\n<span class=\\"hljs-addition\\">+</span>\\n<span class=\\"hljs-addition\\">+keyword = \\"as|assert|break|const|copy|do|drop|else|enum|export|extern|fail|false|fn|for|if|impl|let|log|loop|match|mod|move|mut|p</span>\\nriv|pub|pure|ref|return|struct|true|trait|type|unsafe|use|while\\"\\n<span class=\\"hljs-addition\\">+keyword = \\"be|self|static|export|assert|log|fail\\"</span>\\n<span class=\\"hljs-addition\\">+</span>\\n<span class=\\"hljs-addition\\">+type = \\"bool|char|f32|f64|float|i8|i16|i32|i64|int|str|u8|u16|u32|u64|uint\\"</span>\\n<span class=\\"hljs-addition\\">+</span>\\n<span class=\\"hljs-addition\\">+include \\"symbols.lang\\"</span>\\n<span class=\\"hljs-addition\\">+</span>\\n<span class=\\"hljs-addition\\">+cbracket = \\"{|}\\"</span></code></pre>","dir":"article/.json/2019","base":"2019-03-10-source-highlight-Rust.json","ext":".json","sourceBase":"2019-03-10-source-highlight-Rust.md","sourceExt":".md"}')}}]);