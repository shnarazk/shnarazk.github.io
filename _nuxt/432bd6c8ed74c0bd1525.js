(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{552:function(n){n.exports=JSON.parse('{"title":"How to compile cargo-instruments","subtitle":"on NixOS on MacOS","date":"2020-06-07T00:00:00.000Z","tags":["Rust","macOS","nixOS"],"banner":"/img/2020/06-07/banner.jpg","bodyContent":"## プロファイリングしたいんじゃあ\\n\\nLinuxに比べてmacOSのなんと不自由なことか。\\nしかし、まともなLinuxマシンが手元にないのでなんとかmac上でプロファイリングしなければならない。\\ncargo-instrumentsというのがよさそうだ。\\n残念だけど、opensshのバージョン問題で単に`cargo install`とするだけではコンパイルできないようだ。\\nうーん、これはいつものパターンだな。\\n\\n## nix-shellでコンパイルしよう\\n\\n一つ一つ問題を潰して、こうなった。\\n\\n```plain\\n$ nix-shell -p openssl pkg-config libiconv darwin.apple_sdk.frameworks.Security libcurl\\n$ cargo install cargo-instruments\\n```\\n\\nこれは最後まで走るのだけど、最後の最後で`_CFURLSetResourcePropertyForKey`が見つからないエラーで失敗する。\\nどうもこれはnixOS上のrustのコンパイルでよく知られた問題のようで、rust関連のnix expressionにはコメントで出てきて、dirty hackで対応だ、みたいなことが書いてある。\\n-- `/nixpkgs/pkgs/development/tools/rust/cargo-geiger/`\\n\\n```plain\\n  # FIXME: Use impure version of CoreFoundation because of missing symbols.\\n  # CFURLSetResourcePropertyForKey is defined in the headers but there\'s no\\n  # corresponding implementation in the sources from opensource.apple.com.\\n  preConfigure = stdenv.lib.optionalString stdenv.isDarwin \'\'\\n    export NIX_CFLAGS_COMPILE=\\"-F${CoreFoundation}/Library/Frameworks $NIX_CFLAGS_COMPILE\\"\\n  \'\';\\n```\\n\\nだったら derivation を作るしかないか。\\n\\nTO BE CONTINUED","bodyHtml":"<h2>プロファイリングしたいんじゃあ</h2>\\n<p>Linuxに比べてmacOSのなんと不自由なことか。\\nしかし、まともなLinuxマシンが手元にないのでなんとかmac上でプロファイリングしなければならない。\\ncargo-instrumentsというのがよさそうだ。\\n残念だけど、opensshのバージョン問題で単に<code>cargo install</code>とするだけではコンパイルできないようだ。\\nうーん、これはいつものパターンだな。</p>\\n<h2>nix-shellでコンパイルしよう</h2>\\n<p>一つ一つ問題を潰して、こうなった。</p>\\n<pre><code class=\\"hljs\\">$ nix-shell -p openssl pkg-config libiconv darwin.apple_sdk.frameworks.Security libcurl\\n$ cargo install cargo-instruments</code></pre><p>これは最後まで走るのだけど、最後の最後で<code>_CFURLSetResourcePropertyForKey</code>が見つからないエラーで失敗する。\\nどうもこれはnixOS上のrustのコンパイルでよく知られた問題のようで、rust関連のnix expressionにはコメントで出てきて、dirty hackで対応だ、みたいなことが書いてある。\\n-- <code>/nixpkgs/pkgs/development/tools/rust/cargo-geiger/</code></p>\\n<pre><code class=\\"hljs\\"># FIXME: Use impure version of CoreFoundation because of missing symbols.\\n  # CFURLSetResourcePropertyForKey is defined in the headers but there\'s no\\n  # corresponding implementation in the sources from opensource.apple.com.\\n  preConfigure = stdenv.lib.optionalString stdenv.isDarwin \'\'\\n    export NIX_CFLAGS_COMPILE=\\"-F${CoreFoundation}/Library/Frameworks $NIX_CFLAGS_COMPILE\\"\\n  \'\';</code></pre><p>だったら derivation を作るしかないか。</p>\\n<p>TO BE CONTINUED</p>\\n","dir":"article/.json/2020","base":"2020-06-07-cargo-instruments.json","ext":".json","sourceBase":"2020-06-07-cargo-instruments.md","sourceExt":".md"}')}}]);