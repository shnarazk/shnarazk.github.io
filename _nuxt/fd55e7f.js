(window.webpackJsonp=window.webpackJsonp||[]).push([[114],{607:function(n){n.exports=JSON.parse('{"title":"UNSAT LOG, 2021, Mar.","subtitle":"Vol.2, No.3.","date":"2021-04-05T00:00:00.000Z","tags":["SAT","splr","unsatlog"],"banner":"/img/2021/03-28/banner.jpg","bodyContent":"# UNSATlog\\n\\n## Splr-0.7.1リリースのはずが\\n\\n前号を出したのが12日でそれから2週間足らずなので、Splr-0.7.1をリリースしたことしか書くことないよなあと思っていたら、リリース前のルーチンワークのベンチマークの検証中にエラーが発見されてしまった。\\n\\nまさか、UNSAT問題をSATと答えるなんて！\\nそれも、原因モジュールの同定に数時間かかることになってしまって、半日経っても何が問題なのかすら判明できていない有様。\\nちょっとこのバグはキツい。リリースは（楽観的にみて）1週間ほど延期になりそうだ。\\n\\nという以上の内容だけでvol.3を出して、Splr-0.7.1のリリースのタイミングで次の号を出し、そこで UNSAT logの号数を実暦に合わせよう。ああ、それだけが楽しみ。\\n\\n## 2021-04-02\\n\\nやっと、やっと、原因の節が特定できそう。`watch`が適切なリテラルを持ってない。\\n多分shrink, shortenでのリテラル削除に監視リテラルが追従してないようだ。\\n\\n```\\n$ splr aes.cnf\\naes.cnf                                      501284,2928183 |time:     5.21\\n #conflict:          0, #decision:            0, #propagate:         221128\\n  Assignment|#rem:    34160, #ass:   221128, #elm:   245996, prg%:  93.1855\\n      Clause|Remv:        0, LBD2:        0, Binc:  2472979, Perm:  4073761\\n     Restart|#BLK:        0, #RST:        0, trgr:        1, peak:        1\\n         LBD|avrg:   0.0000, trnd:      NaN, depG:   0.0000, /dpc:     0.00\\n    Conflict|tASG:      NaN, cLvl:     0.00, bLvl:     0.00, /ppc:     0.00\\n        misc|elim:        1, #sub:    87499, core:   501284, /cpr:     0.00\\nunreachable core: 24650\\n[src/cdb/db.rs:958] \\n  (l, w.blocker, w.c, &c.lits)\\n  = ( L151359, L158797, Cid3949122, [ L151358, L149809, L151175 ])\\n```\\n\\nこの結果を出すのに実行時間は3時間越え。\\n原因を正確につきとめようと細かくチェックを入れたら10時間経ってもコアサイズが31000を下回らなかった。\\n今日中に塞げるだろうか。\\n\\n## 2021-04-03\\n\\n塞げたような気がする。\\nまだ結論が出てないので「気がする」としか書きようがないのが、とにかく検証中。\\nバグによって偶然解けたことになってしまった問題なので、何時間かかっても解き、さらにそれが無謬であることを証明しなければならない。\\n計算が終わるまでじっと我慢しなくては。\\n\\n\\nダメだった。この結果を出すのに7時間。Splr開発史上ベスト3に入る難問。\\n\\n```\\n$ splr -t 50000 -c aes.cnf                                                                                 \\naes.cnf                                      501284,2928183 |time: 24585.10\\n #conflict:   16888219, #decision:     31352807, #propagate:     5559560810\\n  Assignment|#rem:     8797, #ass:   243789, #elm:   248698, prg%:  98.2451\\n      Clause|Remv:   798625, LBD2:    24841, Binc:  2484735, Perm:  8987095\\n     Restart|#BLK:     7868, #RST:     8946, trgr:        1, peak:      128\\n         LBD|avrg:   7.0407, trnd:   0.3329, depG:   4.9266, /dpc:     1.62\\n    Conflict|tASG:   0.0247, cLvl:   313.07, bLvl:   311.69, /ppc:    23.16\\n        misc|elim:       28, #sub:   101678, core:        0, /cpr:  1676.43\\n      Result|file: ./ans_aes.cnf\\ns SATISFIABLE: aes.cnf\\n```\\n\\n### 2021-04-05\\n\\nバグ取れた！\\n\\n- Eliminator でwatchを適切に更新してなかったため、`propagate`が単位節に気づかないことがあった。\\n- `ClauseDB::strengthen`でbiclauseになった節の`LEARNT`フラグを落としてなかっため、設定次第で`reduce_db`が回収してしまっていた。\\n\\nということらしい。以下の通り、4時間掛かって検証できた。\\n\\n```\\n[04-05T15:48:54]$ splr -c -t 300000 aes.cnf\\naes.cnf                                      501284,2928183 |time: 13814.37\\n #conflict:   25313304, #decision:     50455202, #propagate:     4858368671\\n  Assignment|#rem:     8700, #ass:   243745, #elm:   248839, prg%:  98.2645\\n      Clause|Remv:   549214, LBD2:    43074, Binc:  2485952, Perm:  4429040\\n     Restart|#BLK:     9997, #RST:    13738, trgr:        8, peak:      128\\n         LBD|avrg:   2.6736, trnd:   0.3569, depG:   4.7183, /dpc:     1.01\\n    Conflict|tASG:   1.0058, cLvl:     9.60, bLvl:     8.36, /ppc:    10.11\\n        misc|elim:       52, #sub:   102614, core:        4, /cpr:   282.31\\n      Result|file: ./ans_aes.cnf\\n Certificate|file: proof.drat\\ns UNSATISFIABLE: aes.cnf\\n[04-05T19:39:15]$ gratgen aes.cnf proof.drat -o proof.grat \\nc sizeof(cdb_t) = 4\\nc sizeof(cdb_t*) = 8\\nc Using RAT run heuristics\\nc Parsing formula ... 4035ms\\nc Parsing proof (ASCII format) ... 907366ms\\nc Forward pass ... 41143ms\\nc Starting Backward pass\\nc Single threaded mode\\nc Waiting for aux-threads ...done\\nc Lemmas processed by threads: 3649502 mdev: 0\\nc Finished Backward pass: 305584ms\\nc Writing combined proof ... 17723ms\\ns VERIFIED\\nc Timing statistics (ms)\\nc Parsing:  911402\\nc Checking: 347424\\nc   * bwd:  305584\\nc Writing:  17723\\nc Overall:  1277911\\nc   * vrf:  1260188\\n\\nc Lemma statistics\\nc RUP lemmas:  3649502\\nc RAT lemmas:  0\\nc   RAT run heuristics:   0\\nc Total lemmas:  3649502\\n\\nc Size statistics (bytes)\\nc Number of clauses: 33358889\\nc Clause DB size:  6030820484\\nc Item list:       986114048\\nc Pivots store:    134217728\\n[04-05T20:39:29]$ gratchk unsat aes.cnf proof.grat\\nc Reading cnf\\nc Reading proof\\nc Done\\nc Verifying unsat\\ns VERIFIED UNSAT\\n[T20:55:04]$\\n```\\n\\nただ時々、SATになっちゃうことがあるんだなあ。あるいは実行時間が大きく変動したりとか。\\n今のSplrに非決定性はないので、ハードウェアエラーくらいしか理由が思いつかない。。。","bodyHtml":"<h1>UNSATlog</h1>\\n<h2>Splr-0.7.1リリースのはずが</h2>\\n<p>前号を出したのが12日でそれから2週間足らずなので、Splr-0.7.1をリリースしたことしか書くことないよなあと思っていたら、リリース前のルーチンワークのベンチマークの検証中にエラーが発見されてしまった。</p>\\n<p>まさか、UNSAT問題をSATと答えるなんて！\\nそれも、原因モジュールの同定に数時間かかることになってしまって、半日経っても何が問題なのかすら判明できていない有様。\\nちょっとこのバグはキツい。リリースは（楽観的にみて）1週間ほど延期になりそうだ。</p>\\n<p>という以上の内容だけでvol.3を出して、Splr-0.7.1のリリースのタイミングで次の号を出し、そこで UNSAT logの号数を実暦に合わせよう。ああ、それだけが楽しみ。</p>\\n<h2>2021-04-02</h2>\\n<p>やっと、やっと、原因の節が特定できそう。<code>watch</code>が適切なリテラルを持ってない。\\n多分shrink, shortenでのリテラル削除に監視リテラルが追従してないようだ。</p>\\n<pre><code>$ splr aes.cnf\\naes.cnf                                      501284,2928183 |time:     5.21\\n #conflict:          0, #decision:            0, #propagate:         221128\\n  Assignment|#rem:    34160, #ass:   221128, #elm:   245996, prg%:  93.1855\\n      Clause|Remv:        0, LBD2:        0, Binc:  2472979, Perm:  4073761\\n     Restart|#BLK:        0, #RST:        0, trgr:        1, peak:        1\\n         LBD|avrg:   0.0000, trnd:      NaN, depG:   0.0000, /dpc:     0.00\\n    Conflict|tASG:      NaN, cLvl:     0.00, bLvl:     0.00, /ppc:     0.00\\n        misc|elim:        1, #sub:    87499, core:   501284, /cpr:     0.00\\nunreachable core: 24650\\n[src/cdb/db.rs:958] \\n  (l, w.blocker, w.c, &amp;c.lits)\\n  = ( L151359, L158797, Cid3949122, [ L151358, L149809, L151175 ])\\n</code></pre>\\n<p>この結果を出すのに実行時間は3時間越え。\\n原因を正確につきとめようと細かくチェックを入れたら10時間経ってもコアサイズが31000を下回らなかった。\\n今日中に塞げるだろうか。</p>\\n<h2>2021-04-03</h2>\\n<p>塞げたような気がする。\\nまだ結論が出てないので「気がする」としか書きようがないのが、とにかく検証中。\\nバグによって偶然解けたことになってしまった問題なので、何時間かかっても解き、さらにそれが無謬であることを証明しなければならない。\\n計算が終わるまでじっと我慢しなくては。</p>\\n<p>ダメだった。この結果を出すのに7時間。Splr開発史上ベスト3に入る難問。</p>\\n<pre><code>$ splr -t 50000 -c aes.cnf                                                                                 \\naes.cnf                                      501284,2928183 |time: 24585.10\\n #conflict:   16888219, #decision:     31352807, #propagate:     5559560810\\n  Assignment|#rem:     8797, #ass:   243789, #elm:   248698, prg%:  98.2451\\n      Clause|Remv:   798625, LBD2:    24841, Binc:  2484735, Perm:  8987095\\n     Restart|#BLK:     7868, #RST:     8946, trgr:        1, peak:      128\\n         LBD|avrg:   7.0407, trnd:   0.3329, depG:   4.9266, /dpc:     1.62\\n    Conflict|tASG:   0.0247, cLvl:   313.07, bLvl:   311.69, /ppc:    23.16\\n        misc|elim:       28, #sub:   101678, core:        0, /cpr:  1676.43\\n      Result|file: ./ans_aes.cnf\\ns SATISFIABLE: aes.cnf\\n</code></pre>\\n<h3>2021-04-05</h3>\\n<p>バグ取れた！</p>\\n<ul>\\n<li>Eliminator でwatchを適切に更新してなかったため、<code>propagate</code>が単位節に気づかないことがあった。</li>\\n<li><code>ClauseDB::strengthen</code>でbiclauseになった節の<code>LEARNT</code>フラグを落としてなかっため、設定次第で<code>reduce_db</code>が回収してしまっていた。</li>\\n</ul>\\n<p>ということらしい。以下の通り、4時間掛かって検証できた。</p>\\n<pre><code>[04-05T15:48:54]$ splr -c -t 300000 aes.cnf\\naes.cnf                                      501284,2928183 |time: 13814.37\\n #conflict:   25313304, #decision:     50455202, #propagate:     4858368671\\n  Assignment|#rem:     8700, #ass:   243745, #elm:   248839, prg%:  98.2645\\n      Clause|Remv:   549214, LBD2:    43074, Binc:  2485952, Perm:  4429040\\n     Restart|#BLK:     9997, #RST:    13738, trgr:        8, peak:      128\\n         LBD|avrg:   2.6736, trnd:   0.3569, depG:   4.7183, /dpc:     1.01\\n    Conflict|tASG:   1.0058, cLvl:     9.60, bLvl:     8.36, /ppc:    10.11\\n        misc|elim:       52, #sub:   102614, core:        4, /cpr:   282.31\\n      Result|file: ./ans_aes.cnf\\n Certificate|file: proof.drat\\ns UNSATISFIABLE: aes.cnf\\n[04-05T19:39:15]$ gratgen aes.cnf proof.drat -o proof.grat \\nc sizeof(cdb_t) = 4\\nc sizeof(cdb_t*) = 8\\nc Using RAT run heuristics\\nc Parsing formula ... 4035ms\\nc Parsing proof (ASCII format) ... 907366ms\\nc Forward pass ... 41143ms\\nc Starting Backward pass\\nc Single threaded mode\\nc Waiting for aux-threads ...done\\nc Lemmas processed by threads: 3649502 mdev: 0\\nc Finished Backward pass: 305584ms\\nc Writing combined proof ... 17723ms\\ns VERIFIED\\nc Timing statistics (ms)\\nc Parsing:  911402\\nc Checking: 347424\\nc   * bwd:  305584\\nc Writing:  17723\\nc Overall:  1277911\\nc   * vrf:  1260188\\n\\nc Lemma statistics\\nc RUP lemmas:  3649502\\nc RAT lemmas:  0\\nc   RAT run heuristics:   0\\nc Total lemmas:  3649502\\n\\nc Size statistics (bytes)\\nc Number of clauses: 33358889\\nc Clause DB size:  6030820484\\nc Item list:       986114048\\nc Pivots store:    134217728\\n[04-05T20:39:29]$ gratchk unsat aes.cnf proof.grat\\nc Reading cnf\\nc Reading proof\\nc Done\\nc Verifying unsat\\ns VERIFIED UNSAT\\n[T20:55:04]$\\n</code></pre>\\n<p>ただ時々、SATになっちゃうことがあるんだなあ。あるいは実行時間が大きく変動したりとか。\\n今のSplrに非決定性はないので、ハードウェアエラーくらいしか理由が思いつかない。。。</p>\\n","dir":"article/.json/2021","base":"2021-03-28-UNSATlog.json","ext":".json","sourceBase":"2021-03-28-UNSATlog.md","sourceExt":".md"}')}}]);