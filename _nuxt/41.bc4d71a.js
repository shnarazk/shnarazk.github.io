(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{513:function(n){n.exports=JSON.parse('{"title":"GTK development on Nix on macOS","subtitle":"これでどこでもgtkでいいじゃん","date":"2020-07-05T00:00:00.000Z","tags":["gtk","NixOS","macOS"],"bodyContent":"## C\\n\\n- sample target: https://developer.gnome.org/gtk3/stable/gtk-getting-started.html\\n\\nDive into the environment:\\n\\n```shell\\nnix-shell -p gtk3 gcc pkgconfig\\n```\\n\\nAnd compile:\\n```shell\\ngcc `pkg-config --cflags gtk+-3.0` -o example example.c `pkg-config --libs gtk+-3.0`\\n```\\n\\nThat works.\\n\\n## Rust (updated at 2020-07-05)\\n\\nIf you need not to install your project as a nix package, just run:\\n\\n```shell\\n$ nix-shell -p gtk3 pkgconfig\\n```\\n\\n## Rust\\n\\n- package: https://crates.io/crates/gtk  \\n   - Cargo.toml: `gtk = 0.9`\\n   - Cargo.toml: `gtk = 0.5`  # 0.6 requires unstable channel as of 2019-03-14\\n   - Cargo.toml: `gtk = 0.6`  # for stable channel as of 2019-07-02\\n- sample target: https://github.com/gtk-rs/gtk/blob/master/src/rt.rs\\n\\nStart with the same approach:\\n\\n```shell\\n$ nix-shell -p gtk3 pkgconfig rustc cargo llvm\\n$ cargo run\\n    Finished dev [unoptimized + debuginfo] target(s) in 0.21s                                       \\n     Running `target/debug/gtktest`\\nthread \'main\' panicked at \'libgtk-3 was configured with `--enable-debug=no`. See https://github.com/gtk-rs/gtk/issues/270 for details\', ~/.cargo/registry/src/github.com-1ecc6299db9ec823/gtk-0.5.0/src/rt.rs:137:13\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\n```\\n\\n- the issue: https://github.com/gtk-rs/gtk/issues/270\\n- src:  [nix expression for gtk3](https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/libraries/gtk%2B/3.x.nix)\\n\\n\\nSo let\'s make an overlay:\\n\\n```\\nself: super:\\n{\\n    gtk3RustDarwin = super.gtk3.overrideDerivation (attrs: { \\n        configureFlags = [\\n            \\"--enable-debug\\"\\n            \\"--disable-dependency-tracking\\"\\n            \\"--disable-glibtest\\"\\n            \\"--enable-quartz-backend\\"\\n        ];\\n    });\\n}\\n```\\n\\nWhat\'s `overrideDerivation`? It\'s a [deprecated](https://nixos.org/nixpkgs/manual/#sec-pkg-overrideDerivation) function.\\nSo the following seems better:\\n\\n```\\nself: super:\\n{\\n    gtk3RustDarwin = super.gtk3.overrideAttrs (attrs: rec {\\n        configureFlags = [\\n            \\"--enable-debug\\"\\n            \\"--disable-dependency-tracking\\"\\n            \\"--disable-glibtest\\"\\n            \\"--enable-quartz-backend\\"\\n        ];\\n    });\\n}\\n```\\n\\nAnyway, give it a try.\\n\\n```shell\\n$ nix-shell -p gtk3RustDarwin pkgconfig rustc cargo llvm\\n$ cargo clean  # to purge the previous attempt\\n$ cargo run\\n```\\n\\nThat works!","bodyHtml":"<h2>C</h2>\\n<ul>\\n<li>sample target: https://developer.gnome.org/gtk3/stable/gtk-getting-started.html</li>\\n</ul>\\n<p>Dive into the environment:</p>\\n<pre><code class=\\"hljs\\">nix-shell -p gtk3 gcc pkgconfig</code></pre><p>And compile:</p>\\n<pre><code class=\\"hljs\\">gcc `pkg-config --cflags gtk+-3.0` -o example example.c `pkg-config --libs gtk+-3.0`</code></pre><p>That works.</p>\\n<h2>Rust (updated at 2020-07-05)</h2>\\n<p>If you need not to install your project as a nix package, just run:</p>\\n<pre><code class=\\"hljs\\"><span class=\\"hljs-meta\\">$</span><span class=\\"bash\\"> nix-shell -p gtk3 pkgconfig</span></code></pre><h2>Rust</h2>\\n<ul>\\n<li>package: https://crates.io/crates/gtk\\n<ul>\\n<li>Cargo.toml: <code>gtk = 0.9</code></li>\\n<li>Cargo.toml: <code>gtk = 0.5</code>  # 0.6 requires unstable channel as of 2019-03-14</li>\\n<li>Cargo.toml: <code>gtk = 0.6</code>  # for stable channel as of 2019-07-02</li>\\n</ul>\\n</li>\\n<li>sample target: https://github.com/gtk-rs/gtk/blob/master/src/rt.rs</li>\\n</ul>\\n<p>Start with the same approach:</p>\\n<pre><code class=\\"hljs\\"><span class=\\"hljs-meta\\">$</span><span class=\\"bash\\"> nix-shell -p gtk3 pkgconfig rustc cargo llvm</span>\\n<span class=\\"hljs-meta\\">$</span><span class=\\"bash\\"> cargo run</span>\\n    Finished dev [unoptimized + debuginfo] target(s) in 0.21s                                       \\n     Running `target/debug/gtktest`\\nthread \'main\' panicked at \'libgtk-3 was configured with `--enable-debug=no`. See https://github.com/gtk-rs/gtk/issues/270 for details\', ~/.cargo/registry/src/github.com-1ecc6299db9ec823/gtk-0.5.0/src/rt.rs:137:13\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.</code></pre><ul>\\n<li>the issue: https://github.com/gtk-rs/gtk/issues/270</li>\\n<li>src:  <a href=\\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/libraries/gtk%2B/3.x.nix\\">nix expression for gtk3</a></li>\\n</ul>\\n<p>So let\'s make an overlay:</p>\\n<pre><code>self: super:\\n{\\n    gtk3RustDarwin = super.gtk3.overrideDerivation (attrs: { \\n        configureFlags = [\\n            &quot;--enable-debug&quot;\\n            &quot;--disable-dependency-tracking&quot;\\n            &quot;--disable-glibtest&quot;\\n            &quot;--enable-quartz-backend&quot;\\n        ];\\n    });\\n}\\n</code></pre>\\n<p>What\'s <code>overrideDerivation</code>? It\'s a <a href=\\"https://nixos.org/nixpkgs/manual/#sec-pkg-overrideDerivation\\">deprecated</a> function.\\nSo the following seems better:</p>\\n<pre><code>self: super:\\n{\\n    gtk3RustDarwin = super.gtk3.overrideAttrs (attrs: rec {\\n        configureFlags = [\\n            &quot;--enable-debug&quot;\\n            &quot;--disable-dependency-tracking&quot;\\n            &quot;--disable-glibtest&quot;\\n            &quot;--enable-quartz-backend&quot;\\n        ];\\n    });\\n}\\n</code></pre>\\n<p>Anyway, give it a try.</p>\\n<pre><code class=\\"hljs\\"><span class=\\"hljs-meta\\">$</span><span class=\\"bash\\"> nix-shell -p gtk3RustDarwin pkgconfig rustc cargo llvm</span>\\n<span class=\\"hljs-meta\\">$</span><span class=\\"bash\\"> cargo clean  <span class=\\"hljs-comment\\"># to purge the previous attempt</span></span>\\n<span class=\\"hljs-meta\\">$</span><span class=\\"bash\\"> cargo run</span></code></pre><p>That works!</p>\\n","dir":"article/.json/2019","base":"2019-03-14-gtk-development-on-nix.json","ext":".json","sourceBase":"2019-03-14-gtk-development-on-nix.md","sourceExt":".md"}')}}]);