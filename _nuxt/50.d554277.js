(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{527:function(n){n.exports=JSON.parse('{"title":"About Observable","subtitle":"強力な可視化機能を手に入れた","date":"2019-08-04T00:00:00.000Z","tags":["javascript","Observable","Nuxt"],"bodyContent":"Javascript版jupyterのようなものの一つの[Observable](https://observablehq.com/)。\\n可視化の結果を貼り付けられるように、Nuxtベースのこのブログに組み込めないか現在考え中。\\nとりあえず[こういうこと](https://observablehq.com/d/1cbb7a450b192e69)ができるなら、\\nやる価値はありそうだ。\\n\\nまず、以下のコードでObservableのノートは一つのJavascriptにexportできるらしい。\\n\\n```js\\n<script type=\\"module\\">\\nimport {Runtime, Inspector} from \\"https://cdn.jsdelivr.net/npm/@observablehq/runtime@4/dist/runtime.js\\";\\nimport notebook from \\"https://api.observablehq.com/d/1cbb7a450b192e69.js?v=3\\";\\nnew Runtime().module(notebook, Inspector.into(document.body));\\n<\/script>\\n```\\n\\nなので、それをfetchするような専用のテンプレートを用意すれば埋め込めるはず。\\n\\n- pages/_year/_slug/index.vue\\n- pages/_year/_slug/observable/index.vue\\n\\nみたいにすればいいのでは。でその中身は、\\n\\n```js\\n<script>\\nawait fetch()\\n<script>\\n```\\n\\nはて？ templateの中に書けるのかしらん？\\nさっきのコードをちゃんと読んで、だんだんわかってきた。\\njquery的なDOM mountが前提だ。vueの仮想DOMとは相性悪そう。。。\\n\\n<script type=\\"module\\">\\nimport {Runtime, Inspector} from \\"https://cdn.jsdelivr.net/npm/@observablehq/runtime@4/dist/runtime.js\\";\\nimport notebook from \\"https://api.observablehq.com/d/1cbb7a450b192e69.js?v=3\\";\\nnew Runtime().module(notebook, Inspector.into(document.body));\\n<\/script>\\n\\nとりあえずでっち上げたもの： \\n\\n- https://shnarazk.now.sh/obs/\\n- https://shnarazk.now.sh/obs/index.html\\n\\nrouterを設定しないといけない？？\\n\\n## 2019-08-01T21:05 上手くいったversion 0.1\\n\\nまずインデックスページにJSONおよびエントリをでっち上げて\\nnuxt-linkで振ってみる。このようなObservable由来のページは\\n\\n- pages/_year/_slug/obs/index.vue\\n\\nに処理させることにした。index.vueの中身は以下の通り。\\ntemplate中のscriptはObservableのマニュアルにあったものをそのまま流用。\\n\\n```js\\n<template>\\n  <div>\\n    <Header title=\\"Embedded Observable\\" />\\n    <section class=\\"section\\">\\n      <div id=\\"Observed\\"></div>\\n      <EntryFooter tags=\\"[\'Observable\']\\" />\\n    </section>\\n    <script type=\\"module\\">\\n      import {\\n        Runtime,\\n        Inspector\\n      } from \'https://cdn.jsdelivr.net/npm/@observablehq/runtime@4/dist/runtime.js\'\\n      import notebook from \'https://api.observablehq.com/d/1cbb7a450b192e69.js?v=3\'\\n      new Runtime().module(notebook, Inspector.into(\'#Observed\'))\\n    <\/script>\\n  </div>\\n</template>\\n<script>\\nimport Header from \'~/components/TheHeader\'\\nimport EntryFooter from \'~/components/EntryFooter\'\\nexport default {\\n  components: {\\n    Header,\\n    EntryFooter\\n  }\\n}\\n<\/script>\\n```\\n\\n仮想DOMとの協調は不安定だが中身は`#Obesarbable`な要素に取り込まれ、\\n他のエントリと同じ体裁で表示できるようになった。\\nDOMの上書き問題は適切なidを作成してやればいいだろう。\\nあとはvuexにうまく取り込めばいい。\\n\\n## 2019-08-03T21:05 上手くいったversion 0.9\\n\\n先日の方法を延長するだけでうまくいきそうだ。\\n\\n- mdから作ったjsonファイルにObservable用の手書きJSONを混ぜてvuexに登録\\n- Observableのnotebookに対するend pointは先に書いた通り\\n  - pages/_year/_slug/obs/index.vue\\n  に対応させる。\\n- canvasの埋め込み先はObservableでのnotebook idを`_sulg`としたユニークな`dvi`要素にすることで、\\n  仮想DOMによる干渉を極力避ける。\\n- `\\\\deep\\\\`対応したCSSを用意してあげる。\\n  ただしcanvasのサイズがピクセルで固定なのはどう対応したものか見当つかない。\\n\\nまあ、これくらいで最低限のことはできるようになった。\\n\\n```js\\n<template>\\n  <div>\\n    <Header title=\\"Embedded Observable Notebook\\" />\\n    <section class=\\"section\\">\\n      <h1 class=\\"title has-text-primary has-text-weight-semibold\\">\\n        <a :href=\\"\'https://observablehq.com/d/\' + $route.params.slug\\">\\n          Id #_{{ $route.params.slug }}\\n        </a>\\n      </h1>\\n      <div :id=\\"\'_\' + $route.params.slug\\" class=\\"observable-content\\"></div>\\n      <EntryFooter :tags=\\"[\'Observable\']\\" />\\n    </section>\\n    <script type=\\"module\\">\\n      import {\\n        Runtime,\\n        Inspector\\n      } from \'https://cdn.jsdelivr.net/npm/@observablehq/runtime@4/dist/runtime.js\'\\n      import notebook from \'https://api.observablehq.com/d/{{$route.params.slug}}.js?v=3\'\\n      new Runtime().module(notebook, Inspector.into(\'{{\'#_\' + $route.params.slug}}\'))\\n    <\/script>\\n  </div>\\n</template>\\n<script>\\nimport Header from \'~/components/TheHeader\'\\nimport EntryFooter from \'~/components/EntryFooter\'\\nexport default {\\n  components: {\\n    Header,\\n    EntryFooter\\n  }\\n}\\n<\/script>\\n```","bodyHtml":"<p>Javascript版jupyterのようなものの一つの<a href=\\"https://observablehq.com/\\">Observable</a>。\\n可視化の結果を貼り付けられるように、Nuxtベースのこのブログに組み込めないか現在考え中。\\nとりあえず<a href=\\"https://observablehq.com/d/1cbb7a450b192e69\\">こういうこと</a>ができるなら、\\nやる価値はありそうだ。</p>\\n<p>まず、以下のコードでObservableのノートは一つのJavascriptにexportできるらしい。</p>\\n<pre><code class=\\"hljs\\">&lt;script type=<span class=\\"hljs-string\\">\\"module\\"</span>&gt;\\n<span class=\\"hljs-keyword\\">import</span> {Runtime, Inspector} <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\\"https://cdn.jsdelivr.net/npm/@observablehq/runtime@4/dist/runtime.js\\"</span>;\\n<span class=\\"hljs-keyword\\">import</span> notebook <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\\"https://api.observablehq.com/d/1cbb7a450b192e69.js?v=3\\"</span>;\\n<span class=\\"hljs-keyword\\">new</span> Runtime().module(notebook, Inspector.into(<span class=\\"hljs-built_in\\">document</span>.body));\\n<span class=\\"xml\\"><span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">script</span>&gt;</span></span></code></pre><p>なので、それをfetchするような専用のテンプレートを用意すれば埋め込めるはず。</p>\\n<ul>\\n<li>pages/_year/_slug/index.vue</li>\\n<li>pages/_year/_slug/observable/index.vue</li>\\n</ul>\\n<p>みたいにすればいいのでは。でその中身は、</p>\\n<pre><code class=\\"hljs\\">&lt;script&gt;\\n<span class=\\"hljs-keyword\\">await</span> fetch()\\n&lt;script&gt;</code></pre><p>はて？ templateの中に書けるのかしらん？\\nさっきのコードをちゃんと読んで、だんだんわかってきた。\\njquery的なDOM mountが前提だ。vueの仮想DOMとは相性悪そう。。。</p>\\n<p>&lt;script type=&quot;module&quot;&gt;\\nimport {Runtime, Inspector} from &quot;https://cdn.jsdelivr.net/npm/@observablehq/runtime@4/dist/runtime.js&quot;;\\nimport notebook from &quot;https://api.observablehq.com/d/1cbb7a450b192e69.js?v=3&quot;;\\nnew Runtime().module(notebook, Inspector.into(document.body));\\n&lt;/script&gt;</p>\\n<p>とりあえずでっち上げたもの：</p>\\n<ul>\\n<li>https://shnarazk.now.sh/obs/</li>\\n<li>https://shnarazk.now.sh/obs/index.html</li>\\n</ul>\\n<p>routerを設定しないといけない？？</p>\\n<h2>2019-08-01T21:05 上手くいったversion 0.1</h2>\\n<p>まずインデックスページにJSONおよびエントリをでっち上げて\\nnuxt-linkで振ってみる。このようなObservable由来のページは</p>\\n<ul>\\n<li>pages/_year/_slug/obs/index.vue</li>\\n</ul>\\n<p>に処理させることにした。index.vueの中身は以下の通り。\\ntemplate中のscriptはObservableのマニュアルにあったものをそのまま流用。</p>\\n<pre><code class=\\"hljs\\">&lt;template&gt;\\n  <span class=\\"xml\\"><span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">div</span>&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">Header</span> <span class=\\"hljs-attr\\">title</span>=<span class=\\"hljs-string\\">\\"Embedded Observable\\"</span> /&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">section</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\"section\\"</span>&gt;</span>\\n      <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">div</span> <span class=\\"hljs-attr\\">id</span>=<span class=\\"hljs-string\\">\\"Observed\\"</span>&gt;</span><span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">div</span>&gt;</span>\\n      <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">EntryFooter</span> <span class=\\"hljs-attr\\">tags</span>=<span class=\\"hljs-string\\">\\"[\'Observable\']\\"</span> /&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">section</span>&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">script</span> <span class=\\"hljs-attr\\">type</span>=<span class=\\"hljs-string\\">\\"module\\"</span>&gt;</span><span class=\\"javascript\\">\\n      <span class=\\"hljs-keyword\\">import</span> {\\n        Runtime,\\n        Inspector\\n      } <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\'https://cdn.jsdelivr.net/npm/@observablehq/runtime@4/dist/runtime.js\'</span>\\n      <span class=\\"hljs-keyword\\">import</span> notebook <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\'https://api.observablehq.com/d/1cbb7a450b192e69.js?v=3\'</span>\\n      <span class=\\"hljs-keyword\\">new</span> Runtime().module(notebook, Inspector.into(<span class=\\"hljs-string\\">\'#Observed\'</span>))\\n    </span><span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">script</span>&gt;</span>\\n  <span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">div</span>&gt;</span>\\n<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">template</span>&gt;</span>\\n<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">script</span>&gt;</span><span class=\\"javascript\\">\\n<span class=\\"hljs-keyword\\">import</span> Header <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\'~/components/TheHeader\'</span>\\n<span class=\\"hljs-keyword\\">import</span> EntryFooter <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\'~/components/EntryFooter\'</span>\\n<span class=\\"hljs-keyword\\">export</span> <span class=\\"hljs-keyword\\">default</span> {\\n  <span class=\\"hljs-attr\\">components</span>: {\\n    Header,\\n    EntryFooter\\n  }\\n}\\n</span><span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">script</span>&gt;</span></span></code></pre><p>仮想DOMとの協調は不安定だが中身は<code>#Obesarbable</code>な要素に取り込まれ、\\n他のエントリと同じ体裁で表示できるようになった。\\nDOMの上書き問題は適切なidを作成してやればいいだろう。\\nあとはvuexにうまく取り込めばいい。</p>\\n<h2>2019-08-03T21:05 上手くいったversion 0.9</h2>\\n<p>先日の方法を延長するだけでうまくいきそうだ。</p>\\n<ul>\\n<li>mdから作ったjsonファイルにObservable用の手書きJSONを混ぜてvuexに登録</li>\\n<li>Observableのnotebookに対するend pointは先に書いた通り\\n<ul>\\n<li>pages/_year/_slug/obs/index.vue\\nに対応させる。</li>\\n</ul>\\n</li>\\n<li>canvasの埋め込み先はObservableでのnotebook idを<code>_sulg</code>としたユニークな<code>dvi</code>要素にすることで、\\n仮想DOMによる干渉を極力避ける。</li>\\n<li><code>\\\\deep\\\\</code>対応したCSSを用意してあげる。\\nただしcanvasのサイズがピクセルで固定なのはどう対応したものか見当つかない。</li>\\n</ul>\\n<p>まあ、これくらいで最低限のことはできるようになった。</p>\\n<pre><code class=\\"hljs\\">&lt;template&gt;\\n  <span class=\\"xml\\"><span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">div</span>&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">Header</span> <span class=\\"hljs-attr\\">title</span>=<span class=\\"hljs-string\\">\\"Embedded Observable Notebook\\"</span> /&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">section</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\"section\\"</span>&gt;</span>\\n      <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">h1</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\"title has-text-primary has-text-weight-semibold\\"</span>&gt;</span>\\n        <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">a</span> <span class=\\"hljs-attr\\">:href</span>=<span class=\\"hljs-string\\">\\"\'https://observablehq.com/d/\' + $route.params.slug\\"</span>&gt;</span>\\n          Id #_{{ $route.params.slug }}\\n        <span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">a</span>&gt;</span>\\n      <span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">h1</span>&gt;</span>\\n      <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">div</span> <span class=\\"hljs-attr\\">:id</span>=<span class=\\"hljs-string\\">\\"\'_\' + $route.params.slug\\"</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\"observable-content\\"</span>&gt;</span><span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">div</span>&gt;</span>\\n      <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">EntryFooter</span> <span class=\\"hljs-attr\\">:tags</span>=<span class=\\"hljs-string\\">\\"[\'Observable\']\\"</span> /&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">section</span>&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">script</span> <span class=\\"hljs-attr\\">type</span>=<span class=\\"hljs-string\\">\\"module\\"</span>&gt;</span><span class=\\"actionscript\\">\\n      <span class=\\"hljs-meta\\"><span class=\\"hljs-meta-keyword\\">import</span> {\\n        Runtime,\\n        Inspector\\n      } from \'https://cdn.jsdelivr.net/npm/@observablehq/runtime@4/dist/runtime.js\'\\n      <span class=\\"hljs-meta-keyword\\">import</span> notebook from \'https://api.observablehq.com/d/{{$route.params.slug}}.js?v=3\'\\n      new Runtime().module(notebook, Inspector.into(\'{{\'#_\' + $route.params.slug}}\'))\\n    </span></span><span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">script</span>&gt;</span>\\n  <span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">div</span>&gt;</span>\\n<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">template</span>&gt;</span>\\n<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">script</span>&gt;</span><span class=\\"javascript\\">\\n<span class=\\"hljs-keyword\\">import</span> Header <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\'~/components/TheHeader\'</span>\\n<span class=\\"hljs-keyword\\">import</span> EntryFooter <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\'~/components/EntryFooter\'</span>\\n<span class=\\"hljs-keyword\\">export</span> <span class=\\"hljs-keyword\\">default</span> {\\n  <span class=\\"hljs-attr\\">components</span>: {\\n    Header,\\n    EntryFooter\\n  }\\n}\\n</span><span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">script</span>&gt;</span></span></code></pre>","dir":"article/.json/2019","base":"2019-07-31-observable.json","ext":".json","sourceBase":"2019-07-31-observable.md","sourceExt":".md"}')}}]);