(window.webpackJsonp=window.webpackJsonp||[]).push([[111],{604:function(n){n.exports=JSON.parse('{"title":"UNSAT LOG, 2021, Feb.","subtitle":"Vol.2, No.2.","date":"2021-03-09T00:00:00.000Z","tags":["SAT","splr","unsatlog"],"banner":"/img/2021/03-09/banner.jpg","bodyContent":"# UNSAT log\\n\\n## 2月の振り返り\\n\\n2月はSplr-0.6シリーズのポイントリリースを2つ。\\nまあ大したものではないのだけど、内部的にはイオンという考え方について色々試してみた。\\nそして3月になってからリリースされた0.7.0で結局削除ということになりました。\\nこれも含め0.7.0はうまくいかないアイデアを結構整理して削除するようなリリースとなりました。\\n\\n## イオン\\n\\n非常に単純化してSAT求解過程のモデルを作るなら、無矛盾なリテラル集合を大きくしていく過程をイメージするのがいいだろう。\\nこの集合には変数活性度が高いものから組み込まれていく。\\nなので、ここに含まれていない変数は大きな活性度は持っていないはずである。\\n逆にこの条件を満足しない変数はそれ自身がある種のブロッカーすなわち「求解の妨げとなる変数」になっていると思われるので、（導入したステージベースのvar boostingという実装で）フォーカスして集中的に解くのは意味があるのではないだろうか、\\nそこで求解進行状況の尺度として、後から意思決定の尺度としてこの条件を満足しない変数を調査してみた。\\nfixされてなくて高いエネルギー準位にいるのだからそのような変数をイオンというのは妥当なものではなかろうか。\\nしかし、var boostingというアイデアが全然うまくいかないので、この尺度も短期間で放棄されることになりました。\\nまあ、そもそも適度なリスタートがあるのなら、変数活性度だけでうまくドライブされるはずではある。\\n\\n## 0.6.3までのまとめ\\n\\nということでSplrはLuby列によって長さが制御されるステージベースで節削減、節包摂、変数活性度減衰率、リスタート条件を変えるという問題に応じた制御パラメータの動的摂動が売りのソルバーということになった。\\nまあ、妥当なところだろう。\\nで、これは結局0.1時代のなぜかいい結果が得られていたassert数が伸びない時にはリスタートをブロックする話とさほど違わないものなのだった。\\n本当に0.3歩前進、0.2歩下がるという感じだ。\\n\\n## 0.7.0がリリース\\n\\n3月にだいぶ食い込みましたが今日0.7.0もリリースできました。\\nこのバージョンではrestart blocking threshold を変えるだけではなく、var decay rateも変えて変数順序の逆転が起きにくくするようにした。\\nrestart 条件を厳しくするだけではstabilizeにならないのではなかろうか。\\nそして、eliminatorの設定を変えてみた。\\n節数や変数数を闇雲に減らすより、依存グラフが大きくならない、よい学習節を作り、将来の矛盾生成効率を上げることの方が重要のようだ。\\nこのようなサブモジュールの調整だけで終わって0.6.4がリリースできると思ったら、最後にローカル変数のexport周りを修正したので行数的には大きな変更になり、trait 含めてexportするものがいろいろと変更されたので性能は上がってないけどマイナーバージョンあげるしかないよなあというリリースになりました。\\n全然ベンチマークでは性能改善してないみたいけど、UF360とかの問題では目に見えてよくなっていると思うのだけどなあ。\\n\\n## 今月の目標\\n\\n[先月立てた目標](/2021/2021-02-02-UNSATlog)がなかなか達成できてないので、今月もSplrの開発をお休みして、ということは今年もSAT competitionには出せなくって、論文を読むべきなのですが、論文を読む前に圏論の勉強をしていたり、ClauseIdの一部をポインタに切り替えると性能が上がるかどうかに非常に興味が湧いてきたり。。。\\nいや、論文読む方が大事だって！\\n\\nなんか発行日が一ヶ月遅れのような気がしてきた。内容ではなく発行月で考える方が一般的な気がする。","bodyHtml":"<h1>UNSAT log</h1>\\n<h2>2月の振り返り</h2>\\n<p>2月はSplr-0.6シリーズのポイントリリースを2つ。\\nまあ大したものではないのだけど、内部的にはイオンという考え方について色々試してみた。\\nそして3月になってからリリースされた0.7.0で結局削除ということになりました。\\nこれも含め0.7.0はうまくいかないアイデアを結構整理して削除するようなリリースとなりました。</p>\\n<h2>イオン</h2>\\n<p>非常に単純化してSAT求解過程のモデルを作るなら、無矛盾なリテラル集合を大きくしていく過程をイメージするのがいいだろう。\\nこの集合には変数活性度が高いものから組み込まれていく。\\nなので、ここに含まれていない変数は大きな活性度は持っていないはずである。\\n逆にこの条件を満足しない変数はそれ自身がある種のブロッカーすなわち「求解の妨げとなる変数」になっていると思われるので、（導入したステージベースのvar boostingという実装で）フォーカスして集中的に解くのは意味があるのではないだろうか、\\nそこで求解進行状況の尺度として、後から意思決定の尺度としてこの条件を満足しない変数を調査してみた。\\nfixされてなくて高いエネルギー準位にいるのだからそのような変数をイオンというのは妥当なものではなかろうか。\\nしかし、var boostingというアイデアが全然うまくいかないので、この尺度も短期間で放棄されることになりました。\\nまあ、そもそも適度なリスタートがあるのなら、変数活性度だけでうまくドライブされるはずではある。</p>\\n<h2>0.6.3までのまとめ</h2>\\n<p>ということでSplrはLuby列によって長さが制御されるステージベースで節削減、節包摂、変数活性度減衰率、リスタート条件を変えるという問題に応じた制御パラメータの動的摂動が売りのソルバーということになった。\\nまあ、妥当なところだろう。\\nで、これは結局0.1時代のなぜかいい結果が得られていたassert数が伸びない時にはリスタートをブロックする話とさほど違わないものなのだった。\\n本当に0.3歩前進、0.2歩下がるという感じだ。</p>\\n<h2>0.7.0がリリース</h2>\\n<p>3月にだいぶ食い込みましたが今日0.7.0もリリースできました。\\nこのバージョンではrestart blocking threshold を変えるだけではなく、var decay rateも変えて変数順序の逆転が起きにくくするようにした。\\nrestart 条件を厳しくするだけではstabilizeにならないのではなかろうか。\\nそして、eliminatorの設定を変えてみた。\\n節数や変数数を闇雲に減らすより、依存グラフが大きくならない、よい学習節を作り、将来の矛盾生成効率を上げることの方が重要のようだ。\\nこのようなサブモジュールの調整だけで終わって0.6.4がリリースできると思ったら、最後にローカル変数のexport周りを修正したので行数的には大きな変更になり、trait 含めてexportするものがいろいろと変更されたので性能は上がってないけどマイナーバージョンあげるしかないよなあというリリースになりました。\\n全然ベンチマークでは性能改善してないみたいけど、UF360とかの問題では目に見えてよくなっていると思うのだけどなあ。</p>\\n<h2>今月の目標</h2>\\n<p><a href=\\"/2021/2021-02-02-UNSATlog\\">先月立てた目標</a>がなかなか達成できてないので、今月もSplrの開発をお休みして、ということは今年もSAT competitionには出せなくって、論文を読むべきなのですが、論文を読む前に圏論の勉強をしていたり、ClauseIdの一部をポインタに切り替えると性能が上がるかどうかに非常に興味が湧いてきたり。。。\\nいや、論文読む方が大事だって！</p>\\n<p>なんか発行日が一ヶ月遅れのような気がしてきた。内容ではなく発行月で考える方が一般的な気がする。</p>\\n","dir":"article/.json/2021","base":"2021-03-09-UNSATlog.json","ext":".json","sourceBase":"2021-03-09-UNSATlog.md","sourceExt":".md"}')}}]);