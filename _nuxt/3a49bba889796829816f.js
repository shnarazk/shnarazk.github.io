(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{552:function(n){n.exports=JSON.parse('{"title":"How to compile cargo-instruments","subtitle":"on NixOS on MacOS","date":"2020-06-07T00:00:00.000Z","tags":["Rust","macOS","nixOS"],"banner":"/img/2020/06-07/banner.jpg","bodyContent":"## プロファイリングしたいんじゃあ\\n\\nLinuxに比べてmacOSのなんと不自由なことか。\\nしかし、まともなLinuxマシンが手元にないのでなんとかmac上でプロファイリングしなければならない。\\ncargo-instrumentsというのがよさそうだ。\\n残念だけど、opensshのバージョン問題で単に`cargo install`とするだけではコンパイルできないようだ。\\nうーん、これはいつものパターンだな。\\n\\n## nix-shellでコンパイルしよう\\n\\n一つ一つ問題を潰して、こうなった。\\n\\n```plain\\n$ nix-shell -p openssl pkg-config libiconv darwin.apple_sdk.frameworks.Security libcurl\\n$ cargo install cargo-instruments\\n```\\n\\nこれは最後まで走るのだけど、最後の最後で`_CFURLSetResourcePropertyForKey`が見つからないエラーで失敗する。\\nどうもこれはnixOS上のrustのコンパイルでよく知られた問題のようで、rust関連のnix expressionにはコメントで出てきて、dirty hackで対応だ、みたいなことが書いてある。\\n-- `/nixpkgs/pkgs/development/tools/rust/cargo-geiger/`\\n\\n```plain\\n  # FIXME: Use impure version of CoreFoundation because of missing symbols.\\n  # CFURLSetResourcePropertyForKey is defined in the headers but there\'s no\\n  # corresponding implementation in the sources from opensource.apple.com.\\n  preConfigure = stdenv.lib.optionalString stdenv.isDarwin \'\'\\n    export NIX_CFLAGS_COMPILE=\\"-F${CoreFoundation}/Library/Frameworks $NIX_CFLAGS_COMPILE\\"\\n  \'\';\\n```\\n\\nだったら derivation を作るしかないか。\\n\\n# That works!\\n\\n## 1. /nixpkgs/pkgs/development/tools/rust/cargo-instruments/default.nix\\n\\n```nix\\n{ stdenv, fetchurl, runCommand, fetchFromGitHub, rustPlatform, Security, CoreFoundation, openssl, pkg-config, libiconv, curl }:\\n\\nrustPlatform.buildRustPackage rec {\\n  pname = \\"cargo-instruments\\";\\n  version = \\"0.3.1\\";\\n\\n  src = fetchFromGitHub {\\n    owner = \\"cmyr\\";\\n    repo = \\"cargo-instruments\\";\\n    rev = \\"7201328c3556b9d2872308869ac917b4b9d9b352\\";\\n     #hash = \\"sha256:1111111111111111111111111111111111111111111111111111\\";\\n     hash = \\"sha256:1dgp38bgdk4pnrph21zygi4xjcmj449h0m4shapy0nabqwd5l3yz\\";\\n  };\\n\\n  nativeBuildInputs = [ pkg-config ];\\n\\n  buildInputs = [ openssl libiconv curl ]\\n    ++ stdenv.lib.optionals stdenv.isDarwin [ Security ];\\n\\n  cargoSha256 = \\"sha256:18m9gk2i798vbj48gv60f19fpd6qvk3jrpljp5ai4mzjirhbscxs\\";\\n\\n  # Some tests fail because they need network access.\\n  # However, Travis ensures a proper build.\\n  # See also:\\n  #   https://travis-ci.org/sagiegurari/cargo-make\\n  doCheck = false;\\n  preConfigure = stdenv.lib.optionalString stdenv.isDarwin \'\'\\n    export NIX_CFLAGS_COMPILE=\\"-F${CoreFoundation}/Library/Frameworks $NIX_CFLAGS_COMPILE\\"\\n  \'\';\\n\\n  meta = with stdenv.lib; {\\n    descriptin = \\"A cargo plugin to generate Xcode Instruments trace files\\";\\n    homepage = \\"https://github.com/cmyr/cargo-instruments\\";\\n    # license = licenses.asl20;\\n    maintainers = with maintainers; [ shnarazk ];\\n    platforms = platforms.all;\\n  };\\n}\\n```\\n\\n## 2. /nixpkgs/pkgs/top-level/all-packages.nix\\n\\n```diff\\nmodified   pkgs/top-level/all-packages.nix\\n@@ -9205,6 +9205,10 @@ in\\n   cargo-inspect = callPackage ../development/tools/rust/cargo-inspect {\\n     inherit (darwin.apple_sdk.frameworks) Security;\\n   };\\n+  cargo-instruments = callPackage ../development/tools/rust/cargo-instruments {\\n+    inherit (darwin) libiconv;\\n+    inherit (darwin.apple_sdk.frameworks) Security CoreFoundation;\\n+  };\\n   cargo-make = callPackage ../development/tools/rust/cargo-make {\\n     inherit (darwin.apple_sdk.frameworks) Security;\\n   };\\n```","bodyHtml":"<h2>プロファイリングしたいんじゃあ</h2>\\n<p>Linuxに比べてmacOSのなんと不自由なことか。\\nしかし、まともなLinuxマシンが手元にないのでなんとかmac上でプロファイリングしなければならない。\\ncargo-instrumentsというのがよさそうだ。\\n残念だけど、opensshのバージョン問題で単に<code>cargo install</code>とするだけではコンパイルできないようだ。\\nうーん、これはいつものパターンだな。</p>\\n<h2>nix-shellでコンパイルしよう</h2>\\n<p>一つ一つ問題を潰して、こうなった。</p>\\n<pre><code class=\\"hljs\\">$ nix-shell -p openssl pkg-config libiconv darwin.apple_sdk.frameworks.Security libcurl\\n$ cargo install cargo-instruments</code></pre><p>これは最後まで走るのだけど、最後の最後で<code>_CFURLSetResourcePropertyForKey</code>が見つからないエラーで失敗する。\\nどうもこれはnixOS上のrustのコンパイルでよく知られた問題のようで、rust関連のnix expressionにはコメントで出てきて、dirty hackで対応だ、みたいなことが書いてある。\\n-- <code>/nixpkgs/pkgs/development/tools/rust/cargo-geiger/</code></p>\\n<pre><code class=\\"hljs\\"># FIXME: Use impure version of CoreFoundation because of missing symbols.\\n  # CFURLSetResourcePropertyForKey is defined in the headers but there\'s no\\n  # corresponding implementation in the sources from opensource.apple.com.\\n  preConfigure = stdenv.lib.optionalString stdenv.isDarwin \'\'\\n    export NIX_CFLAGS_COMPILE=\\"-F${CoreFoundation}/Library/Frameworks $NIX_CFLAGS_COMPILE\\"\\n  \'\';</code></pre><p>だったら derivation を作るしかないか。</p>\\n<h1>That works!</h1>\\n<h2>1. /nixpkgs/pkgs/development/tools/rust/cargo-instruments/default.nix</h2>\\n<pre><code class=\\"hljs\\">{ stdenv, fetchurl, runCommand, fetchFromGitHub, rustPlatform, Security, CoreFoundation, openssl, pkg-config, libiconv, curl }:\\n\\nrustPlatform.buildRustPackage <span class=\\"hljs-keyword\\">rec</span> {\\n  <span class=\\"hljs-attr\\">pname</span> = <span class=\\"hljs-string\\">\\"cargo-instruments\\"</span>;\\n  <span class=\\"hljs-attr\\">version</span> = <span class=\\"hljs-string\\">\\"0.3.1\\"</span>;\\n\\n  <span class=\\"hljs-attr\\">src</span> = fetchFromGitHub {\\n    <span class=\\"hljs-attr\\">owner</span> = <span class=\\"hljs-string\\">\\"cmyr\\"</span>;\\n    <span class=\\"hljs-attr\\">repo</span> = <span class=\\"hljs-string\\">\\"cargo-instruments\\"</span>;\\n    <span class=\\"hljs-attr\\">rev</span> = <span class=\\"hljs-string\\">\\"7201328c3556b9d2872308869ac917b4b9d9b352\\"</span>;\\n     <span class=\\"hljs-comment\\">#hash = \\"sha256:1111111111111111111111111111111111111111111111111111\\";</span>\\n     <span class=\\"hljs-attr\\">hash</span> = <span class=\\"hljs-string\\">\\"sha256:1dgp38bgdk4pnrph21zygi4xjcmj449h0m4shapy0nabqwd5l3yz\\"</span>;\\n  };\\n\\n  <span class=\\"hljs-attr\\">nativeBuildInputs</span> = [ pkg-config ];\\n\\n  <span class=\\"hljs-attr\\">buildInputs</span> = [ openssl libiconv curl ]\\n    ++ stdenv.lib.optionals stdenv.isDarwin [ Security ];\\n\\n  <span class=\\"hljs-attr\\">cargoSha256</span> = <span class=\\"hljs-string\\">\\"sha256:18m9gk2i798vbj48gv60f19fpd6qvk3jrpljp5ai4mzjirhbscxs\\"</span>;\\n\\n  <span class=\\"hljs-comment\\"># Some tests fail because they need network access.</span>\\n  <span class=\\"hljs-comment\\"># However, Travis ensures a proper build.</span>\\n  <span class=\\"hljs-comment\\"># See also:</span>\\n  <span class=\\"hljs-comment\\">#   https://travis-ci.org/sagiegurari/cargo-make</span>\\n  <span class=\\"hljs-attr\\">doCheck</span> = <span class=\\"hljs-literal\\">false</span>;\\n  <span class=\\"hljs-attr\\">preConfigure</span> = stdenv.lib.optionalString stdenv.isDarwin <span class=\\"hljs-string\\">\'\'\\n    export NIX_CFLAGS_COMPILE=\\"-F<span class=\\"hljs-subst\\">${CoreFoundation}</span>/Library/Frameworks $NIX_CFLAGS_COMPILE\\"\\n  \'\'</span>;\\n\\n  <span class=\\"hljs-attr\\">meta</span> = <span class=\\"hljs-keyword\\">with</span> stdenv.lib; {\\n    <span class=\\"hljs-attr\\">descriptin</span> = <span class=\\"hljs-string\\">\\"A cargo plugin to generate Xcode Instruments trace files\\"</span>;\\n    <span class=\\"hljs-attr\\">homepage</span> = <span class=\\"hljs-string\\">\\"https://github.com/cmyr/cargo-instruments\\"</span>;\\n    <span class=\\"hljs-comment\\"># license = licenses.asl20;</span>\\n    <span class=\\"hljs-attr\\">maintainers</span> = <span class=\\"hljs-keyword\\">with</span> maintainers; [ shnarazk ];\\n    <span class=\\"hljs-attr\\">platforms</span> = platforms.all;\\n  };\\n}</code></pre><h2>2. /nixpkgs/pkgs/top-level/all-packages.nix</h2>\\n<pre><code class=\\"hljs\\">modified   pkgs/top-level/all-packages.nix\\n@@ -9205,6 +9205,10 @@ in\\n   cargo-inspect = callPackage ../development/tools/rust/cargo-inspect {\\n     inherit (darwin.apple_sdk.frameworks) Security;\\n   };\\n<span class=\\"hljs-addition\\">+  cargo-instruments = callPackage ../development/tools/rust/cargo-instruments {</span>\\n<span class=\\"hljs-addition\\">+    inherit (darwin) libiconv;</span>\\n<span class=\\"hljs-addition\\">+    inherit (darwin.apple_sdk.frameworks) Security CoreFoundation;</span>\\n<span class=\\"hljs-addition\\">+  };</span>\\n   cargo-make = callPackage ../development/tools/rust/cargo-make {\\n     inherit (darwin.apple_sdk.frameworks) Security;\\n   };</code></pre>","dir":"article/.json/2020","base":"2020-06-07-cargo-instruments.json","ext":".json","sourceBase":"2020-06-07-cargo-instruments.md","sourceExt":".md"}')}}]);