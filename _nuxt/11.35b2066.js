(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{488:function(n){n.exports=JSON.parse('{"title":"Code Sample","subtitle":"Using Hugo Chroma instead of Pygments","date":"2018-06-22T00:00:00.000Z","tags":["hugo"],"bodyContent":"The following are two code samples using syntax highlighting.\\n\\n\x3c!--more--\x3e\\n\\nThe following is a code sample using triple backticks ( ``` ) code fencing provided in Hugo. This is client side highlighting and does not require any special installation.\\n\\n```javascript\\n    var num1, num2, sum\\n    num1 = prompt(\\"Enter first number\\")\\n    num2 = prompt(\\"Enter second number\\")\\n    sum = parseInt(num1) + parseInt(num2) // \\"+\\" means \\"add\\"\\n    alert(\\"Sum = \\" + sum)  // \\"+\\" means combine into a string\\n```\\n\\nThe following is a code sample using the \\"highlight\\" shortcode provided in Hugo. This is server side\\nhighlighting and required Python and Pygments to be installed once. But it doesn\'t now.\\n\\n{{< highlight javascript >}}\\n    var num1, num2, sum\\n    num1 = prompt(\\"Enter first number\\")\\n    num2 = prompt(\\"Enter second number\\")\\n    sum = parseInt(num1) + parseInt(num2) // \\"+\\" means \\"add\\"\\n    alert(\\"Sum = \\" + sum)  // \\"+\\" means combine into a string\\n{{</ highlight >}}\\n\\nAnd here is the same code with line numbers:\\n\\n{{< highlight javascript \\"linenos=inline\\">}}\\n    var num1, num2, sum\\n    num1 = prompt(\\"Enter first number\\")\\n    num2 = prompt(\\"Enter second number\\")\\n    sum = parseInt(num1) + parseInt(num2) // \\"+\\" means \\"add\\"\\n    alert(\\"Sum = \\" + sum)  // \\"+\\" means combine into a string\\n{{</ highlight >}}\\n\\nIn this site it, [chrome](https://gohugo.io/content-management/syntax-highlighting/) is the default highlight engine, activated by ( ``` ) too.\\n\\n```go-html-template\\n<section id=\\"main\\">\\n  <div>\\n    <h1 id=\\"title\\">{{ .Title }}</h1>\\n    {{ range .Data.Pages }}\\n      {{ .Render \\"summary\\"}}\\n    {{ end }}\\n  </div>\\n</section>\\n```\\n\\nAnd, for me, it accepts the following languages: awk, (e)bnf, make, bash (sh, shell), c, C,\\ncss, lisp, coq, diff, docker, elisp, html, haskell, json, java, javascript, mason, nix,\\nocaml (ml), prolog, python(3), R, rust, scheme, smalltalk, (la)tex, xml, yaml, markdown,\\ntext (plain). Wow!","bodyHtml":"<p>The following are two code samples using syntax highlighting.</p>\\n<p>&lt;!--more--&gt;</p>\\n<p>The following is a code sample using triple backticks ( ``` ) code fencing provided in Hugo. This is client side highlighting and does not require any special installation.</p>\\n<pre><code class=\\"hljs\\"><span class=\\"hljs-keyword\\">var</span> num1, num2, sum\\n    num1 = prompt(<span class=\\"hljs-string\\">\\"Enter first number\\"</span>)\\n    num2 = prompt(<span class=\\"hljs-string\\">\\"Enter second number\\"</span>)\\n    sum = <span class=\\"hljs-built_in\\">parseInt</span>(num1) + <span class=\\"hljs-built_in\\">parseInt</span>(num2) <span class=\\"hljs-comment\\">// \\"+\\" means \\"add\\"</span>\\n    alert(<span class=\\"hljs-string\\">\\"Sum = \\"</span> + sum)  <span class=\\"hljs-comment\\">// \\"+\\" means combine into a string</span></code></pre><p>The following is a code sample using the &quot;highlight&quot; shortcode provided in Hugo. This is server side\\nhighlighting and required Python and Pygments to be installed once. But it doesn\'t now.</p>\\n<p>{{&lt; highlight javascript &gt;}}\\nvar num1, num2, sum\\nnum1 = prompt(&quot;Enter first number&quot;)\\nnum2 = prompt(&quot;Enter second number&quot;)\\nsum = parseInt(num1) + parseInt(num2) // &quot;+&quot; means &quot;add&quot;\\nalert(&quot;Sum = &quot; + sum)  // &quot;+&quot; means combine into a string\\n{{&lt;/ highlight &gt;}}</p>\\n<p>And here is the same code with line numbers:</p>\\n<p>{{&lt; highlight javascript &quot;linenos=inline&quot;&gt;}}\\nvar num1, num2, sum\\nnum1 = prompt(&quot;Enter first number&quot;)\\nnum2 = prompt(&quot;Enter second number&quot;)\\nsum = parseInt(num1) + parseInt(num2) // &quot;+&quot; means &quot;add&quot;\\nalert(&quot;Sum = &quot; + sum)  // &quot;+&quot; means combine into a string\\n{{&lt;/ highlight &gt;}}</p>\\n<p>In this site it, <a href=\\"https://gohugo.io/content-management/syntax-highlighting/\\">chrome</a> is the default highlight engine, activated by ( ``` ) too.</p>\\n<pre><code class=\\"hljs\\">&lt;section id=\\"main\\"&gt;\\n  &lt;div&gt;\\n    &lt;h1 id=\\"title\\"&gt;{{ .Title }}&lt;/h1&gt;\\n    {{ range .Data.Pages }}\\n      {{ .Render \\"summary\\"}}\\n    {{ end }}\\n  &lt;/div&gt;\\n&lt;/section&gt;</code></pre><p>And, for me, it accepts the following languages: awk, (e)bnf, make, bash (sh, shell), c, C,\\ncss, lisp, coq, diff, docker, elisp, html, haskell, json, java, javascript, mason, nix,\\nocaml (ml), prolog, python(3), R, rust, scheme, smalltalk, (la)tex, xml, yaml, markdown,\\ntext (plain). Wow!</p>\\n","dir":"article/.json/2016","base":"2016-03-08-code-sample.json","ext":".json","sourceBase":"2016-03-08-code-sample.md","sourceExt":".md"}')}}]);