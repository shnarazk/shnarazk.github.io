(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{526:function(n){n.exports=JSON.parse('{"title":"Directions for the next Splr","subtitle":"半年でやることやった後のがんばりについて","date":"2019-11-29T00:00:00.000Z","tags":["SAT","splr"],"bodyContent":"- https://gitlab.com/shnarazk/SAT/splr/issues/90\\n\\n1. global control of restart\\n  \'global\'は大局観ってやつ。`restart_step` の存在はやはり気になる。今のソルバーはまだ何かに気づけていない。\\n1. [solved by 0.1.5] a better bounded var-rewarding mechanism\\n  ASIDS, CHBどちらも確認済みではあるのだが。ただやる意味あるのかちょっと疑問に思ってきた。\\n  時間変化するのだから、求解直後の値を見てもそこには最終ステップを解くのに必要だった情報しか残っていないと考えるべきだろう。\\n  従って、最適な値分散なんてものは存在しない。そこに至るまでの履歴も重要。\\n  もう一つ、zero-sum rewardingについても検討のこと。\\n1. new category of problems based on something like FUP, CNF\\n1. investigate the reason why satcoin groups require \'deep search\' to be solved.\\n  これは1に関係するのだろう。FUPのデータも必要かも。\\n  ただし0.1.5では0.1.4で見られたきれいなセパレーションがなくなっている。\\n\\n## 2019-10-27: A better bounded var-rewarding mechanismに関する意外な展開\\n\\n夏から9月にかけてリスタートを掛けても意外に割り当て対象が限定されているという話を散々やってきていた\\nのだが、よくわからぬregressionの解消に取り組んでいてとんでもないことがわかった。結局、CHBという\\nstrictly bounded var-rewardingはやはりいい結果につながっていたようだ。あまりによい成果が出たので一旦\\n計画を延期して0.1.5をリリースすることにしよう。0.1.5がなぜいいのかはリリース後に検討。ここの話に戻っ\\nてくるのはさらにその後で十分ということになった。\\n\\n## 2019-11-29: 0.2.0のリリース\\n\\nパラメータチューニングの消耗戦の合間にHaskellでいうところの実行速度に影響を及ぼさないnewtype的な型安全性を導入してみた。\\n実際にRustでも速度低下が見られなかったので内部構造の変更は大きな変更だろうということで0.2.0に格上げ。\\nパラメータチューニングの方は変数活性度の減衰係数でわずか1問の進展が見られたのでそれも入れて0.2.0をリリース。\\n\\n- 1:大局観は進展見られず\\n- 3:問題のカテゴライズは全く手付かず\\n- 4:deep search問題は進展見られず","bodyHtml":"<ul>\\n<li>https://gitlab.com/shnarazk/SAT/splr/issues/90</li>\\n</ul>\\n<ol>\\n<li>global control of restart\\n\'global\'は大局観ってやつ。<code>restart_step</code> の存在はやはり気になる。今のソルバーはまだ何かに気づけていない。</li>\\n<li>[solved by 0.1.5] a better bounded var-rewarding mechanism\\nASIDS, CHBどちらも確認済みではあるのだが。ただやる意味あるのかちょっと疑問に思ってきた。\\n時間変化するのだから、求解直後の値を見てもそこには最終ステップを解くのに必要だった情報しか残っていないと考えるべきだろう。\\n従って、最適な値分散なんてものは存在しない。そこに至るまでの履歴も重要。\\nもう一つ、zero-sum rewardingについても検討のこと。</li>\\n<li>new category of problems based on something like FUP, CNF</li>\\n<li>investigate the reason why satcoin groups require \'deep search\' to be solved.\\nこれは1に関係するのだろう。FUPのデータも必要かも。\\nただし0.1.5では0.1.4で見られたきれいなセパレーションがなくなっている。</li>\\n</ol>\\n<h2>2019-10-27: A better bounded var-rewarding mechanismに関する意外な展開</h2>\\n<p>夏から9月にかけてリスタートを掛けても意外に割り当て対象が限定されているという話を散々やってきていた\\nのだが、よくわからぬregressionの解消に取り組んでいてとんでもないことがわかった。結局、CHBという\\nstrictly bounded var-rewardingはやはりいい結果につながっていたようだ。あまりによい成果が出たので一旦\\n計画を延期して0.1.5をリリースすることにしよう。0.1.5がなぜいいのかはリリース後に検討。ここの話に戻っ\\nてくるのはさらにその後で十分ということになった。</p>\\n<h2>2019-11-29: 0.2.0のリリース</h2>\\n<p>パラメータチューニングの消耗戦の合間にHaskellでいうところの実行速度に影響を及ぼさないnewtype的な型安全性を導入してみた。\\n実際にRustでも速度低下が見られなかったので内部構造の変更は大きな変更だろうということで0.2.0に格上げ。\\nパラメータチューニングの方は変数活性度の減衰係数でわずか1問の進展が見られたのでそれも入れて0.2.0をリリース。</p>\\n<ul>\\n<li>1:大局観は進展見られず</li>\\n<li>3:問題のカテゴライズは全く手付かず</li>\\n<li>4:deep search問題は進展見られず</li>\\n</ul>\\n","dir":"article/.json/2019","base":"2019-09-20-splr015.json","ext":".json","sourceBase":"2019-09-20-splr015.md","sourceExt":".md"}')}}]);