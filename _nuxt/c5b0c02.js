(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{549:function(r){r.exports=JSON.parse('{"title":"Function name as a 1-argumented closure","subtitle":"more functional style","date":"2020-02-04T00:00:00.000Z","tags":["rust"],"bodyContent":"rustc 1.41でcargo clippyを走らせて以下が指摘された。\\n\\n```\\ncargo clippy\\n    Checking splr v0.3.0 (/Users/nash/Repositories/splr)\\nwarning: redundant closure found\\n   --\x3e src/types.rs:394:69\\n    |\\n394 |         let fs = File::open(path).map_or(Err(SolverError::IOError), | f | Ok(f))?;\\n    |                                                                     ^^^^^^^^^^^ help: remove closure as shown: `Ok`\\n    |\\n    = note: `#[warn(clippy::redundant_closure)]` on by default\\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\\n```\\n\\nということで以下のように変更した。\\n\\n```diff\\n-        let fs = File::open(path).map_or(Err(SolverError::IOError), |f| Ok(f))?;\\n+        let fs = File::open(path).map_or(Err(SolverError::IOError), Ok)?;\\n```\\n\\nなんだ、こう書けたのか。随分と関数型プログラミングらしくなるな。","bodyHtml":"<p>rustc 1.41でcargo clippyを走らせて以下が指摘された。</p>\\n<pre><code>cargo clippy\\n    Checking splr v0.3.0 (/Users/nash/Repositories/splr)\\nwarning: redundant closure found\\n   --&gt; src/types.rs:394:69\\n    |\\n394 |         let fs = File::open(path).map_or(Err(SolverError::IOError), | f | Ok(f))?;\\n    |                                                                     ^^^^^^^^^^^ help: remove closure as shown: `Ok`\\n    |\\n    = note: `#[warn(clippy::redundant_closure)]` on by default\\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\\n</code></pre>\\n<p>ということで以下のように変更した。</p>\\n<pre><code class=\\"hljs\\"><span class=\\"hljs-deletion\\">-        let fs = File::open(path).map_or(Err(SolverError::IOError), |f| Ok(f))?;</span>\\n<span class=\\"hljs-addition\\">+        let fs = File::open(path).map_or(Err(SolverError::IOError), Ok)?;</span></code></pre><p>なんだ、こう書けたのか。随分と関数型プログラミングらしくなるな。</p>\\n","dir":"article/.json/2020","base":"2020-02-04-function-name-as-closure.json","ext":".json","sourceBase":"2020-02-04-function-name-as-closure.md","sourceExt":".md"}')}}]);