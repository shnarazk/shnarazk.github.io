__NUXT_JSONP__("/2021/2021-07-04-UNSATlog", {data:[{article:Object.create(null,{default:{writable:true,enumerable:true,value:{title:"UNSAT LOG, 2021, Jul.",subtitle:"Vol.2, No.7.",date:"2021-07-10T00:00:00.000Z",tags:["SAT","splr","unsatlog"],banner:"\u002Fimg\u002F2021\u002F07-04\u002Fbanner.jpg",banner_caption:"まだまだ一般人が使うには早いようだ",bodyContent:"# 亀の2021年6月\n\n相変わらず0.10のリリースができない一ヶ月でした。\nということで今月も短信です。\n\n# 問題点\n\n色々と直してはいるのだけど、最後のピースまでは行きつかない。\ntransitionにおける論理バグを見つけたり、除去された変数を戻す部分を完全にRust的なコードに書き換えたり、少しづつは進展している。\n監視リテラルを正しくセットしているにも関わらず単位節が無視されるという不可解なバグはchrono-BTによるものではないかと思う。\nこれも最後まで追い詰めきれてないのだが、今のところこの方向でちょっとづつ進めていくのが正解のようだ。\n\nこれは監視リテラルが待つ対リテラルキャッシュが現在の決定レベルよりも高いレベルで充足していた時には監視リテラルの更新は行われないのだが、より高いレベルで充足リテラルが否定された場合、このリテラルをこの節は監視していないのでBCPの対象から漏れてしまうということ。\n監視リテラルはその対リテラルキャッシュよりも高い決定レベルであることを保証しないとchronoBT導入は処理の妥当性を失うことになる。ようだ。\n\n（この文章を書いていて思ったけど、監視リテラルに関しては、\n  - そのもの、\n  - 監視リテラルのリスト、\n  - 監視リテラルに関する構造体、\n  - その中のMinisatやGlucoseで言うところのblocker、\nと指し示す必要のあるオブジェクトが多すぎてネーミングに苦労しているのだけど、blockerは対リテラルキャッシュと呼ぶのがよさそうだ。\n英語だと *Cache of Pairing Literal; CPL* かな。）\n\nこれが大学の研究者なら、数ヶ月前のバグ発生の認識から一週間でここまでやってこれないと生きていけないだろうなあ。\n全く能力不足だわ。\n\n# その他\n\nSplrに初めてインタラクティブな操作関数が導入されました。\n正しく動作するプログラムには全く要らない機能だけど、デバッグにこんなに苦労するなら、何が起きているのかを把握するために、節DBやassign stackを選択的に覗けるようにするのはもっと早い段階ですべきだった。\nおかげで監視リテラルの時間変化がなんとなく見えるようになって、少し理解が進みました。\nなんだかんだで現在Splrは11000 Line of Code。\n前のリリース版から半分近くの行が書き換えられている。。。\n\n# 7月の予定\n\nそりゃもちろんバグ取り。それ以上のことは言わない。\n\n## 2021-07-09:追記\n\nどうも[バグが取れた](https:\u002F\u002Fgithub.com\u002Fshnarazk\u002Fsplr\u002Fissues\u002F117)ようだ。\n最後に残っていた問題は`cancel_until`中で`q_head`を間違えて更新していたせいだった。\nそれで伝播できないリテラルが出現していたわけだ。\n修正すると[aes.cnf](https:\u002F\u002Fgithub.com\u002Fshnarazk\u002Fsplr\u002Fpull\u002F88#issuecomment-808834522)で3連続で問題なく検証できたし、SAT Competition 2019のベンチマーク、タイムアウト200秒で解けた問題も全て検証できた！\n終わった！",bodyHtml:"\u003Ch1\u003E亀の2021年6月\u003C\u002Fh1\u003E\n\u003Cp\u003E相変わらず0.10のリリースができない一ヶ月でした。\nということで今月も短信です。\u003C\u002Fp\u003E\n\u003Ch1\u003E問題点\u003C\u002Fh1\u003E\n\u003Cp\u003E色々と直してはいるのだけど、最後のピースまでは行きつかない。\ntransitionにおける論理バグを見つけたり、除去された変数を戻す部分を完全にRust的なコードに書き換えたり、少しづつは進展している。\n監視リテラルを正しくセットしているにも関わらず単位節が無視されるという不可解なバグはchrono-BTによるものではないかと思う。\nこれも最後まで追い詰めきれてないのだが、今のところこの方向でちょっとづつ進めていくのが正解のようだ。\u003C\u002Fp\u003E\n\u003Cp\u003Eこれは監視リテラルが待つ対リテラルキャッシュが現在の決定レベルよりも高いレベルで充足していた時には監視リテラルの更新は行われないのだが、より高いレベルで充足リテラルが否定された場合、このリテラルをこの節は監視していないのでBCPの対象から漏れてしまうということ。\n監視リテラルはその対リテラルキャッシュよりも高い決定レベルであることを保証しないとchronoBT導入は処理の妥当性を失うことになる。ようだ。\u003C\u002Fp\u003E\n\u003Cp\u003E（この文章を書いていて思ったけど、監視リテラルに関しては、\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003Eそのもの、\u003C\u002Fli\u003E\n\u003Cli\u003E監視リテラルのリスト、\u003C\u002Fli\u003E\n\u003Cli\u003E監視リテラルに関する構造体、\u003C\u002Fli\u003E\n\u003Cli\u003Eその中のMinisatやGlucoseで言うところのblocker、\nと指し示す必要のあるオブジェクトが多すぎてネーミングに苦労しているのだけど、blockerは対リテラルキャッシュと呼ぶのがよさそうだ。\n英語だと \u003Cem\u003ECache of Pairing Literal; CPL\u003C\u002Fem\u003E かな。）\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003Eこれが大学の研究者なら、数ヶ月前のバグ発生の認識から一週間でここまでやってこれないと生きていけないだろうなあ。\n全く能力不足だわ。\u003C\u002Fp\u003E\n\u003Ch1\u003Eその他\u003C\u002Fh1\u003E\n\u003Cp\u003ESplrに初めてインタラクティブな操作関数が導入されました。\n正しく動作するプログラムには全く要らない機能だけど、デバッグにこんなに苦労するなら、何が起きているのかを把握するために、節DBやassign stackを選択的に覗けるようにするのはもっと早い段階ですべきだった。\nおかげで監視リテラルの時間変化がなんとなく見えるようになって、少し理解が進みました。\nなんだかんだで現在Splrは11000 Line of Code。\n前のリリース版から半分近くの行が書き換えられている。。。\u003C\u002Fp\u003E\n\u003Ch1\u003E7月の予定\u003C\u002Fh1\u003E\n\u003Cp\u003Eそりゃもちろんバグ取り。それ以上のことは言わない。\u003C\u002Fp\u003E\n\u003Ch2\u003E2021-07-09:追記\u003C\u002Fh2\u003E\n\u003Cp\u003Eどうも\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fshnarazk\u002Fsplr\u002Fissues\u002F117\"\u003Eバグが取れた\u003C\u002Fa\u003Eようだ。\n最後に残っていた問題は\u003Ccode\u003Ecancel_until\u003C\u002Fcode\u003E中で\u003Ccode\u003Eq_head\u003C\u002Fcode\u003Eを間違えて更新していたせいだった。\nそれで伝播できないリテラルが出現していたわけだ。\n修正すると\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fshnarazk\u002Fsplr\u002Fpull\u002F88#issuecomment-808834522\"\u003Eaes.cnf\u003C\u002Fa\u003Eで3連続で問題なく検証できたし、SAT Competition 2019のベンチマーク、タイムアウト200秒で解けた問題も全て検証できた！\n終わった！\u003C\u002Fp\u003E\n",dir:"article\u002F.json\u002F2021",base:"2021-07-04-UNSATlog.json",ext:".json",sourceBase:"2021-07-04-UNSATlog.md",sourceExt:".md"}},title:{writable:true,enumerable:true,value:"UNSAT LOG, 2021, Jul."},subtitle:{writable:true,enumerable:true,value:"Vol.2, No.7."},date:{writable:true,enumerable:true,value:"2021-07-10T00:00:00.000Z"},tags:{writable:true,enumerable:true,value:["SAT","splr","unsatlog"]},banner:{writable:true,enumerable:true,value:"\u002Fimg\u002F2021\u002F07-04\u002Fbanner.jpg"},banner_caption:{writable:true,enumerable:true,value:"まだまだ一般人が使うには早いようだ"},bodyContent:{writable:true,enumerable:true,value:"# 亀の2021年6月\n\n相変わらず0.10のリリースができない一ヶ月でした。\nということで今月も短信です。\n\n# 問題点\n\n色々と直してはいるのだけど、最後のピースまでは行きつかない。\ntransitionにおける論理バグを見つけたり、除去された変数を戻す部分を完全にRust的なコードに書き換えたり、少しづつは進展している。\n監視リテラルを正しくセットしているにも関わらず単位節が無視されるという不可解なバグはchrono-BTによるものではないかと思う。\nこれも最後まで追い詰めきれてないのだが、今のところこの方向でちょっとづつ進めていくのが正解のようだ。\n\nこれは監視リテラルが待つ対リテラルキャッシュが現在の決定レベルよりも高いレベルで充足していた時には監視リテラルの更新は行われないのだが、より高いレベルで充足リテラルが否定された場合、このリテラルをこの節は監視していないのでBCPの対象から漏れてしまうということ。\n監視リテラルはその対リテラルキャッシュよりも高い決定レベルであることを保証しないとchronoBT導入は処理の妥当性を失うことになる。ようだ。\n\n（この文章を書いていて思ったけど、監視リテラルに関しては、\n  - そのもの、\n  - 監視リテラルのリスト、\n  - 監視リテラルに関する構造体、\n  - その中のMinisatやGlucoseで言うところのblocker、\nと指し示す必要のあるオブジェクトが多すぎてネーミングに苦労しているのだけど、blockerは対リテラルキャッシュと呼ぶのがよさそうだ。\n英語だと *Cache of Pairing Literal; CPL* かな。）\n\nこれが大学の研究者なら、数ヶ月前のバグ発生の認識から一週間でここまでやってこれないと生きていけないだろうなあ。\n全く能力不足だわ。\n\n# その他\n\nSplrに初めてインタラクティブな操作関数が導入されました。\n正しく動作するプログラムには全く要らない機能だけど、デバッグにこんなに苦労するなら、何が起きているのかを把握するために、節DBやassign stackを選択的に覗けるようにするのはもっと早い段階ですべきだった。\nおかげで監視リテラルの時間変化がなんとなく見えるようになって、少し理解が進みました。\nなんだかんだで現在Splrは11000 Line of Code。\n前のリリース版から半分近くの行が書き換えられている。。。\n\n# 7月の予定\n\nそりゃもちろんバグ取り。それ以上のことは言わない。\n\n## 2021-07-09:追記\n\nどうも[バグが取れた](https:\u002F\u002Fgithub.com\u002Fshnarazk\u002Fsplr\u002Fissues\u002F117)ようだ。\n最後に残っていた問題は`cancel_until`中で`q_head`を間違えて更新していたせいだった。\nそれで伝播できないリテラルが出現していたわけだ。\n修正すると[aes.cnf](https:\u002F\u002Fgithub.com\u002Fshnarazk\u002Fsplr\u002Fpull\u002F88#issuecomment-808834522)で3連続で問題なく検証できたし、SAT Competition 2019のベンチマーク、タイムアウト200秒で解けた問題も全て検証できた！\n終わった！"},bodyHtml:{writable:true,enumerable:true,value:"\u003Ch1\u003E亀の2021年6月\u003C\u002Fh1\u003E\n\u003Cp\u003E相変わらず0.10のリリースができない一ヶ月でした。\nということで今月も短信です。\u003C\u002Fp\u003E\n\u003Ch1\u003E問題点\u003C\u002Fh1\u003E\n\u003Cp\u003E色々と直してはいるのだけど、最後のピースまでは行きつかない。\ntransitionにおける論理バグを見つけたり、除去された変数を戻す部分を完全にRust的なコードに書き換えたり、少しづつは進展している。\n監視リテラルを正しくセットしているにも関わらず単位節が無視されるという不可解なバグはchrono-BTによるものではないかと思う。\nこれも最後まで追い詰めきれてないのだが、今のところこの方向でちょっとづつ進めていくのが正解のようだ。\u003C\u002Fp\u003E\n\u003Cp\u003Eこれは監視リテラルが待つ対リテラルキャッシュが現在の決定レベルよりも高いレベルで充足していた時には監視リテラルの更新は行われないのだが、より高いレベルで充足リテラルが否定された場合、このリテラルをこの節は監視していないのでBCPの対象から漏れてしまうということ。\n監視リテラルはその対リテラルキャッシュよりも高い決定レベルであることを保証しないとchronoBT導入は処理の妥当性を失うことになる。ようだ。\u003C\u002Fp\u003E\n\u003Cp\u003E（この文章を書いていて思ったけど、監視リテラルに関しては、\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003Eそのもの、\u003C\u002Fli\u003E\n\u003Cli\u003E監視リテラルのリスト、\u003C\u002Fli\u003E\n\u003Cli\u003E監視リテラルに関する構造体、\u003C\u002Fli\u003E\n\u003Cli\u003Eその中のMinisatやGlucoseで言うところのblocker、\nと指し示す必要のあるオブジェクトが多すぎてネーミングに苦労しているのだけど、blockerは対リテラルキャッシュと呼ぶのがよさそうだ。\n英語だと \u003Cem\u003ECache of Pairing Literal; CPL\u003C\u002Fem\u003E かな。）\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003Eこれが大学の研究者なら、数ヶ月前のバグ発生の認識から一週間でここまでやってこれないと生きていけないだろうなあ。\n全く能力不足だわ。\u003C\u002Fp\u003E\n\u003Ch1\u003Eその他\u003C\u002Fh1\u003E\n\u003Cp\u003ESplrに初めてインタラクティブな操作関数が導入されました。\n正しく動作するプログラムには全く要らない機能だけど、デバッグにこんなに苦労するなら、何が起きているのかを把握するために、節DBやassign stackを選択的に覗けるようにするのはもっと早い段階ですべきだった。\nおかげで監視リテラルの時間変化がなんとなく見えるようになって、少し理解が進みました。\nなんだかんだで現在Splrは11000 Line of Code。\n前のリリース版から半分近くの行が書き換えられている。。。\u003C\u002Fp\u003E\n\u003Ch1\u003E7月の予定\u003C\u002Fh1\u003E\n\u003Cp\u003Eそりゃもちろんバグ取り。それ以上のことは言わない。\u003C\u002Fp\u003E\n\u003Ch2\u003E2021-07-09:追記\u003C\u002Fh2\u003E\n\u003Cp\u003Eどうも\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fshnarazk\u002Fsplr\u002Fissues\u002F117\"\u003Eバグが取れた\u003C\u002Fa\u003Eようだ。\n最後に残っていた問題は\u003Ccode\u003Ecancel_until\u003C\u002Fcode\u003E中で\u003Ccode\u003Eq_head\u003C\u002Fcode\u003Eを間違えて更新していたせいだった。\nそれで伝播できないリテラルが出現していたわけだ。\n修正すると\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fshnarazk\u002Fsplr\u002Fpull\u002F88#issuecomment-808834522\"\u003Eaes.cnf\u003C\u002Fa\u003Eで3連続で問題なく検証できたし、SAT Competition 2019のベンチマーク、タイムアウト200秒で解けた問題も全て検証できた！\n終わった！\u003C\u002Fp\u003E\n"},dir:{writable:true,enumerable:true,value:"article\u002F.json\u002F2021"},base:{writable:true,enumerable:true,value:"2021-07-04-UNSATlog.json"},ext:{writable:true,enumerable:true,value:".json"},sourceBase:{writable:true,enumerable:true,value:"2021-07-04-UNSATlog.md"},sourceExt:{writable:true,enumerable:true,value:".md"}})}],fetch:[],mutations:[]});