__NUXT_JSONP__("/2021/2021-07-10-crawler-in-swift", {data:[{article:Object.create(null,{default:{writable:true,enumerable:true,value:{title:"Swiftでcrawling",subtitle:null,date:"2021-07-10T00:00:00.000Z",tags:["Swift","Covid19"],bodyContent:"福岡市の[COVID19オープンデータ](https:\u002F\u002Fckan.open-governmentdata.org\u002Fdataset\u002F401000_pref_fukuoka_covid19_patients)は更新されるたびにURLが更新される（そして古いURLは削除される）という意味不明な[運用](https:\u002F\u002Fckan.open-governmentdata.org\u002Fdataset\u002Factivity\u002F401000_pref_fukuoka_covid19_patients)なので、毎日swiftプログラムを書き換えるという馬鹿なことをしていたのだけど、半年たってようやくcrawlingしようという気になりました。\n\n適当なサイトでそのやり方を調べるとそれなりに簡単みたいだっただけど、コピペで動かない。\nそもそもこの正規表現は何?というレベルでコードに不信感を抱いたのでplaygroundで色々修正して正解を探した。\n\n結局こうなった。`parse`の中身をほぼ作り直し。\nしかし、それにしても正規表現を使うのに`NSなんとか`を使うというあたりが、言語が「閉じてない」感。ちょっとねえ。\n\n```swift\nimport Foundation\n\n\u002F\u002F Input your parameters here\nlet startUrl = URL(string: \"https:\u002F\u002Fckan.open-governmentdata.org\u002Fdataset\u002F401000_pref_fukuoka_covid19_patients\")!\nlet wordToSearch = \"Swift\"\nlet maximumPagesToVisit = 10\n\n\u002F\u002F Crawler Parameters\nlet semaphore = DispatchSemaphore(value: 0)\nvar visitedPages: Set\u003CURL\u003E = []\nvar pagesToVisit: Set\u003CURL\u003E = [startUrl]\n\n\u002F\u002F Crawler Core\nfunc crawl() {\n    guard visitedPages.count \u003C= maximumPagesToVisit else {\n        print(\"🏁 Reached max number of pages to visit\")\n        semaphore.signal()\n        return\n    }\n    guard let pageToVisit = pagesToVisit.popFirst() else {\n        print(\"🏁 No more pages to visit\")\n        semaphore.signal()\n        return\n    }\n    if visitedPages.contains(pageToVisit) {\n        crawl()\n    } else {\n        visit(page: pageToVisit)\n    }\n}\n\nfunc visit(page url: URL) {\n    visitedPages.insert(url)\n    \n    let task = URLSession.shared.dataTask(with: url) { data, response, error in\n        defer { crawl() }\n        guard\n            let data = data,\n            error == nil,\n            let document = String(data: data, encoding: .utf8) else { return }\n        parse(document: document, url: url)\n    }\n    \n    print(\"🔎 Visiting page: \\(url)\")\n    task.resume()\n}\n\nfunc parse(document: String, url: URL) {\n    func collectLinks() -\u003E [URL] {\n        let regex = try! NSRegularExpression(pattern: \"https:\u002F\u002F[^\\\"]*\", options: [])\n        let matches = regex.matches(in: document, options: [], range: NSRange(document.startIndex..\u003Cdocument.endIndex, in: document))\n        print(matches.map { m in document[Range(m.range, in: document)!]} )\n        return matches.compactMap { m in URL(string: String(document[Range(m.range, in: document)!])) }\n    }\n    print(collectLinks())\n    collectLinks().forEach { pagesToVisit.insert($0) }\n}\n\ncrawl()\n\u002F\u002Fsemaphore.wait()\n```",bodyHtml:"\u003Cp\u003E福岡市の\u003Ca href=\"https:\u002F\u002Fckan.open-governmentdata.org\u002Fdataset\u002F401000_pref_fukuoka_covid19_patients\"\u003ECOVID19オープンデータ\u003C\u002Fa\u003Eは更新されるたびにURLが更新される（そして古いURLは削除される）という意味不明な\u003Ca href=\"https:\u002F\u002Fckan.open-governmentdata.org\u002Fdataset\u002Factivity\u002F401000_pref_fukuoka_covid19_patients\"\u003E運用\u003C\u002Fa\u003Eなので、毎日swiftプログラムを書き換えるという馬鹿なことをしていたのだけど、半年たってようやくcrawlingしようという気になりました。\u003C\u002Fp\u003E\n\u003Cp\u003E適当なサイトでそのやり方を調べるとそれなりに簡単みたいだっただけど、コピペで動かない。\nそもそもこの正規表現は何?というレベルでコードに不信感を抱いたのでplaygroundで色々修正して正解を探した。\u003C\u002Fp\u003E\n\u003Cp\u003E結局こうなった。\u003Ccode\u003Eparse\u003C\u002Fcode\u003Eの中身をほぼ作り直し。\nしかし、それにしても正規表現を使うのに\u003Ccode\u003ENSなんとか\u003C\u002Fcode\u003Eを使うというあたりが、言語が「閉じてない」感。ちょっとねえ。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E Foundation\n\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Input your parameters here\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E startUrl \u003Cspan class=\"hljs-operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-type\"\u003EURL\u003C\u002Fspan\u003E(string: \u003Cspan class=\"hljs-string\"\u003E&quot;https:\u002F\u002Fckan.open-governmentdata.org\u002Fdataset\u002F401000_pref_fukuoka_covid19_patients&quot;\u003C\u002Fspan\u003E)\u003Cspan class=\"hljs-operator\"\u003E!\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E wordToSearch \u003Cspan class=\"hljs-operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;Swift&quot;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E maximumPagesToVisit \u003Cspan class=\"hljs-operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-number\"\u003E10\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Crawler Parameters\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E semaphore \u003Cspan class=\"hljs-operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-type\"\u003EDispatchSemaphore\u003C\u002Fspan\u003E(value: \u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E)\n\u003Cspan class=\"hljs-keyword\"\u003Evar\u003C\u002Fspan\u003E visitedPages: \u003Cspan class=\"hljs-type\"\u003ESet\u003C\u002Fspan\u003E&lt;\u003Cspan class=\"hljs-type\"\u003EURL\u003C\u002Fspan\u003E&gt; \u003Cspan class=\"hljs-operator\"\u003E=\u003C\u002Fspan\u003E []\n\u003Cspan class=\"hljs-keyword\"\u003Evar\u003C\u002Fspan\u003E pagesToVisit: \u003Cspan class=\"hljs-type\"\u003ESet\u003C\u002Fspan\u003E&lt;\u003Cspan class=\"hljs-type\"\u003EURL\u003C\u002Fspan\u003E&gt; \u003Cspan class=\"hljs-operator\"\u003E=\u003C\u002Fspan\u003E [startUrl]\n\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Crawler Core\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunc\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title\"\u003Ecrawl\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-params\"\u003E()\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E {\n    \u003Cspan class=\"hljs-keyword\"\u003Eguard\u003C\u002Fspan\u003E visitedPages.count \u003Cspan class=\"hljs-operator\"\u003E&lt;=\u003C\u002Fspan\u003E maximumPagesToVisit \u003Cspan class=\"hljs-keyword\"\u003Eelse\u003C\u002Fspan\u003E {\n        \u003Cspan class=\"hljs-built_in\"\u003Eprint\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E&quot;🏁 Reached max number of pages to visit&quot;\u003C\u002Fspan\u003E)\n        semaphore.signal()\n        \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E\n    }\n    \u003Cspan class=\"hljs-keyword\"\u003Eguard\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E pageToVisit \u003Cspan class=\"hljs-operator\"\u003E=\u003C\u002Fspan\u003E pagesToVisit.popFirst() \u003Cspan class=\"hljs-keyword\"\u003Eelse\u003C\u002Fspan\u003E {\n        \u003Cspan class=\"hljs-built_in\"\u003Eprint\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E&quot;🏁 No more pages to visit&quot;\u003C\u002Fspan\u003E)\n        semaphore.signal()\n        \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E\n    }\n    \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E visitedPages.contains(pageToVisit) {\n        crawl()\n    } \u003Cspan class=\"hljs-keyword\"\u003Eelse\u003C\u002Fspan\u003E {\n        visit(page: pageToVisit)\n    }\n}\n\n\u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunc\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title\"\u003Evisit\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-params\"\u003E(page url: URL)\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E {\n    visitedPages.insert(url)\n    \n    \u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E task \u003Cspan class=\"hljs-operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-type\"\u003EURLSession\u003C\u002Fspan\u003E.shared.dataTask(with: url) { data, response, error \u003Cspan class=\"hljs-keyword\"\u003Ein\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-keyword\"\u003Edefer\u003C\u002Fspan\u003E { crawl() }\n        \u003Cspan class=\"hljs-keyword\"\u003Eguard\u003C\u002Fspan\u003E\n            \u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E data \u003Cspan class=\"hljs-operator\"\u003E=\u003C\u002Fspan\u003E data,\n            error \u003Cspan class=\"hljs-operator\"\u003E==\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-literal\"\u003Enil\u003C\u002Fspan\u003E,\n            \u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E document \u003Cspan class=\"hljs-operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-type\"\u003EString\u003C\u002Fspan\u003E(data: data, encoding: .utf8) \u003Cspan class=\"hljs-keyword\"\u003Eelse\u003C\u002Fspan\u003E { \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E }\n        parse(document: document, url: url)\n    }\n    \n    \u003Cspan class=\"hljs-built_in\"\u003Eprint\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E&quot;🔎 Visiting page: \u003Cspan class=\"hljs-subst\"\u003E\\(url)\u003C\u002Fspan\u003E&quot;\u003C\u002Fspan\u003E)\n    task.resume()\n}\n\n\u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunc\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title\"\u003Eparse\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-params\"\u003E(document: String, url: URL)\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E {\n    \u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunc\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title\"\u003EcollectLinks\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-params\"\u003E()\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E -&gt; [\u003Cspan class=\"hljs-type\"\u003EURL\u003C\u002Fspan\u003E] {\n        \u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E regex \u003Cspan class=\"hljs-operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Etry!\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-type\"\u003ENSRegularExpression\u003C\u002Fspan\u003E(pattern: \u003Cspan class=\"hljs-string\"\u003E&quot;https:\u002F\u002F[^\u003Cspan class=\"hljs-subst\"\u003E\\&quot;\u003C\u002Fspan\u003E]*&quot;\u003C\u002Fspan\u003E, options: [])\n        \u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E matches \u003Cspan class=\"hljs-operator\"\u003E=\u003C\u002Fspan\u003E regex.matches(\u003Cspan class=\"hljs-keyword\"\u003Ein\u003C\u002Fspan\u003E: document, options: [], range: \u003Cspan class=\"hljs-type\"\u003ENSRange\u003C\u002Fspan\u003E(document.startIndex\u003Cspan class=\"hljs-operator\"\u003E..&lt;\u003C\u002Fspan\u003Edocument.endIndex, \u003Cspan class=\"hljs-keyword\"\u003Ein\u003C\u002Fspan\u003E: document))\n        \u003Cspan class=\"hljs-built_in\"\u003Eprint\u003C\u002Fspan\u003E(matches.map { m \u003Cspan class=\"hljs-keyword\"\u003Ein\u003C\u002Fspan\u003E document[\u003Cspan class=\"hljs-type\"\u003ERange\u003C\u002Fspan\u003E(m.range, \u003Cspan class=\"hljs-keyword\"\u003Ein\u003C\u002Fspan\u003E: document)\u003Cspan class=\"hljs-operator\"\u003E!\u003C\u002Fspan\u003E]} )\n        \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E matches.compactMap { m \u003Cspan class=\"hljs-keyword\"\u003Ein\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-type\"\u003EURL\u003C\u002Fspan\u003E(string: \u003Cspan class=\"hljs-type\"\u003EString\u003C\u002Fspan\u003E(document[\u003Cspan class=\"hljs-type\"\u003ERange\u003C\u002Fspan\u003E(m.range, \u003Cspan class=\"hljs-keyword\"\u003Ein\u003C\u002Fspan\u003E: document)\u003Cspan class=\"hljs-operator\"\u003E!\u003C\u002Fspan\u003E])) }\n    }\n    \u003Cspan class=\"hljs-built_in\"\u003Eprint\u003C\u002Fspan\u003E(collectLinks())\n    collectLinks().forEach { pagesToVisit.insert(\u003Cspan class=\"hljs-variable\"\u003E$0\u003C\u002Fspan\u003E) }\n}\n\ncrawl()\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002Fsemaphore.wait()\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E",dir:"article\u002F.json\u002F2021",base:"2021-07-10-crawler-in-swift.json",ext:".json",sourceBase:"2021-07-10-crawler-in-swift.md",sourceExt:".md"}},title:{writable:true,enumerable:true,value:"Swiftでcrawling"},subtitle:{writable:true,enumerable:true,value:null},date:{writable:true,enumerable:true,value:"2021-07-10T00:00:00.000Z"},tags:{writable:true,enumerable:true,value:["Swift","Covid19"]},bodyContent:{writable:true,enumerable:true,value:"福岡市の[COVID19オープンデータ](https:\u002F\u002Fckan.open-governmentdata.org\u002Fdataset\u002F401000_pref_fukuoka_covid19_patients)は更新されるたびにURLが更新される（そして古いURLは削除される）という意味不明な[運用](https:\u002F\u002Fckan.open-governmentdata.org\u002Fdataset\u002Factivity\u002F401000_pref_fukuoka_covid19_patients)なので、毎日swiftプログラムを書き換えるという馬鹿なことをしていたのだけど、半年たってようやくcrawlingしようという気になりました。\n\n適当なサイトでそのやり方を調べるとそれなりに簡単みたいだっただけど、コピペで動かない。\nそもそもこの正規表現は何?というレベルでコードに不信感を抱いたのでplaygroundで色々修正して正解を探した。\n\n結局こうなった。`parse`の中身をほぼ作り直し。\nしかし、それにしても正規表現を使うのに`NSなんとか`を使うというあたりが、言語が「閉じてない」感。ちょっとねえ。\n\n```swift\nimport Foundation\n\n\u002F\u002F Input your parameters here\nlet startUrl = URL(string: \"https:\u002F\u002Fckan.open-governmentdata.org\u002Fdataset\u002F401000_pref_fukuoka_covid19_patients\")!\nlet wordToSearch = \"Swift\"\nlet maximumPagesToVisit = 10\n\n\u002F\u002F Crawler Parameters\nlet semaphore = DispatchSemaphore(value: 0)\nvar visitedPages: Set\u003CURL\u003E = []\nvar pagesToVisit: Set\u003CURL\u003E = [startUrl]\n\n\u002F\u002F Crawler Core\nfunc crawl() {\n    guard visitedPages.count \u003C= maximumPagesToVisit else {\n        print(\"🏁 Reached max number of pages to visit\")\n        semaphore.signal()\n        return\n    }\n    guard let pageToVisit = pagesToVisit.popFirst() else {\n        print(\"🏁 No more pages to visit\")\n        semaphore.signal()\n        return\n    }\n    if visitedPages.contains(pageToVisit) {\n        crawl()\n    } else {\n        visit(page: pageToVisit)\n    }\n}\n\nfunc visit(page url: URL) {\n    visitedPages.insert(url)\n    \n    let task = URLSession.shared.dataTask(with: url) { data, response, error in\n        defer { crawl() }\n        guard\n            let data = data,\n            error == nil,\n            let document = String(data: data, encoding: .utf8) else { return }\n        parse(document: document, url: url)\n    }\n    \n    print(\"🔎 Visiting page: \\(url)\")\n    task.resume()\n}\n\nfunc parse(document: String, url: URL) {\n    func collectLinks() -\u003E [URL] {\n        let regex = try! NSRegularExpression(pattern: \"https:\u002F\u002F[^\\\"]*\", options: [])\n        let matches = regex.matches(in: document, options: [], range: NSRange(document.startIndex..\u003Cdocument.endIndex, in: document))\n        print(matches.map { m in document[Range(m.range, in: document)!]} )\n        return matches.compactMap { m in URL(string: String(document[Range(m.range, in: document)!])) }\n    }\n    print(collectLinks())\n    collectLinks().forEach { pagesToVisit.insert($0) }\n}\n\ncrawl()\n\u002F\u002Fsemaphore.wait()\n```"},bodyHtml:{writable:true,enumerable:true,value:"\u003Cp\u003E福岡市の\u003Ca href=\"https:\u002F\u002Fckan.open-governmentdata.org\u002Fdataset\u002F401000_pref_fukuoka_covid19_patients\"\u003ECOVID19オープンデータ\u003C\u002Fa\u003Eは更新されるたびにURLが更新される（そして古いURLは削除される）という意味不明な\u003Ca href=\"https:\u002F\u002Fckan.open-governmentdata.org\u002Fdataset\u002Factivity\u002F401000_pref_fukuoka_covid19_patients\"\u003E運用\u003C\u002Fa\u003Eなので、毎日swiftプログラムを書き換えるという馬鹿なことをしていたのだけど、半年たってようやくcrawlingしようという気になりました。\u003C\u002Fp\u003E\n\u003Cp\u003E適当なサイトでそのやり方を調べるとそれなりに簡単みたいだっただけど、コピペで動かない。\nそもそもこの正規表現は何?というレベルでコードに不信感を抱いたのでplaygroundで色々修正して正解を探した。\u003C\u002Fp\u003E\n\u003Cp\u003E結局こうなった。\u003Ccode\u003Eparse\u003C\u002Fcode\u003Eの中身をほぼ作り直し。\nしかし、それにしても正規表現を使うのに\u003Ccode\u003ENSなんとか\u003C\u002Fcode\u003Eを使うというあたりが、言語が「閉じてない」感。ちょっとねえ。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E Foundation\n\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Input your parameters here\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E startUrl \u003Cspan class=\"hljs-operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-type\"\u003EURL\u003C\u002Fspan\u003E(string: \u003Cspan class=\"hljs-string\"\u003E&quot;https:\u002F\u002Fckan.open-governmentdata.org\u002Fdataset\u002F401000_pref_fukuoka_covid19_patients&quot;\u003C\u002Fspan\u003E)\u003Cspan class=\"hljs-operator\"\u003E!\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E wordToSearch \u003Cspan class=\"hljs-operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;Swift&quot;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E maximumPagesToVisit \u003Cspan class=\"hljs-operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-number\"\u003E10\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Crawler Parameters\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E semaphore \u003Cspan class=\"hljs-operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-type\"\u003EDispatchSemaphore\u003C\u002Fspan\u003E(value: \u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E)\n\u003Cspan class=\"hljs-keyword\"\u003Evar\u003C\u002Fspan\u003E visitedPages: \u003Cspan class=\"hljs-type\"\u003ESet\u003C\u002Fspan\u003E&lt;\u003Cspan class=\"hljs-type\"\u003EURL\u003C\u002Fspan\u003E&gt; \u003Cspan class=\"hljs-operator\"\u003E=\u003C\u002Fspan\u003E []\n\u003Cspan class=\"hljs-keyword\"\u003Evar\u003C\u002Fspan\u003E pagesToVisit: \u003Cspan class=\"hljs-type\"\u003ESet\u003C\u002Fspan\u003E&lt;\u003Cspan class=\"hljs-type\"\u003EURL\u003C\u002Fspan\u003E&gt; \u003Cspan class=\"hljs-operator\"\u003E=\u003C\u002Fspan\u003E [startUrl]\n\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Crawler Core\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunc\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title\"\u003Ecrawl\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-params\"\u003E()\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E {\n    \u003Cspan class=\"hljs-keyword\"\u003Eguard\u003C\u002Fspan\u003E visitedPages.count \u003Cspan class=\"hljs-operator\"\u003E&lt;=\u003C\u002Fspan\u003E maximumPagesToVisit \u003Cspan class=\"hljs-keyword\"\u003Eelse\u003C\u002Fspan\u003E {\n        \u003Cspan class=\"hljs-built_in\"\u003Eprint\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E&quot;🏁 Reached max number of pages to visit&quot;\u003C\u002Fspan\u003E)\n        semaphore.signal()\n        \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E\n    }\n    \u003Cspan class=\"hljs-keyword\"\u003Eguard\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E pageToVisit \u003Cspan class=\"hljs-operator\"\u003E=\u003C\u002Fspan\u003E pagesToVisit.popFirst() \u003Cspan class=\"hljs-keyword\"\u003Eelse\u003C\u002Fspan\u003E {\n        \u003Cspan class=\"hljs-built_in\"\u003Eprint\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E&quot;🏁 No more pages to visit&quot;\u003C\u002Fspan\u003E)\n        semaphore.signal()\n        \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E\n    }\n    \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E visitedPages.contains(pageToVisit) {\n        crawl()\n    } \u003Cspan class=\"hljs-keyword\"\u003Eelse\u003C\u002Fspan\u003E {\n        visit(page: pageToVisit)\n    }\n}\n\n\u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunc\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title\"\u003Evisit\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-params\"\u003E(page url: URL)\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E {\n    visitedPages.insert(url)\n    \n    \u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E task \u003Cspan class=\"hljs-operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-type\"\u003EURLSession\u003C\u002Fspan\u003E.shared.dataTask(with: url) { data, response, error \u003Cspan class=\"hljs-keyword\"\u003Ein\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-keyword\"\u003Edefer\u003C\u002Fspan\u003E { crawl() }\n        \u003Cspan class=\"hljs-keyword\"\u003Eguard\u003C\u002Fspan\u003E\n            \u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E data \u003Cspan class=\"hljs-operator\"\u003E=\u003C\u002Fspan\u003E data,\n            error \u003Cspan class=\"hljs-operator\"\u003E==\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-literal\"\u003Enil\u003C\u002Fspan\u003E,\n            \u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E document \u003Cspan class=\"hljs-operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-type\"\u003EString\u003C\u002Fspan\u003E(data: data, encoding: .utf8) \u003Cspan class=\"hljs-keyword\"\u003Eelse\u003C\u002Fspan\u003E { \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E }\n        parse(document: document, url: url)\n    }\n    \n    \u003Cspan class=\"hljs-built_in\"\u003Eprint\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E&quot;🔎 Visiting page: \u003Cspan class=\"hljs-subst\"\u003E\\(url)\u003C\u002Fspan\u003E&quot;\u003C\u002Fspan\u003E)\n    task.resume()\n}\n\n\u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunc\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title\"\u003Eparse\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-params\"\u003E(document: String, url: URL)\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E {\n    \u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunc\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title\"\u003EcollectLinks\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-params\"\u003E()\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E -&gt; [\u003Cspan class=\"hljs-type\"\u003EURL\u003C\u002Fspan\u003E] {\n        \u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E regex \u003Cspan class=\"hljs-operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Etry!\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-type\"\u003ENSRegularExpression\u003C\u002Fspan\u003E(pattern: \u003Cspan class=\"hljs-string\"\u003E&quot;https:\u002F\u002F[^\u003Cspan class=\"hljs-subst\"\u003E\\&quot;\u003C\u002Fspan\u003E]*&quot;\u003C\u002Fspan\u003E, options: [])\n        \u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E matches \u003Cspan class=\"hljs-operator\"\u003E=\u003C\u002Fspan\u003E regex.matches(\u003Cspan class=\"hljs-keyword\"\u003Ein\u003C\u002Fspan\u003E: document, options: [], range: \u003Cspan class=\"hljs-type\"\u003ENSRange\u003C\u002Fspan\u003E(document.startIndex\u003Cspan class=\"hljs-operator\"\u003E..&lt;\u003C\u002Fspan\u003Edocument.endIndex, \u003Cspan class=\"hljs-keyword\"\u003Ein\u003C\u002Fspan\u003E: document))\n        \u003Cspan class=\"hljs-built_in\"\u003Eprint\u003C\u002Fspan\u003E(matches.map { m \u003Cspan class=\"hljs-keyword\"\u003Ein\u003C\u002Fspan\u003E document[\u003Cspan class=\"hljs-type\"\u003ERange\u003C\u002Fspan\u003E(m.range, \u003Cspan class=\"hljs-keyword\"\u003Ein\u003C\u002Fspan\u003E: document)\u003Cspan class=\"hljs-operator\"\u003E!\u003C\u002Fspan\u003E]} )\n        \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E matches.compactMap { m \u003Cspan class=\"hljs-keyword\"\u003Ein\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-type\"\u003EURL\u003C\u002Fspan\u003E(string: \u003Cspan class=\"hljs-type\"\u003EString\u003C\u002Fspan\u003E(document[\u003Cspan class=\"hljs-type\"\u003ERange\u003C\u002Fspan\u003E(m.range, \u003Cspan class=\"hljs-keyword\"\u003Ein\u003C\u002Fspan\u003E: document)\u003Cspan class=\"hljs-operator\"\u003E!\u003C\u002Fspan\u003E])) }\n    }\n    \u003Cspan class=\"hljs-built_in\"\u003Eprint\u003C\u002Fspan\u003E(collectLinks())\n    collectLinks().forEach { pagesToVisit.insert(\u003Cspan class=\"hljs-variable\"\u003E$0\u003C\u002Fspan\u003E) }\n}\n\ncrawl()\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002Fsemaphore.wait()\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E"},dir:{writable:true,enumerable:true,value:"article\u002F.json\u002F2021"},base:{writable:true,enumerable:true,value:"2021-07-10-crawler-in-swift.json"},ext:{writable:true,enumerable:true,value:".json"},sourceBase:{writable:true,enumerable:true,value:"2021-07-10-crawler-in-swift.md"},sourceExt:{writable:true,enumerable:true,value:".md"}})}],fetch:[],mutations:[]});