__NUXT_JSONP__("/2019/2019-03-10-source-highlight-Rust", {data:[{article:Object.create(null,{default:{writable:true,enumerable:true,value:{title:"Build GNU Source-highlight supporting Rust for NixOS",subtitle:"NixOS的にlessをRust対応にしよう",date:"2019-03-10T00:00:00.000Z",tags:["Rust","NixOS"],bodyContent:"Let's Rust syntax highlighten in less!\n\n1. We need to apply [a patch](https:\u002F\u002Fgist.github.com\u002Ftav\u002F3846383).\n1. To apply the patch, make a simple overlay(~\u002F.config\u002Fnixpkgs\u002Foverlays\u002Fsource-highlight.nix) against [the expression](https:\u002F\u002Fgithub.com\u002FNixOS\u002Fnixpkgs\u002Fblob\u002Fmaster\u002Fpkgs\u002Ftools\u002Ftext\u002Fsource-highlight\u002Fdefault.nix) in the master branch.\n1. But somehow I failed to build it due to lack of makeinfo.\n1. So add super.texinfo to the `BuildInputs` in the overlay.\n1. Run `nix-env -i source-highliht` and got it.\n1. Activate this feature with the following settings:\n\n```shell\nexport LESS='-R'\nexport LESSOPEN='|| ~\u002F.nix-profile\u002Fbin\u002Fsrc-hilite-lesspipe.sh %s'\n```\n\nThe double veritical bars are important!\n\n\u003E However, if the first character of LESSOPEN  starts  with  two  vertical  bars, the exit status of the script becomes meaningful.  If the exit status is zero, the output is considered to  be replacement text, even if it empty.  If the exit status is nonzero, any output is ignored and the original file is used.  For compatibility with previous versions of  less, if LESSOPEN starts with only one vertical bar, the exit status of the preprocessor is ignored.\n\nIn most cases in which `less` is used as a pager, this settings is identital to the original\nbehavior. On the other side, with a single bar, `less` clears the sceen to switch to full\nscreen mode.\n\n### files\n\n- ~\u002F.config\u002Fnixpkgs\u002Foverlays\u002Fsource-highlight.nix\n\n```nix\nself: super:\n{\n    sourceHighlight = super.sourceHighlight.overrideAttrs (attrs: {\n        buildInputs = [ super.boost super.texinfo ];\n        patches = [ ~\u002F.config\u002Fnixpkgs\u002Frust.patch ];\n    });\n}\n```\n\n- ~\u002F.config\u002Fnixpkgs\u002Frust.patch\n\n```diff\ndiff -urN source-highlight-3.1.8\u002Fsrc\u002FMakefile.am source-highlight-3.1.8-Rust\u002Fsrc\u002FMakefile.am\n--- source-highlight-3.1.8\u002Fsrc\u002FMakefile.am      2015-03-30 22:00:00.000000000 +0900\n+++ source-highlight-3.1.8-Rust\u002Fsrc\u002FMakefile.am 2019-03-10 21:38:57.249427742 +0900\n@@ -86,7 +86,7 @@\n errors.lang erlang.lang proto.lang vala.lang lisp.lang islisp.lang \\\n scheme.lang po.lang opa.lang javalog.lang upc.lang tml.lang \\\n lilypond.lang coffeescript.lang go.lang \\\n-r.lang s.lang zsh.lang groovy.lang json.lang feature.lang\n+r.lang s.lang zsh.lang groovy.lang json.lang feature.lang rust.lang\n \n LANGFILES_NOTTOCHECK= \\\n tml_formatting_all.lang  tml_macrolinks.lang      tml_macrosdelayed2.lang \\\ndiff -urN source-highlight-3.1.8\u002Fsrc\u002FMakefile.in source-highlight-3.1.8-Rust\u002Fsrc\u002FMakefile.in\n--- source-highlight-3.1.8\u002Fsrc\u002FMakefile.in      2015-03-31 00:04:55.000000000 +0900\n+++ source-highlight-3.1.8-Rust\u002Fsrc\u002FMakefile.in 2019-03-10 21:39:16.152740165 +0900\n@@ -838,7 +838,7 @@\n errors.lang erlang.lang proto.lang vala.lang lisp.lang islisp.lang \\\n scheme.lang po.lang opa.lang javalog.lang upc.lang tml.lang \\\n lilypond.lang coffeescript.lang go.lang \\\n-r.lang s.lang zsh.lang groovy.lang json.lang feature.lang\n+r.lang s.lang zsh.lang groovy.lang json.lang feature.lang rust.lang\n \n LANGFILES_NOTTOCHECK = \\\n tml_formatting_all.lang  tml_macrolinks.lang      tml_macrosdelayed2.lang \\\ndiff -urN source-highlight-3.1.8\u002Fsrc\u002Flang.map source-highlight-3.1.8-Rust\u002Fsrc\u002Flang.map\n--- source-highlight-3.1.8\u002Fsrc\u002Flang.map 2015-03-30 20:26:24.000000000 +0900\n+++ source-highlight-3.1.8-Rust\u002Fsrc\u002Flang.map    2019-03-10 22:19:59.609966381 +0900\n@@ -169,3 +169,5 @@\n groovy = groovy.lang\n json = json.lang\n feature = feature.lang\n+rust = rust.lang\n+rs = rust.lang\ndiff -urN source-highlight-3.1.8\u002Fsrc\u002Frust.lang source-highlight-3.1.8-Rust\u002Fsrc\u002Frust.lang\n--- source-highlight-3.1.8\u002Fsrc\u002Frust.lang        1970-01-01 09:00:00.000000000 +0900\n+++ source-highlight-3.1.8-Rust\u002Fsrc\u002Frust.lang   2019-03-10 13:09:20.711181631 +0900\n@@ -0,0 +1,18 @@\n+preproc = \"import\",\"package\"\n+\n+include \"c_comment.lang\"\n+\n+include \"number.lang\"\n+\n+string delim \"\\\"\" \"\\\"\" escape \"\\\\\"\n+string delim \"'\" \"'\"  escape \"\\\\\"\n+string delim \"`\" \"`\"  escape \"\\\\\" multiline\n+\n+keyword = \"as|assert|break|const|copy|do|drop|else|enum|export|extern|fail|false|fn|for|if|impl|let|log|loop|match|mod|move|mut|p\nriv|pub|pure|ref|return|struct|true|trait|type|unsafe|use|while\"\n+keyword = \"be|self|static|export|assert|log|fail\"\n+\n+type = \"bool|char|f32|f64|float|i8|i16|i32|i64|int|str|u8|u16|u32|u64|uint\"\n+\n+include \"symbols.lang\"\n+\n+cbracket = \"{|}\"\n```",bodyHtml:"\u003Cp\u003ELet's Rust syntax highlighten in less!\u003C\u002Fp\u003E\n\u003Col\u003E\n\u003Cli\u003EWe need to apply \u003Ca href=\"https:\u002F\u002Fgist.github.com\u002Ftav\u002F3846383\"\u003Ea patch\u003C\u002Fa\u003E.\u003C\u002Fli\u003E\n\u003Cli\u003ETo apply the patch, make a simple overlay(~\u002F.config\u002Fnixpkgs\u002Foverlays\u002Fsource-highlight.nix) against \u003Ca href=\"https:\u002F\u002Fgithub.com\u002FNixOS\u002Fnixpkgs\u002Fblob\u002Fmaster\u002Fpkgs\u002Ftools\u002Ftext\u002Fsource-highlight\u002Fdefault.nix\"\u003Ethe expression\u003C\u002Fa\u003E in the master branch.\u003C\u002Fli\u003E\n\u003Cli\u003EBut somehow I failed to build it due to lack of makeinfo.\u003C\u002Fli\u003E\n\u003Cli\u003ESo add super.texinfo to the \u003Ccode\u003EBuildInputs\u003C\u002Fcode\u003E in the overlay.\u003C\u002Fli\u003E\n\u003Cli\u003ERun \u003Ccode\u003Enix-env -i source-highliht\u003C\u002Fcode\u003E and got it.\u003C\u002Fli\u003E\n\u003Cli\u003EActivate this feature with the following settings:\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003Eexport LESS=&#x27;-R&#x27;\nexport LESSOPEN=&#x27;|| ~\u002F.nix-profile\u002Fbin\u002Fsrc-hilite-lesspipe.sh %s&#x27;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EThe double veritical bars are important!\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003EHowever, if the first character of LESSOPEN  starts  with  two  vertical  bars, the exit status of the script becomes meaningful.  If the exit status is zero, the output is considered to  be replacement text, even if it empty.  If the exit status is nonzero, any output is ignored and the original file is used.  For compatibility with previous versions of  less, if LESSOPEN starts with only one vertical bar, the exit status of the preprocessor is ignored.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003EIn most cases in which \u003Ccode\u003Eless\u003C\u002Fcode\u003E is used as a pager, this settings is identital to the original\nbehavior. On the other side, with a single bar, \u003Ccode\u003Eless\u003C\u002Fcode\u003E clears the sceen to switch to full\nscreen mode.\u003C\u002Fp\u003E\n\u003Ch3\u003Efiles\u003C\u002Fh3\u003E\n\u003Cul\u003E\n\u003Cli\u003E~\u002F.config\u002Fnixpkgs\u002Foverlays\u002Fsource-highlight.nix\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003Eself: super:\n{\n    \u003Cspan class=\"hljs-attr\"\u003EsourceHighlight\u003C\u002Fspan\u003E = super.sourceHighlight.overrideAttrs (attrs: {\n        \u003Cspan class=\"hljs-attr\"\u003EbuildInputs\u003C\u002Fspan\u003E = [ super.boost super.texinfo ];\n        \u003Cspan class=\"hljs-attr\"\u003Epatches\u003C\u002Fspan\u003E = [ ~\u002F.config\u002Fnixpkgs\u002Frust.patch ];\n    });\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cul\u003E\n\u003Cli\u003E~\u002F.config\u002Fnixpkgs\u002Frust.patch\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003Ediff -urN source-highlight-3.1.8\u002Fsrc\u002FMakefile.am source-highlight-3.1.8-Rust\u002Fsrc\u002FMakefile.am\n\u003Cspan class=\"hljs-comment\"\u003E--- source-highlight-3.1.8\u002Fsrc\u002FMakefile.am      2015-03-30 22:00:00.000000000 +0900\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-comment\"\u003E+++ source-highlight-3.1.8-Rust\u002Fsrc\u002FMakefile.am 2019-03-10 21:38:57.249427742 +0900\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-meta\"\u003E@@ -86,7 +86,7 @@\u003C\u002Fspan\u003E\n errors.lang erlang.lang proto.lang vala.lang lisp.lang islisp.lang \\\n scheme.lang po.lang opa.lang javalog.lang upc.lang tml.lang \\\n lilypond.lang coffeescript.lang go.lang \\\n\u003Cspan class=\"hljs-deletion\"\u003E-r.lang s.lang zsh.lang groovy.lang json.lang feature.lang\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+r.lang s.lang zsh.lang groovy.lang json.lang feature.lang rust.lang\u003C\u002Fspan\u003E\n \n LANGFILES_NOTTOCHECK= \\\n tml_formatting_all.lang  tml_macrolinks.lang      tml_macrosdelayed2.lang \\\ndiff -urN source-highlight-3.1.8\u002Fsrc\u002FMakefile.in source-highlight-3.1.8-Rust\u002Fsrc\u002FMakefile.in\n\u003Cspan class=\"hljs-comment\"\u003E--- source-highlight-3.1.8\u002Fsrc\u002FMakefile.in      2015-03-31 00:04:55.000000000 +0900\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-comment\"\u003E+++ source-highlight-3.1.8-Rust\u002Fsrc\u002FMakefile.in 2019-03-10 21:39:16.152740165 +0900\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-meta\"\u003E@@ -838,7 +838,7 @@\u003C\u002Fspan\u003E\n errors.lang erlang.lang proto.lang vala.lang lisp.lang islisp.lang \\\n scheme.lang po.lang opa.lang javalog.lang upc.lang tml.lang \\\n lilypond.lang coffeescript.lang go.lang \\\n\u003Cspan class=\"hljs-deletion\"\u003E-r.lang s.lang zsh.lang groovy.lang json.lang feature.lang\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+r.lang s.lang zsh.lang groovy.lang json.lang feature.lang rust.lang\u003C\u002Fspan\u003E\n \n LANGFILES_NOTTOCHECK = \\\n tml_formatting_all.lang  tml_macrolinks.lang      tml_macrosdelayed2.lang \\\ndiff -urN source-highlight-3.1.8\u002Fsrc\u002Flang.map source-highlight-3.1.8-Rust\u002Fsrc\u002Flang.map\n\u003Cspan class=\"hljs-comment\"\u003E--- source-highlight-3.1.8\u002Fsrc\u002Flang.map 2015-03-30 20:26:24.000000000 +0900\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-comment\"\u003E+++ source-highlight-3.1.8-Rust\u002Fsrc\u002Flang.map    2019-03-10 22:19:59.609966381 +0900\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-meta\"\u003E@@ -169,3 +169,5 @@\u003C\u002Fspan\u003E\n groovy = groovy.lang\n json = json.lang\n feature = feature.lang\n\u003Cspan class=\"hljs-addition\"\u003E+rust = rust.lang\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+rs = rust.lang\u003C\u002Fspan\u003E\ndiff -urN source-highlight-3.1.8\u002Fsrc\u002Frust.lang source-highlight-3.1.8-Rust\u002Fsrc\u002Frust.lang\n\u003Cspan class=\"hljs-comment\"\u003E--- source-highlight-3.1.8\u002Fsrc\u002Frust.lang        1970-01-01 09:00:00.000000000 +0900\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-comment\"\u003E+++ source-highlight-3.1.8-Rust\u002Fsrc\u002Frust.lang   2019-03-10 13:09:20.711181631 +0900\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-meta\"\u003E@@ -0,0 +1,18 @@\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+preproc = &quot;import&quot;,&quot;package&quot;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+include &quot;c_comment.lang&quot;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+include &quot;number.lang&quot;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+string delim &quot;\\&quot;&quot; &quot;\\&quot;&quot; escape &quot;\\\\&quot;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+string delim &quot;&#x27;&quot; &quot;&#x27;&quot;  escape &quot;\\\\&quot;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+string delim &quot;`&quot; &quot;`&quot;  escape &quot;\\\\&quot; multiline\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+keyword = &quot;as|assert|break|const|copy|do|drop|else|enum|export|extern|fail|false|fn|for|if|impl|let|log|loop|match|mod|move|mut|p\u003C\u002Fspan\u003E\nriv|pub|pure|ref|return|struct|true|trait|type|unsafe|use|while&quot;\n\u003Cspan class=\"hljs-addition\"\u003E+keyword = &quot;be|self|static|export|assert|log|fail&quot;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+type = &quot;bool|char|f32|f64|float|i8|i16|i32|i64|int|str|u8|u16|u32|u64|uint&quot;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+include &quot;symbols.lang&quot;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+cbracket = &quot;{|}&quot;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E",dir:"article\u002F.json\u002F2019",base:"2019-03-10-source-highlight-Rust.json",ext:".json",sourceBase:"2019-03-10-source-highlight-Rust.md",sourceExt:".md"}},title:{writable:true,enumerable:true,value:"Build GNU Source-highlight supporting Rust for NixOS"},subtitle:{writable:true,enumerable:true,value:"NixOS的にlessをRust対応にしよう"},date:{writable:true,enumerable:true,value:"2019-03-10T00:00:00.000Z"},tags:{writable:true,enumerable:true,value:["Rust","NixOS"]},bodyContent:{writable:true,enumerable:true,value:"Let's Rust syntax highlighten in less!\n\n1. We need to apply [a patch](https:\u002F\u002Fgist.github.com\u002Ftav\u002F3846383).\n1. To apply the patch, make a simple overlay(~\u002F.config\u002Fnixpkgs\u002Foverlays\u002Fsource-highlight.nix) against [the expression](https:\u002F\u002Fgithub.com\u002FNixOS\u002Fnixpkgs\u002Fblob\u002Fmaster\u002Fpkgs\u002Ftools\u002Ftext\u002Fsource-highlight\u002Fdefault.nix) in the master branch.\n1. But somehow I failed to build it due to lack of makeinfo.\n1. So add super.texinfo to the `BuildInputs` in the overlay.\n1. Run `nix-env -i source-highliht` and got it.\n1. Activate this feature with the following settings:\n\n```shell\nexport LESS='-R'\nexport LESSOPEN='|| ~\u002F.nix-profile\u002Fbin\u002Fsrc-hilite-lesspipe.sh %s'\n```\n\nThe double veritical bars are important!\n\n\u003E However, if the first character of LESSOPEN  starts  with  two  vertical  bars, the exit status of the script becomes meaningful.  If the exit status is zero, the output is considered to  be replacement text, even if it empty.  If the exit status is nonzero, any output is ignored and the original file is used.  For compatibility with previous versions of  less, if LESSOPEN starts with only one vertical bar, the exit status of the preprocessor is ignored.\n\nIn most cases in which `less` is used as a pager, this settings is identital to the original\nbehavior. On the other side, with a single bar, `less` clears the sceen to switch to full\nscreen mode.\n\n### files\n\n- ~\u002F.config\u002Fnixpkgs\u002Foverlays\u002Fsource-highlight.nix\n\n```nix\nself: super:\n{\n    sourceHighlight = super.sourceHighlight.overrideAttrs (attrs: {\n        buildInputs = [ super.boost super.texinfo ];\n        patches = [ ~\u002F.config\u002Fnixpkgs\u002Frust.patch ];\n    });\n}\n```\n\n- ~\u002F.config\u002Fnixpkgs\u002Frust.patch\n\n```diff\ndiff -urN source-highlight-3.1.8\u002Fsrc\u002FMakefile.am source-highlight-3.1.8-Rust\u002Fsrc\u002FMakefile.am\n--- source-highlight-3.1.8\u002Fsrc\u002FMakefile.am      2015-03-30 22:00:00.000000000 +0900\n+++ source-highlight-3.1.8-Rust\u002Fsrc\u002FMakefile.am 2019-03-10 21:38:57.249427742 +0900\n@@ -86,7 +86,7 @@\n errors.lang erlang.lang proto.lang vala.lang lisp.lang islisp.lang \\\n scheme.lang po.lang opa.lang javalog.lang upc.lang tml.lang \\\n lilypond.lang coffeescript.lang go.lang \\\n-r.lang s.lang zsh.lang groovy.lang json.lang feature.lang\n+r.lang s.lang zsh.lang groovy.lang json.lang feature.lang rust.lang\n \n LANGFILES_NOTTOCHECK= \\\n tml_formatting_all.lang  tml_macrolinks.lang      tml_macrosdelayed2.lang \\\ndiff -urN source-highlight-3.1.8\u002Fsrc\u002FMakefile.in source-highlight-3.1.8-Rust\u002Fsrc\u002FMakefile.in\n--- source-highlight-3.1.8\u002Fsrc\u002FMakefile.in      2015-03-31 00:04:55.000000000 +0900\n+++ source-highlight-3.1.8-Rust\u002Fsrc\u002FMakefile.in 2019-03-10 21:39:16.152740165 +0900\n@@ -838,7 +838,7 @@\n errors.lang erlang.lang proto.lang vala.lang lisp.lang islisp.lang \\\n scheme.lang po.lang opa.lang javalog.lang upc.lang tml.lang \\\n lilypond.lang coffeescript.lang go.lang \\\n-r.lang s.lang zsh.lang groovy.lang json.lang feature.lang\n+r.lang s.lang zsh.lang groovy.lang json.lang feature.lang rust.lang\n \n LANGFILES_NOTTOCHECK = \\\n tml_formatting_all.lang  tml_macrolinks.lang      tml_macrosdelayed2.lang \\\ndiff -urN source-highlight-3.1.8\u002Fsrc\u002Flang.map source-highlight-3.1.8-Rust\u002Fsrc\u002Flang.map\n--- source-highlight-3.1.8\u002Fsrc\u002Flang.map 2015-03-30 20:26:24.000000000 +0900\n+++ source-highlight-3.1.8-Rust\u002Fsrc\u002Flang.map    2019-03-10 22:19:59.609966381 +0900\n@@ -169,3 +169,5 @@\n groovy = groovy.lang\n json = json.lang\n feature = feature.lang\n+rust = rust.lang\n+rs = rust.lang\ndiff -urN source-highlight-3.1.8\u002Fsrc\u002Frust.lang source-highlight-3.1.8-Rust\u002Fsrc\u002Frust.lang\n--- source-highlight-3.1.8\u002Fsrc\u002Frust.lang        1970-01-01 09:00:00.000000000 +0900\n+++ source-highlight-3.1.8-Rust\u002Fsrc\u002Frust.lang   2019-03-10 13:09:20.711181631 +0900\n@@ -0,0 +1,18 @@\n+preproc = \"import\",\"package\"\n+\n+include \"c_comment.lang\"\n+\n+include \"number.lang\"\n+\n+string delim \"\\\"\" \"\\\"\" escape \"\\\\\"\n+string delim \"'\" \"'\"  escape \"\\\\\"\n+string delim \"`\" \"`\"  escape \"\\\\\" multiline\n+\n+keyword = \"as|assert|break|const|copy|do|drop|else|enum|export|extern|fail|false|fn|for|if|impl|let|log|loop|match|mod|move|mut|p\nriv|pub|pure|ref|return|struct|true|trait|type|unsafe|use|while\"\n+keyword = \"be|self|static|export|assert|log|fail\"\n+\n+type = \"bool|char|f32|f64|float|i8|i16|i32|i64|int|str|u8|u16|u32|u64|uint\"\n+\n+include \"symbols.lang\"\n+\n+cbracket = \"{|}\"\n```"},bodyHtml:{writable:true,enumerable:true,value:"\u003Cp\u003ELet's Rust syntax highlighten in less!\u003C\u002Fp\u003E\n\u003Col\u003E\n\u003Cli\u003EWe need to apply \u003Ca href=\"https:\u002F\u002Fgist.github.com\u002Ftav\u002F3846383\"\u003Ea patch\u003C\u002Fa\u003E.\u003C\u002Fli\u003E\n\u003Cli\u003ETo apply the patch, make a simple overlay(~\u002F.config\u002Fnixpkgs\u002Foverlays\u002Fsource-highlight.nix) against \u003Ca href=\"https:\u002F\u002Fgithub.com\u002FNixOS\u002Fnixpkgs\u002Fblob\u002Fmaster\u002Fpkgs\u002Ftools\u002Ftext\u002Fsource-highlight\u002Fdefault.nix\"\u003Ethe expression\u003C\u002Fa\u003E in the master branch.\u003C\u002Fli\u003E\n\u003Cli\u003EBut somehow I failed to build it due to lack of makeinfo.\u003C\u002Fli\u003E\n\u003Cli\u003ESo add super.texinfo to the \u003Ccode\u003EBuildInputs\u003C\u002Fcode\u003E in the overlay.\u003C\u002Fli\u003E\n\u003Cli\u003ERun \u003Ccode\u003Enix-env -i source-highliht\u003C\u002Fcode\u003E and got it.\u003C\u002Fli\u003E\n\u003Cli\u003EActivate this feature with the following settings:\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003Eexport LESS=&#x27;-R&#x27;\nexport LESSOPEN=&#x27;|| ~\u002F.nix-profile\u002Fbin\u002Fsrc-hilite-lesspipe.sh %s&#x27;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EThe double veritical bars are important!\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003EHowever, if the first character of LESSOPEN  starts  with  two  vertical  bars, the exit status of the script becomes meaningful.  If the exit status is zero, the output is considered to  be replacement text, even if it empty.  If the exit status is nonzero, any output is ignored and the original file is used.  For compatibility with previous versions of  less, if LESSOPEN starts with only one vertical bar, the exit status of the preprocessor is ignored.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003EIn most cases in which \u003Ccode\u003Eless\u003C\u002Fcode\u003E is used as a pager, this settings is identital to the original\nbehavior. On the other side, with a single bar, \u003Ccode\u003Eless\u003C\u002Fcode\u003E clears the sceen to switch to full\nscreen mode.\u003C\u002Fp\u003E\n\u003Ch3\u003Efiles\u003C\u002Fh3\u003E\n\u003Cul\u003E\n\u003Cli\u003E~\u002F.config\u002Fnixpkgs\u002Foverlays\u002Fsource-highlight.nix\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003Eself: super:\n{\n    \u003Cspan class=\"hljs-attr\"\u003EsourceHighlight\u003C\u002Fspan\u003E = super.sourceHighlight.overrideAttrs (attrs: {\n        \u003Cspan class=\"hljs-attr\"\u003EbuildInputs\u003C\u002Fspan\u003E = [ super.boost super.texinfo ];\n        \u003Cspan class=\"hljs-attr\"\u003Epatches\u003C\u002Fspan\u003E = [ ~\u002F.config\u002Fnixpkgs\u002Frust.patch ];\n    });\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cul\u003E\n\u003Cli\u003E~\u002F.config\u002Fnixpkgs\u002Frust.patch\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003Ediff -urN source-highlight-3.1.8\u002Fsrc\u002FMakefile.am source-highlight-3.1.8-Rust\u002Fsrc\u002FMakefile.am\n\u003Cspan class=\"hljs-comment\"\u003E--- source-highlight-3.1.8\u002Fsrc\u002FMakefile.am      2015-03-30 22:00:00.000000000 +0900\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-comment\"\u003E+++ source-highlight-3.1.8-Rust\u002Fsrc\u002FMakefile.am 2019-03-10 21:38:57.249427742 +0900\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-meta\"\u003E@@ -86,7 +86,7 @@\u003C\u002Fspan\u003E\n errors.lang erlang.lang proto.lang vala.lang lisp.lang islisp.lang \\\n scheme.lang po.lang opa.lang javalog.lang upc.lang tml.lang \\\n lilypond.lang coffeescript.lang go.lang \\\n\u003Cspan class=\"hljs-deletion\"\u003E-r.lang s.lang zsh.lang groovy.lang json.lang feature.lang\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+r.lang s.lang zsh.lang groovy.lang json.lang feature.lang rust.lang\u003C\u002Fspan\u003E\n \n LANGFILES_NOTTOCHECK= \\\n tml_formatting_all.lang  tml_macrolinks.lang      tml_macrosdelayed2.lang \\\ndiff -urN source-highlight-3.1.8\u002Fsrc\u002FMakefile.in source-highlight-3.1.8-Rust\u002Fsrc\u002FMakefile.in\n\u003Cspan class=\"hljs-comment\"\u003E--- source-highlight-3.1.8\u002Fsrc\u002FMakefile.in      2015-03-31 00:04:55.000000000 +0900\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-comment\"\u003E+++ source-highlight-3.1.8-Rust\u002Fsrc\u002FMakefile.in 2019-03-10 21:39:16.152740165 +0900\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-meta\"\u003E@@ -838,7 +838,7 @@\u003C\u002Fspan\u003E\n errors.lang erlang.lang proto.lang vala.lang lisp.lang islisp.lang \\\n scheme.lang po.lang opa.lang javalog.lang upc.lang tml.lang \\\n lilypond.lang coffeescript.lang go.lang \\\n\u003Cspan class=\"hljs-deletion\"\u003E-r.lang s.lang zsh.lang groovy.lang json.lang feature.lang\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+r.lang s.lang zsh.lang groovy.lang json.lang feature.lang rust.lang\u003C\u002Fspan\u003E\n \n LANGFILES_NOTTOCHECK = \\\n tml_formatting_all.lang  tml_macrolinks.lang      tml_macrosdelayed2.lang \\\ndiff -urN source-highlight-3.1.8\u002Fsrc\u002Flang.map source-highlight-3.1.8-Rust\u002Fsrc\u002Flang.map\n\u003Cspan class=\"hljs-comment\"\u003E--- source-highlight-3.1.8\u002Fsrc\u002Flang.map 2015-03-30 20:26:24.000000000 +0900\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-comment\"\u003E+++ source-highlight-3.1.8-Rust\u002Fsrc\u002Flang.map    2019-03-10 22:19:59.609966381 +0900\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-meta\"\u003E@@ -169,3 +169,5 @@\u003C\u002Fspan\u003E\n groovy = groovy.lang\n json = json.lang\n feature = feature.lang\n\u003Cspan class=\"hljs-addition\"\u003E+rust = rust.lang\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+rs = rust.lang\u003C\u002Fspan\u003E\ndiff -urN source-highlight-3.1.8\u002Fsrc\u002Frust.lang source-highlight-3.1.8-Rust\u002Fsrc\u002Frust.lang\n\u003Cspan class=\"hljs-comment\"\u003E--- source-highlight-3.1.8\u002Fsrc\u002Frust.lang        1970-01-01 09:00:00.000000000 +0900\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-comment\"\u003E+++ source-highlight-3.1.8-Rust\u002Fsrc\u002Frust.lang   2019-03-10 13:09:20.711181631 +0900\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-meta\"\u003E@@ -0,0 +1,18 @@\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+preproc = &quot;import&quot;,&quot;package&quot;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+include &quot;c_comment.lang&quot;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+include &quot;number.lang&quot;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+string delim &quot;\\&quot;&quot; &quot;\\&quot;&quot; escape &quot;\\\\&quot;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+string delim &quot;&#x27;&quot; &quot;&#x27;&quot;  escape &quot;\\\\&quot;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+string delim &quot;`&quot; &quot;`&quot;  escape &quot;\\\\&quot; multiline\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+keyword = &quot;as|assert|break|const|copy|do|drop|else|enum|export|extern|fail|false|fn|for|if|impl|let|log|loop|match|mod|move|mut|p\u003C\u002Fspan\u003E\nriv|pub|pure|ref|return|struct|true|trait|type|unsafe|use|while&quot;\n\u003Cspan class=\"hljs-addition\"\u003E+keyword = &quot;be|self|static|export|assert|log|fail&quot;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+type = &quot;bool|char|f32|f64|float|i8|i16|i32|i64|int|str|u8|u16|u32|u64|uint&quot;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+include &quot;symbols.lang&quot;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+cbracket = &quot;{|}&quot;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E"},dir:{writable:true,enumerable:true,value:"article\u002F.json\u002F2019"},base:{writable:true,enumerable:true,value:"2019-03-10-source-highlight-Rust.json"},ext:{writable:true,enumerable:true,value:".json"},sourceBase:{writable:true,enumerable:true,value:"2019-03-10-source-highlight-Rust.md"},sourceExt:{writable:true,enumerable:true,value:".md"}})}],fetch:[],mutations:[]});