__NUXT_JSONP__("/2019/2019-05-31-connect-mongodb-atlas-from-rust", {data:[{article:Object.create(null,{default:{writable:true,enumerable:true,value:{title:"Connect mongoDB Atlas from Rust",subtitle:"\"mongodb+srv:\u002F\u002F\"がない",date:"2019-05-31T00:00:00.000Z",tags:["Rust","mongoDB","cloud"],bodyContent:"クラウドの勉強をしようと思って無料データベース[mongoDB Atlas](https:\u002F\u002Fcloud.mongodb.com\u002F)にアカウントを作ってみた。\n\nmongoDBを選んだのは、以下の理由から。\n\n- [nlp100](http:\u002F\u002Fwww.cl.ecei.tohoku.ac.jp\u002Fnlp100\u002F)の課題で、\n自前のmongoDBをrustから利用するプログラムを作ってた\n- [Zeit@now](https:\u002F\u002Fzeit.co\u002F)からも[統合](https:\u002F\u002Fzeit.co\u002Fblog\u002Fzeit-now-integrations-platform)できる\n\nセットアップはサクサクできて、あとはプログラムにconnectするだけ。\nもちろん、ちゃんと参考例が表示される。\n\n![](\u002Fimg\u002F2019\u002F05-31\u002Fmongodb-1.png)\n\n例えば**Connect Your Application**から辿ったjs用のサンプルはこうなっている。\n\n```js\nconst MongoClient = require(‘mongodb’).MongoClient;\nconst uri = \"mongodb+srv:\u002F\u002F\u003CADMIN\u003E:\u003CPASSWORD\u003E@\u003CMYCLUSTER\u003E.mongodb.net\u002Ftest?...\";\nconst client = new MongoClient(uri, { useNewUrlParser: true });\nclient.connect(err =\u003E {\n  const collection = client.db(\"test\").collection(\"devices\");\n  \u002F\u002F perform actions on the collection object\n  client.close();\n});\n```\n\nこれを真似すれば、非公式クライアントライブラリ[mongodb 0.3.12](https:\u002F\u002Fcrates.io\u002Fcrates\u002Fmongodb)を使ったRustのプログラムでも\n簡単に移植できるだろうと思ったら、予想が外れてしまった。\n\n```\nthread 'main' panicked at 'failed to auth: OperationError(\"No servers available for the provide\nd ReadPreference.\")', src\u002Flibcore\u002Fresult.rs:997:5                                              \nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.  \n```\n\nネットで調べると参考になりそうなのはこのあたり。\n\n- https:\u002F\u002Fwww.reddit.com\u002Fr\u002Frust\u002Fcomments\u002F9x0bs9\u002Fconnect_to_mongodb_atlas_from_rust\u002F\n- https:\u002F\u002Fgithub.com\u002Fmongodb-labs\u002Fmongo-rust-driver-prototype\u002Fissues\u002F291\n- https:\u002F\u002Fgithub.com\u002Fmongodb-labs\u002Fmongo-rust-driver-prototype\u002Fissues\u002F313\n\nそこで、\n\n- クライアントライブラリは変えたくないなあ。なんとかmongodbで繋ぎたい。\n- しかし、`mongodb+srv:\u002F\u002F`はまだ実装されてない。\n- とにかく、sshのサポートは必要なのでmongodbのコンパイルに`features=\"ssl\"` が必要\n- そして、認証には`db::auth`メソッドを呼び出すことが必要。\n- さらに、認証時につなぐべきbdは `\"auth\"` である。ただwebでの管理画面を見ていると正解はどうも `\"admin\"` らしい。。。\n\nとなって、こういうコードになった：\n\n```rust\n   let opts = mongodb::ClientOptions::with_unauthenticated_ssl(None, false);\n   let uri = \u003C上のURI\u003E;\n   let mut m = mongodb::Client::with_uri_and_options(uri, opts).expect(\"connect\");\n   client.db(\"admin\").auth(\"\u003CADMIN\u003E\", \"\u003CPASSWORD\u003E\").expect(\"auth\");\n   let coll = client.db(\"\u003CDB\u003E\").collection(\"\u003CCOLLECTION\u003E\");\n    ...\n```\nしかし、これらを反映してもどうやっても最初のエラーが取れない。\n\nいい加減、諦めかけていたのだけど、**Connect with the Mongo Shell**の中のサンプルを見ていて\n指定すべきURIがMongo Shellのバージョンによって全然違うことに気づいた。\n具体的には最新版(3.6 or later)だと、\n\n```\nmongo \"mongodb+srv:\u002F\u002F\u003CCLUSTER\u003E.mongodb.net\u002Ftest\" --username \u003Cusername\u003E\n```\n\nなのが、3.3 or earlierだとこうなる。\n\n```\nmongo \"mongodb:\u002F\u002F\u003CCLUSTER\u003E-\u003CSHARD0\u003E.mongodb.net:xxx,\u003CCLUSTER\u003E-\u003CSHARD1\u003E.mongodb.net:xxx,\u003CCLUSTER\u003E-\u003CSHARD2\u003E.mongodb.net:xxx\u002Ftest?...\n```\n\n問題の `srv` がないじゃん！\n\nなので上のrustプログラムの2行目の`uri`の定義をこれと入れ替えたら、さっくり通ってしまった。\n\nめでたし、めでたし。",bodyHtml:"\u003Cp\u003Eクラウドの勉強をしようと思って無料データベース\u003Ca href=\"https:\u002F\u002Fcloud.mongodb.com\u002F\"\u003EmongoDB Atlas\u003C\u002Fa\u003Eにアカウントを作ってみた。\u003C\u002Fp\u003E\n\u003Cp\u003EmongoDBを選んだのは、以下の理由から。\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"http:\u002F\u002Fwww.cl.ecei.tohoku.ac.jp\u002Fnlp100\u002F\"\u003Enlp100\u003C\u002Fa\u003Eの課題で、\n自前のmongoDBをrustから利用するプログラムを作ってた\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fzeit.co\u002F\"\u003EZeit@now\u003C\u002Fa\u003Eからも\u003Ca href=\"https:\u002F\u002Fzeit.co\u002Fblog\u002Fzeit-now-integrations-platform\"\u003E統合\u003C\u002Fa\u003Eできる\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003Eセットアップはサクサクできて、あとはプログラムにconnectするだけ。\nもちろん、ちゃんと参考例が表示される。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"\u002Fimg\u002F2019\u002F05-31\u002Fmongodb-1.png\" alt=\"\"\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E例えば\u003Cstrong\u003EConnect Your Application\u003C\u002Fstrong\u003Eから辿ったjs用のサンプルはこうなっている。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E MongoClient = \u003Cspan class=\"hljs-built_in\"\u003Erequire\u003C\u002Fspan\u003E(‘mongodb’).MongoClient;\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E uri = \u003Cspan class=\"hljs-string\"\u003E&quot;mongodb+srv:\u002F\u002F&lt;ADMIN&gt;:&lt;PASSWORD&gt;@&lt;MYCLUSTER&gt;.mongodb.net\u002Ftest?...&quot;\u003C\u002Fspan\u003E;\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E client = \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E MongoClient(uri, { \u003Cspan class=\"hljs-attr\"\u003EuseNewUrlParser\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-literal\"\u003Etrue\u003C\u002Fspan\u003E });\nclient.connect(\u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-params\"\u003Eerr\u003C\u002Fspan\u003E =&gt;\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E collection = client.db(\u003Cspan class=\"hljs-string\"\u003E&quot;test&quot;\u003C\u002Fspan\u003E).collection(\u003Cspan class=\"hljs-string\"\u003E&quot;devices&quot;\u003C\u002Fspan\u003E);\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F perform actions on the collection object\u003C\u002Fspan\u003E\n  client.close();\n});\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003Eこれを真似すれば、非公式クライアントライブラリ\u003Ca href=\"https:\u002F\u002Fcrates.io\u002Fcrates\u002Fmongodb\"\u003Emongodb 0.3.12\u003C\u002Fa\u003Eを使ったRustのプログラムでも\n簡単に移植できるだろうと思ったら、予想が外れてしまった。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Ethread 'main' panicked at 'failed to auth: OperationError(&quot;No servers available for the provide\nd ReadPreference.&quot;)', src\u002Flibcore\u002Fresult.rs:997:5                                              \nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.  \n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003Eネットで調べると参考になりそうなのはこのあたり。\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003Ehttps:\u002F\u002Fwww.reddit.com\u002Fr\u002Frust\u002Fcomments\u002F9x0bs9\u002Fconnect_to_mongodb_atlas_from_rust\u002F\u003C\u002Fli\u003E\n\u003Cli\u003Ehttps:\u002F\u002Fgithub.com\u002Fmongodb-labs\u002Fmongo-rust-driver-prototype\u002Fissues\u002F291\u003C\u002Fli\u003E\n\u003Cli\u003Ehttps:\u002F\u002Fgithub.com\u002Fmongodb-labs\u002Fmongo-rust-driver-prototype\u002Fissues\u002F313\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003Eそこで、\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003Eクライアントライブラリは変えたくないなあ。なんとかmongodbで繋ぎたい。\u003C\u002Fli\u003E\n\u003Cli\u003Eしかし、\u003Ccode\u003Emongodb+srv:\u002F\u002F\u003C\u002Fcode\u003Eはまだ実装されてない。\u003C\u002Fli\u003E\n\u003Cli\u003Eとにかく、sshのサポートは必要なのでmongodbのコンパイルに\u003Ccode\u003Efeatures=&quot;ssl&quot;\u003C\u002Fcode\u003E が必要\u003C\u002Fli\u003E\n\u003Cli\u003Eそして、認証には\u003Ccode\u003Edb::auth\u003C\u002Fcode\u003Eメソッドを呼び出すことが必要。\u003C\u002Fli\u003E\n\u003Cli\u003Eさらに、認証時につなぐべきbdは \u003Ccode\u003E&quot;auth&quot;\u003C\u002Fcode\u003E である。ただwebでの管理画面を見ていると正解はどうも \u003Ccode\u003E&quot;admin&quot;\u003C\u002Fcode\u003E らしい。。。\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003Eとなって、こういうコードになった：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E opts = mongodb::ClientOptions::with_unauthenticated_ssl(\u003Cspan class=\"hljs-literal\"\u003ENone\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-literal\"\u003Efalse\u003C\u002Fspan\u003E);\n   \u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E uri = &lt;上のURI&gt;;\n   \u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Emut\u003C\u002Fspan\u003E m = mongodb::Client::with_uri_and_options(uri, opts).expect(\u003Cspan class=\"hljs-string\"\u003E&quot;connect&quot;\u003C\u002Fspan\u003E);\n   client.db(\u003Cspan class=\"hljs-string\"\u003E&quot;admin&quot;\u003C\u002Fspan\u003E).auth(\u003Cspan class=\"hljs-string\"\u003E&quot;&lt;ADMIN&gt;&quot;\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E&quot;&lt;PASSWORD&gt;&quot;\u003C\u002Fspan\u003E).expect(\u003Cspan class=\"hljs-string\"\u003E&quot;auth&quot;\u003C\u002Fspan\u003E);\n   \u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E coll = client.db(\u003Cspan class=\"hljs-string\"\u003E&quot;&lt;DB&gt;&quot;\u003C\u002Fspan\u003E).collection(\u003Cspan class=\"hljs-string\"\u003E&quot;&lt;COLLECTION&gt;&quot;\u003C\u002Fspan\u003E);\n    ...\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003Eしかし、これらを反映してもどうやっても最初のエラーが取れない。\u003C\u002Fp\u003E\n\u003Cp\u003Eいい加減、諦めかけていたのだけど、\u003Cstrong\u003EConnect with the Mongo Shell\u003C\u002Fstrong\u003Eの中のサンプルを見ていて\n指定すべきURIがMongo Shellのバージョンによって全然違うことに気づいた。\n具体的には最新版(3.6 or later)だと、\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Emongo &quot;mongodb+srv:\u002F\u002F&lt;CLUSTER&gt;.mongodb.net\u002Ftest&quot; --username &lt;username&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003Eなのが、3.3 or earlierだとこうなる。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Emongo &quot;mongodb:\u002F\u002F&lt;CLUSTER&gt;-&lt;SHARD0&gt;.mongodb.net:xxx,&lt;CLUSTER&gt;-&lt;SHARD1&gt;.mongodb.net:xxx,&lt;CLUSTER&gt;-&lt;SHARD2&gt;.mongodb.net:xxx\u002Ftest?...\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E問題の \u003Ccode\u003Esrv\u003C\u002Fcode\u003E がないじゃん！\u003C\u002Fp\u003E\n\u003Cp\u003Eなので上のrustプログラムの2行目の\u003Ccode\u003Euri\u003C\u002Fcode\u003Eの定義をこれと入れ替えたら、さっくり通ってしまった。\u003C\u002Fp\u003E\n\u003Cp\u003Eめでたし、めでたし。\u003C\u002Fp\u003E\n",dir:"article\u002F.json\u002F2019",base:"2019-05-31-connect-mongodb-atlas-from-rust.json",ext:".json",sourceBase:"2019-05-31-connect-mongodb-atlas-from-rust.md",sourceExt:".md"}},title:{writable:true,enumerable:true,value:"Connect mongoDB Atlas from Rust"},subtitle:{writable:true,enumerable:true,value:"\"mongodb+srv:\u002F\u002F\"がない"},date:{writable:true,enumerable:true,value:"2019-05-31T00:00:00.000Z"},tags:{writable:true,enumerable:true,value:["Rust","mongoDB","cloud"]},bodyContent:{writable:true,enumerable:true,value:"クラウドの勉強をしようと思って無料データベース[mongoDB Atlas](https:\u002F\u002Fcloud.mongodb.com\u002F)にアカウントを作ってみた。\n\nmongoDBを選んだのは、以下の理由から。\n\n- [nlp100](http:\u002F\u002Fwww.cl.ecei.tohoku.ac.jp\u002Fnlp100\u002F)の課題で、\n自前のmongoDBをrustから利用するプログラムを作ってた\n- [Zeit@now](https:\u002F\u002Fzeit.co\u002F)からも[統合](https:\u002F\u002Fzeit.co\u002Fblog\u002Fzeit-now-integrations-platform)できる\n\nセットアップはサクサクできて、あとはプログラムにconnectするだけ。\nもちろん、ちゃんと参考例が表示される。\n\n![](\u002Fimg\u002F2019\u002F05-31\u002Fmongodb-1.png)\n\n例えば**Connect Your Application**から辿ったjs用のサンプルはこうなっている。\n\n```js\nconst MongoClient = require(‘mongodb’).MongoClient;\nconst uri = \"mongodb+srv:\u002F\u002F\u003CADMIN\u003E:\u003CPASSWORD\u003E@\u003CMYCLUSTER\u003E.mongodb.net\u002Ftest?...\";\nconst client = new MongoClient(uri, { useNewUrlParser: true });\nclient.connect(err =\u003E {\n  const collection = client.db(\"test\").collection(\"devices\");\n  \u002F\u002F perform actions on the collection object\n  client.close();\n});\n```\n\nこれを真似すれば、非公式クライアントライブラリ[mongodb 0.3.12](https:\u002F\u002Fcrates.io\u002Fcrates\u002Fmongodb)を使ったRustのプログラムでも\n簡単に移植できるだろうと思ったら、予想が外れてしまった。\n\n```\nthread 'main' panicked at 'failed to auth: OperationError(\"No servers available for the provide\nd ReadPreference.\")', src\u002Flibcore\u002Fresult.rs:997:5                                              \nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.  \n```\n\nネットで調べると参考になりそうなのはこのあたり。\n\n- https:\u002F\u002Fwww.reddit.com\u002Fr\u002Frust\u002Fcomments\u002F9x0bs9\u002Fconnect_to_mongodb_atlas_from_rust\u002F\n- https:\u002F\u002Fgithub.com\u002Fmongodb-labs\u002Fmongo-rust-driver-prototype\u002Fissues\u002F291\n- https:\u002F\u002Fgithub.com\u002Fmongodb-labs\u002Fmongo-rust-driver-prototype\u002Fissues\u002F313\n\nそこで、\n\n- クライアントライブラリは変えたくないなあ。なんとかmongodbで繋ぎたい。\n- しかし、`mongodb+srv:\u002F\u002F`はまだ実装されてない。\n- とにかく、sshのサポートは必要なのでmongodbのコンパイルに`features=\"ssl\"` が必要\n- そして、認証には`db::auth`メソッドを呼び出すことが必要。\n- さらに、認証時につなぐべきbdは `\"auth\"` である。ただwebでの管理画面を見ていると正解はどうも `\"admin\"` らしい。。。\n\nとなって、こういうコードになった：\n\n```rust\n   let opts = mongodb::ClientOptions::with_unauthenticated_ssl(None, false);\n   let uri = \u003C上のURI\u003E;\n   let mut m = mongodb::Client::with_uri_and_options(uri, opts).expect(\"connect\");\n   client.db(\"admin\").auth(\"\u003CADMIN\u003E\", \"\u003CPASSWORD\u003E\").expect(\"auth\");\n   let coll = client.db(\"\u003CDB\u003E\").collection(\"\u003CCOLLECTION\u003E\");\n    ...\n```\nしかし、これらを反映してもどうやっても最初のエラーが取れない。\n\nいい加減、諦めかけていたのだけど、**Connect with the Mongo Shell**の中のサンプルを見ていて\n指定すべきURIがMongo Shellのバージョンによって全然違うことに気づいた。\n具体的には最新版(3.6 or later)だと、\n\n```\nmongo \"mongodb+srv:\u002F\u002F\u003CCLUSTER\u003E.mongodb.net\u002Ftest\" --username \u003Cusername\u003E\n```\n\nなのが、3.3 or earlierだとこうなる。\n\n```\nmongo \"mongodb:\u002F\u002F\u003CCLUSTER\u003E-\u003CSHARD0\u003E.mongodb.net:xxx,\u003CCLUSTER\u003E-\u003CSHARD1\u003E.mongodb.net:xxx,\u003CCLUSTER\u003E-\u003CSHARD2\u003E.mongodb.net:xxx\u002Ftest?...\n```\n\n問題の `srv` がないじゃん！\n\nなので上のrustプログラムの2行目の`uri`の定義をこれと入れ替えたら、さっくり通ってしまった。\n\nめでたし、めでたし。"},bodyHtml:{writable:true,enumerable:true,value:"\u003Cp\u003Eクラウドの勉強をしようと思って無料データベース\u003Ca href=\"https:\u002F\u002Fcloud.mongodb.com\u002F\"\u003EmongoDB Atlas\u003C\u002Fa\u003Eにアカウントを作ってみた。\u003C\u002Fp\u003E\n\u003Cp\u003EmongoDBを選んだのは、以下の理由から。\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"http:\u002F\u002Fwww.cl.ecei.tohoku.ac.jp\u002Fnlp100\u002F\"\u003Enlp100\u003C\u002Fa\u003Eの課題で、\n自前のmongoDBをrustから利用するプログラムを作ってた\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fzeit.co\u002F\"\u003EZeit@now\u003C\u002Fa\u003Eからも\u003Ca href=\"https:\u002F\u002Fzeit.co\u002Fblog\u002Fzeit-now-integrations-platform\"\u003E統合\u003C\u002Fa\u003Eできる\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003Eセットアップはサクサクできて、あとはプログラムにconnectするだけ。\nもちろん、ちゃんと参考例が表示される。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"\u002Fimg\u002F2019\u002F05-31\u002Fmongodb-1.png\" alt=\"\"\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E例えば\u003Cstrong\u003EConnect Your Application\u003C\u002Fstrong\u003Eから辿ったjs用のサンプルはこうなっている。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E MongoClient = \u003Cspan class=\"hljs-built_in\"\u003Erequire\u003C\u002Fspan\u003E(‘mongodb’).MongoClient;\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E uri = \u003Cspan class=\"hljs-string\"\u003E&quot;mongodb+srv:\u002F\u002F&lt;ADMIN&gt;:&lt;PASSWORD&gt;@&lt;MYCLUSTER&gt;.mongodb.net\u002Ftest?...&quot;\u003C\u002Fspan\u003E;\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E client = \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E MongoClient(uri, { \u003Cspan class=\"hljs-attr\"\u003EuseNewUrlParser\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-literal\"\u003Etrue\u003C\u002Fspan\u003E });\nclient.connect(\u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-params\"\u003Eerr\u003C\u002Fspan\u003E =&gt;\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E collection = client.db(\u003Cspan class=\"hljs-string\"\u003E&quot;test&quot;\u003C\u002Fspan\u003E).collection(\u003Cspan class=\"hljs-string\"\u003E&quot;devices&quot;\u003C\u002Fspan\u003E);\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F perform actions on the collection object\u003C\u002Fspan\u003E\n  client.close();\n});\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003Eこれを真似すれば、非公式クライアントライブラリ\u003Ca href=\"https:\u002F\u002Fcrates.io\u002Fcrates\u002Fmongodb\"\u003Emongodb 0.3.12\u003C\u002Fa\u003Eを使ったRustのプログラムでも\n簡単に移植できるだろうと思ったら、予想が外れてしまった。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Ethread 'main' panicked at 'failed to auth: OperationError(&quot;No servers available for the provide\nd ReadPreference.&quot;)', src\u002Flibcore\u002Fresult.rs:997:5                                              \nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.  \n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003Eネットで調べると参考になりそうなのはこのあたり。\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003Ehttps:\u002F\u002Fwww.reddit.com\u002Fr\u002Frust\u002Fcomments\u002F9x0bs9\u002Fconnect_to_mongodb_atlas_from_rust\u002F\u003C\u002Fli\u003E\n\u003Cli\u003Ehttps:\u002F\u002Fgithub.com\u002Fmongodb-labs\u002Fmongo-rust-driver-prototype\u002Fissues\u002F291\u003C\u002Fli\u003E\n\u003Cli\u003Ehttps:\u002F\u002Fgithub.com\u002Fmongodb-labs\u002Fmongo-rust-driver-prototype\u002Fissues\u002F313\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003Eそこで、\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003Eクライアントライブラリは変えたくないなあ。なんとかmongodbで繋ぎたい。\u003C\u002Fli\u003E\n\u003Cli\u003Eしかし、\u003Ccode\u003Emongodb+srv:\u002F\u002F\u003C\u002Fcode\u003Eはまだ実装されてない。\u003C\u002Fli\u003E\n\u003Cli\u003Eとにかく、sshのサポートは必要なのでmongodbのコンパイルに\u003Ccode\u003Efeatures=&quot;ssl&quot;\u003C\u002Fcode\u003E が必要\u003C\u002Fli\u003E\n\u003Cli\u003Eそして、認証には\u003Ccode\u003Edb::auth\u003C\u002Fcode\u003Eメソッドを呼び出すことが必要。\u003C\u002Fli\u003E\n\u003Cli\u003Eさらに、認証時につなぐべきbdは \u003Ccode\u003E&quot;auth&quot;\u003C\u002Fcode\u003E である。ただwebでの管理画面を見ていると正解はどうも \u003Ccode\u003E&quot;admin&quot;\u003C\u002Fcode\u003E らしい。。。\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003Eとなって、こういうコードになった：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E opts = mongodb::ClientOptions::with_unauthenticated_ssl(\u003Cspan class=\"hljs-literal\"\u003ENone\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-literal\"\u003Efalse\u003C\u002Fspan\u003E);\n   \u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E uri = &lt;上のURI&gt;;\n   \u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Emut\u003C\u002Fspan\u003E m = mongodb::Client::with_uri_and_options(uri, opts).expect(\u003Cspan class=\"hljs-string\"\u003E&quot;connect&quot;\u003C\u002Fspan\u003E);\n   client.db(\u003Cspan class=\"hljs-string\"\u003E&quot;admin&quot;\u003C\u002Fspan\u003E).auth(\u003Cspan class=\"hljs-string\"\u003E&quot;&lt;ADMIN&gt;&quot;\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E&quot;&lt;PASSWORD&gt;&quot;\u003C\u002Fspan\u003E).expect(\u003Cspan class=\"hljs-string\"\u003E&quot;auth&quot;\u003C\u002Fspan\u003E);\n   \u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E coll = client.db(\u003Cspan class=\"hljs-string\"\u003E&quot;&lt;DB&gt;&quot;\u003C\u002Fspan\u003E).collection(\u003Cspan class=\"hljs-string\"\u003E&quot;&lt;COLLECTION&gt;&quot;\u003C\u002Fspan\u003E);\n    ...\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003Eしかし、これらを反映してもどうやっても最初のエラーが取れない。\u003C\u002Fp\u003E\n\u003Cp\u003Eいい加減、諦めかけていたのだけど、\u003Cstrong\u003EConnect with the Mongo Shell\u003C\u002Fstrong\u003Eの中のサンプルを見ていて\n指定すべきURIがMongo Shellのバージョンによって全然違うことに気づいた。\n具体的には最新版(3.6 or later)だと、\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Emongo &quot;mongodb+srv:\u002F\u002F&lt;CLUSTER&gt;.mongodb.net\u002Ftest&quot; --username &lt;username&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003Eなのが、3.3 or earlierだとこうなる。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Emongo &quot;mongodb:\u002F\u002F&lt;CLUSTER&gt;-&lt;SHARD0&gt;.mongodb.net:xxx,&lt;CLUSTER&gt;-&lt;SHARD1&gt;.mongodb.net:xxx,&lt;CLUSTER&gt;-&lt;SHARD2&gt;.mongodb.net:xxx\u002Ftest?...\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E問題の \u003Ccode\u003Esrv\u003C\u002Fcode\u003E がないじゃん！\u003C\u002Fp\u003E\n\u003Cp\u003Eなので上のrustプログラムの2行目の\u003Ccode\u003Euri\u003C\u002Fcode\u003Eの定義をこれと入れ替えたら、さっくり通ってしまった。\u003C\u002Fp\u003E\n\u003Cp\u003Eめでたし、めでたし。\u003C\u002Fp\u003E\n"},dir:{writable:true,enumerable:true,value:"article\u002F.json\u002F2019"},base:{writable:true,enumerable:true,value:"2019-05-31-connect-mongodb-atlas-from-rust.json"},ext:{writable:true,enumerable:true,value:".json"},sourceBase:{writable:true,enumerable:true,value:"2019-05-31-connect-mongodb-atlas-from-rust.md"},sourceExt:{writable:true,enumerable:true,value:".md"}})}],fetch:[],mutations:[]});