__NUXT_JSONP__("/2020/2020-03-19-structopt", {data:[{article:Object.create(null,{default:{writable:true,enumerable:true,value:{title:"Passing args to StructOpt",subtitle:"which start with '--'",date:"2020-03-19T00:00:00.000Z",tags:["Rust"],bodyContent:"[SAT-bench](https:\u002F\u002Fgithub.com\u002Fshnarazk\u002FSAT-bench)はRust製SATソルバ\n[Splr](https:\u002F\u002Fgithub.com\u002Fshnarazk\u002Fsplr)のベンチマーク支援Rust製ツールです。\n設定を変えてベンチマークを実行するためにSplrへのオプションを受け渡せるように以下のような`Config`になっ\nています。\n\n```rust\n#[derive(Clone, Debug, StructOpt)]\n#[structopt(name = \"sat-bench\", about = \"A SAT Competition benchmark runner\")]\npub struct Config {\n    \u002F\u002F\u002F the problem\n    #[structopt(long = \"benchmark\", short = \"B\", default_value = \"SR19Core\")]\n    pub benchmark_name: String,\n    \u002F\u002F\u002F solver names\n    #[structopt(long = \"solver\", short = \"s\", default_value = \"\")]\n    pub solver: String,\n    \u002F\u002F\u002F arguments passed to solvers\n    #[structopt(long = \"options\", default_value = \"\")]\n    pub solver_options: String,\n    ...\n```\n\n実行するときには\n\n```\n$ benchm --benchmark \"SR19\" --solver splr\n```\n\nのように実行するのですが、いざオプションを設定しようとすると\n\n```\n$ benchm --benchmark \"SR19\" --solver splr --options \"--without-elim\" -j 3\nerror: Found argument '--without' which wasn't expected, or isn't valid in this context\n```\n\nとなってしまう。ダブルクォートで括っているから明らかに文字列なんだけどそれが意味をなしていない。\nこれはバグだと思うのだけど1年以上経っても直る気配はないので対処療法があるはず。探してみたら\n\n\n```\n$ benchm --benchmark \"SR19\" --solver splr --options \\\\--without-elim -j 3\n```\n\nということだった。shell と structopt の二つのレベルのエスケープが必要。\n対象文字列が空白文字を含むなら\n\n```\n benchm --benchmark \"SR19\" --solver splr --options \\\\--rt\\\\ 0.8 -j 3\n```\n\nとすることで `--rt 0.8` を渡せるようになるみたいだ。\nつまり、 `nix-env -qa` で正規表現を使う場合と同じことでした。",bodyHtml:"\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fshnarazk\u002FSAT-bench\"\u003ESAT-bench\u003C\u002Fa\u003EはRust製SATソルバ\n\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fshnarazk\u002Fsplr\"\u003ESplr\u003C\u002Fa\u003Eのベンチマーク支援Rust製ツールです。\n設定を変えてベンチマークを実行するためにSplrへのオプションを受け渡せるように以下のような\u003Ccode\u003EConfig\u003C\u002Fcode\u003Eになっ\nています。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E\u003Cspan class=\"hljs-meta\"\u003E#[derive(Clone, Debug, StructOpt)]\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-meta\"\u003E#[structopt(name = \u003Cspan class=\"hljs-meta-string\"\u003E&quot;sat-bench&quot;\u003C\u002Fspan\u003E, about = \u003Cspan class=\"hljs-meta-string\"\u003E&quot;A SAT Competition benchmark runner&quot;\u003C\u002Fspan\u003E)]\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Epub\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-class\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Estruct\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title\"\u003EConfig\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E {\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F\u002F the problem\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-meta\"\u003E#[structopt(long = \u003Cspan class=\"hljs-meta-string\"\u003E&quot;benchmark&quot;\u003C\u002Fspan\u003E, short = \u003Cspan class=\"hljs-meta-string\"\u003E&quot;B&quot;\u003C\u002Fspan\u003E, default_value = \u003Cspan class=\"hljs-meta-string\"\u003E&quot;SR19Core&quot;\u003C\u002Fspan\u003E)]\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-keyword\"\u003Epub\u003C\u002Fspan\u003E benchmark_name: \u003Cspan class=\"hljs-built_in\"\u003EString\u003C\u002Fspan\u003E,\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F\u002F solver names\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-meta\"\u003E#[structopt(long = \u003Cspan class=\"hljs-meta-string\"\u003E&quot;solver&quot;\u003C\u002Fspan\u003E, short = \u003Cspan class=\"hljs-meta-string\"\u003E&quot;s&quot;\u003C\u002Fspan\u003E, default_value = \u003Cspan class=\"hljs-meta-string\"\u003E&quot;&quot;\u003C\u002Fspan\u003E)]\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-keyword\"\u003Epub\u003C\u002Fspan\u003E solver: \u003Cspan class=\"hljs-built_in\"\u003EString\u003C\u002Fspan\u003E,\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F\u002F arguments passed to solvers\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-meta\"\u003E#[structopt(long = \u003Cspan class=\"hljs-meta-string\"\u003E&quot;options&quot;\u003C\u002Fspan\u003E, default_value = \u003Cspan class=\"hljs-meta-string\"\u003E&quot;&quot;\u003C\u002Fspan\u003E)]\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-keyword\"\u003Epub\u003C\u002Fspan\u003E solver_options: \u003Cspan class=\"hljs-built_in\"\u003EString\u003C\u002Fspan\u003E,\n    ...\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E実行するときには\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003E$ benchm --benchmark &quot;SR19&quot; --solver splr\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003Eのように実行するのですが、いざオプションを設定しようとすると\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003E$ benchm --benchmark &quot;SR19&quot; --solver splr --options &quot;--without-elim&quot; -j 3\nerror: Found argument '--without' which wasn't expected, or isn't valid in this context\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003Eとなってしまう。ダブルクォートで括っているから明らかに文字列なんだけどそれが意味をなしていない。\nこれはバグだと思うのだけど1年以上経っても直る気配はないので対処療法があるはず。探してみたら\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003E$ benchm --benchmark &quot;SR19&quot; --solver splr --options \\\\--without-elim -j 3\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003Eということだった。shell と structopt の二つのレベルのエスケープが必要。\n対象文字列が空白文字を含むなら\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003E benchm --benchmark &quot;SR19&quot; --solver splr --options \\\\--rt\\\\ 0.8 -j 3\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003Eとすることで \u003Ccode\u003E--rt 0.8\u003C\u002Fcode\u003E を渡せるようになるみたいだ。\nつまり、 \u003Ccode\u003Enix-env -qa\u003C\u002Fcode\u003E で正規表現を使う場合と同じことでした。\u003C\u002Fp\u003E\n",dir:"article\u002F.json\u002F2020",base:"2020-03-19-structopt.json",ext:".json",sourceBase:"2020-03-19-structopt.md",sourceExt:".md"}},title:{writable:true,enumerable:true,value:"Passing args to StructOpt"},subtitle:{writable:true,enumerable:true,value:"which start with '--'"},date:{writable:true,enumerable:true,value:"2020-03-19T00:00:00.000Z"},tags:{writable:true,enumerable:true,value:["Rust"]},bodyContent:{writable:true,enumerable:true,value:"[SAT-bench](https:\u002F\u002Fgithub.com\u002Fshnarazk\u002FSAT-bench)はRust製SATソルバ\n[Splr](https:\u002F\u002Fgithub.com\u002Fshnarazk\u002Fsplr)のベンチマーク支援Rust製ツールです。\n設定を変えてベンチマークを実行するためにSplrへのオプションを受け渡せるように以下のような`Config`になっ\nています。\n\n```rust\n#[derive(Clone, Debug, StructOpt)]\n#[structopt(name = \"sat-bench\", about = \"A SAT Competition benchmark runner\")]\npub struct Config {\n    \u002F\u002F\u002F the problem\n    #[structopt(long = \"benchmark\", short = \"B\", default_value = \"SR19Core\")]\n    pub benchmark_name: String,\n    \u002F\u002F\u002F solver names\n    #[structopt(long = \"solver\", short = \"s\", default_value = \"\")]\n    pub solver: String,\n    \u002F\u002F\u002F arguments passed to solvers\n    #[structopt(long = \"options\", default_value = \"\")]\n    pub solver_options: String,\n    ...\n```\n\n実行するときには\n\n```\n$ benchm --benchmark \"SR19\" --solver splr\n```\n\nのように実行するのですが、いざオプションを設定しようとすると\n\n```\n$ benchm --benchmark \"SR19\" --solver splr --options \"--without-elim\" -j 3\nerror: Found argument '--without' which wasn't expected, or isn't valid in this context\n```\n\nとなってしまう。ダブルクォートで括っているから明らかに文字列なんだけどそれが意味をなしていない。\nこれはバグだと思うのだけど1年以上経っても直る気配はないので対処療法があるはず。探してみたら\n\n\n```\n$ benchm --benchmark \"SR19\" --solver splr --options \\\\--without-elim -j 3\n```\n\nということだった。shell と structopt の二つのレベルのエスケープが必要。\n対象文字列が空白文字を含むなら\n\n```\n benchm --benchmark \"SR19\" --solver splr --options \\\\--rt\\\\ 0.8 -j 3\n```\n\nとすることで `--rt 0.8` を渡せるようになるみたいだ。\nつまり、 `nix-env -qa` で正規表現を使う場合と同じことでした。"},bodyHtml:{writable:true,enumerable:true,value:"\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fshnarazk\u002FSAT-bench\"\u003ESAT-bench\u003C\u002Fa\u003EはRust製SATソルバ\n\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fshnarazk\u002Fsplr\"\u003ESplr\u003C\u002Fa\u003Eのベンチマーク支援Rust製ツールです。\n設定を変えてベンチマークを実行するためにSplrへのオプションを受け渡せるように以下のような\u003Ccode\u003EConfig\u003C\u002Fcode\u003Eになっ\nています。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E\u003Cspan class=\"hljs-meta\"\u003E#[derive(Clone, Debug, StructOpt)]\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-meta\"\u003E#[structopt(name = \u003Cspan class=\"hljs-meta-string\"\u003E&quot;sat-bench&quot;\u003C\u002Fspan\u003E, about = \u003Cspan class=\"hljs-meta-string\"\u003E&quot;A SAT Competition benchmark runner&quot;\u003C\u002Fspan\u003E)]\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Epub\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-class\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Estruct\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title\"\u003EConfig\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E {\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F\u002F the problem\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-meta\"\u003E#[structopt(long = \u003Cspan class=\"hljs-meta-string\"\u003E&quot;benchmark&quot;\u003C\u002Fspan\u003E, short = \u003Cspan class=\"hljs-meta-string\"\u003E&quot;B&quot;\u003C\u002Fspan\u003E, default_value = \u003Cspan class=\"hljs-meta-string\"\u003E&quot;SR19Core&quot;\u003C\u002Fspan\u003E)]\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-keyword\"\u003Epub\u003C\u002Fspan\u003E benchmark_name: \u003Cspan class=\"hljs-built_in\"\u003EString\u003C\u002Fspan\u003E,\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F\u002F solver names\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-meta\"\u003E#[structopt(long = \u003Cspan class=\"hljs-meta-string\"\u003E&quot;solver&quot;\u003C\u002Fspan\u003E, short = \u003Cspan class=\"hljs-meta-string\"\u003E&quot;s&quot;\u003C\u002Fspan\u003E, default_value = \u003Cspan class=\"hljs-meta-string\"\u003E&quot;&quot;\u003C\u002Fspan\u003E)]\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-keyword\"\u003Epub\u003C\u002Fspan\u003E solver: \u003Cspan class=\"hljs-built_in\"\u003EString\u003C\u002Fspan\u003E,\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F\u002F arguments passed to solvers\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-meta\"\u003E#[structopt(long = \u003Cspan class=\"hljs-meta-string\"\u003E&quot;options&quot;\u003C\u002Fspan\u003E, default_value = \u003Cspan class=\"hljs-meta-string\"\u003E&quot;&quot;\u003C\u002Fspan\u003E)]\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-keyword\"\u003Epub\u003C\u002Fspan\u003E solver_options: \u003Cspan class=\"hljs-built_in\"\u003EString\u003C\u002Fspan\u003E,\n    ...\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E実行するときには\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003E$ benchm --benchmark &quot;SR19&quot; --solver splr\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003Eのように実行するのですが、いざオプションを設定しようとすると\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003E$ benchm --benchmark &quot;SR19&quot; --solver splr --options &quot;--without-elim&quot; -j 3\nerror: Found argument '--without' which wasn't expected, or isn't valid in this context\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003Eとなってしまう。ダブルクォートで括っているから明らかに文字列なんだけどそれが意味をなしていない。\nこれはバグだと思うのだけど1年以上経っても直る気配はないので対処療法があるはず。探してみたら\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003E$ benchm --benchmark &quot;SR19&quot; --solver splr --options \\\\--without-elim -j 3\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003Eということだった。shell と structopt の二つのレベルのエスケープが必要。\n対象文字列が空白文字を含むなら\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003E benchm --benchmark &quot;SR19&quot; --solver splr --options \\\\--rt\\\\ 0.8 -j 3\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003Eとすることで \u003Ccode\u003E--rt 0.8\u003C\u002Fcode\u003E を渡せるようになるみたいだ。\nつまり、 \u003Ccode\u003Enix-env -qa\u003C\u002Fcode\u003E で正規表現を使う場合と同じことでした。\u003C\u002Fp\u003E\n"},dir:{writable:true,enumerable:true,value:"article\u002F.json\u002F2020"},base:{writable:true,enumerable:true,value:"2020-03-19-structopt.json"},ext:{writable:true,enumerable:true,value:".json"},sourceBase:{writable:true,enumerable:true,value:"2020-03-19-structopt.md"},sourceExt:{writable:true,enumerable:true,value:".md"}})}],fetch:[],mutations:[]});