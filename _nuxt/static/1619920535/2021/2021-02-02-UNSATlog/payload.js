__NUXT_JSONP__("/2021/2021-02-02-UNSATlog", {data:[{article:Object.create(null,{default:{writable:true,enumerable:true,value:{title:"UNSAT LOG, 2021, Jan.",subtitle:"Vol.2, No.1.",date:"2021-02-02T00:00:00.000Z",tags:["SAT","splr","unsatlog"],banner:"\u002Fimg\u002F2021\u002F02-02\u002Fbanner.jpg",bodyContent:"# UNSATlog\n\n\n## 202101\n\nあけまして[Splr-0.6.0](https:\u002F\u002Fgithub.com\u002Fshnarazk\u002Fsplr\u002Freleases\u002Ftag\u002Fsplr-0.6.0)出ました。\nそれどころか[0.6.1](https:\u002F\u002Fgithub.com\u002Fshnarazk\u002Fsplr\u002Freleases\u002Ftag\u002Fsplr-0.6.1)も[0.6.2](https:\u002F\u002Fgithub.com\u002Fshnarazk\u002Fsplr\u002Freleases\u002Ftag\u002FSplr-0.6.2)も出ました。\nいやあ長かった。\nその割にはむしろ圧倒的に性能劣化してしまってますが十分にベンチマークを回すだけのリソースがないんだからしょうがない。\nどうでもいい「やってみたらよくなった」的な高速化は捨てる方向に舵を取ったのは長期的にはいい判断だと思いたい。\n\n## What’s Splr-0.6.0?\n\nSplr-0.6.0の売りは、\n- 依存crateの削減、\n- タイムアウトを増加させれば求解数が単調に増加すること、\n- 将来のためにphase, stabilize, stageという構造を土台にしたこと、\n- ベンチマークの結果主導のよくわからない（理論的根拠のない）ヒューリスティックスを捨てたこと\nくらいだろうか。\nおっと、その結果2倍くらい性能が悪くなったことも特筆しなければ。\n\n![](https:\u002F\u002Fuser-images.githubusercontent.com\u002F997855\u002F104808677-24d97080-582b-11eb-85af-d01fd161bafd.png)\n\nただし0.6.0のリリース直後に立て続けに出たpoint releaseによってまあ少しは改善しました。\n0.6.1ではLBDの更新を、0.6.2では節削減のタイミングをstabilization のサイクルに合わせるようにしました（最近使用フラグをクリアする影響を除けば、はるかにゆっくり節を削減するので解けなくなることは原則としてないはず）。\n遅くはなったけどだんだんよく鳴る法華の太鼓ってね。\n\n## ようこそ夏休み\n\n夏休みが終わった！ようやく宿題できました。\nやっぱりLBDはいい尺度だったんだ。ということで納得。\n\n![](https:\u002F\u002Fshnarazk.github.io\u002Fimg\u002F2021\u002F01-26\u002FUUF250-LBD-ave.png)\n\nなんというかファイル名は2020-XX-XXでタイムスタンプは202101という収拾がつかないことになってしまった。\n反省。\nさてこれで去年のcompetition のproceedings 読んで、cactus plot書いて、論文読んだら新シーズンの始まり。\nその前に圏論の入門を読んでしまわなければ。\n巣ごもり生活に抵抗なし。\n\n## その他\n\n大きめのSudokuに[挑戦](https:\u002F\u002Fshnarazk.github.io\u002F2021\u002F2021-01-17-sudoku144\u002F)。\n144x144は対応できたけど、400x400はCNFの生成でギブアップ。\nちょっと無理。\n\n## 今後の予定\n\n[Splr-0.6.3](https:\u002F\u002Fgithub.com\u002Fshnarazk\u002Fsplr\u002Fpull\u002F72)がすぐにでも出せそうなのでまずはそこに集中します。\nベンチマークをすると時間を延ばしても全然求解数が増えないので、問題数を絞る代わりにタイムアウトを十分に長くした設定で何が起きているか調べている最中。\n結果に結びつくかはまだまだ不明だけどUUF250の求解速度が感動的なくらい速くなっている。\nちょっと期待できるものになるのではなかろうか。",bodyHtml:"\u003Ch1\u003EUNSATlog\u003C\u002Fh1\u003E\n\u003Ch2\u003E202101\u003C\u002Fh2\u003E\n\u003Cp\u003Eあけまして\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fshnarazk\u002Fsplr\u002Freleases\u002Ftag\u002Fsplr-0.6.0\"\u003ESplr-0.6.0\u003C\u002Fa\u003E出ました。\nそれどころか\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fshnarazk\u002Fsplr\u002Freleases\u002Ftag\u002Fsplr-0.6.1\"\u003E0.6.1\u003C\u002Fa\u003Eも\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fshnarazk\u002Fsplr\u002Freleases\u002Ftag\u002FSplr-0.6.2\"\u003E0.6.2\u003C\u002Fa\u003Eも出ました。\nいやあ長かった。\nその割にはむしろ圧倒的に性能劣化してしまってますが十分にベンチマークを回すだけのリソースがないんだからしょうがない。\nどうでもいい「やってみたらよくなった」的な高速化は捨てる方向に舵を取ったのは長期的にはいい判断だと思いたい。\u003C\u002Fp\u003E\n\u003Ch2\u003EWhat’s Splr-0.6.0?\u003C\u002Fh2\u003E\n\u003Cp\u003ESplr-0.6.0の売りは、\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E依存crateの削減、\u003C\u002Fli\u003E\n\u003Cli\u003Eタイムアウトを増加させれば求解数が単調に増加すること、\u003C\u002Fli\u003E\n\u003Cli\u003E将来のためにphase, stabilize, stageという構造を土台にしたこと、\u003C\u002Fli\u003E\n\u003Cli\u003Eベンチマークの結果主導のよくわからない（理論的根拠のない）ヒューリスティックスを捨てたこと\nくらいだろうか。\nおっと、その結果2倍くらい性能が悪くなったことも特筆しなければ。\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fuser-images.githubusercontent.com\u002F997855\u002F104808677-24d97080-582b-11eb-85af-d01fd161bafd.png\" alt=\"\"\u003E\u003C\u002Fp\u003E\n\u003Cp\u003Eただし0.6.0のリリース直後に立て続けに出たpoint releaseによってまあ少しは改善しました。\n0.6.1ではLBDの更新を、0.6.2では節削減のタイミングをstabilization のサイクルに合わせるようにしました（最近使用フラグをクリアする影響を除けば、はるかにゆっくり節を削減するので解けなくなることは原則としてないはず）。\n遅くはなったけどだんだんよく鳴る法華の太鼓ってね。\u003C\u002Fp\u003E\n\u003Ch2\u003Eようこそ夏休み\u003C\u002Fh2\u003E\n\u003Cp\u003E夏休みが終わった！ようやく宿題できました。\nやっぱりLBDはいい尺度だったんだ。ということで納得。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fshnarazk.github.io\u002Fimg\u002F2021\u002F01-26\u002FUUF250-LBD-ave.png\" alt=\"\"\u003E\u003C\u002Fp\u003E\n\u003Cp\u003Eなんというかファイル名は2020-XX-XXでタイムスタンプは202101という収拾がつかないことになってしまった。\n反省。\nさてこれで去年のcompetition のproceedings 読んで、cactus plot書いて、論文読んだら新シーズンの始まり。\nその前に圏論の入門を読んでしまわなければ。\n巣ごもり生活に抵抗なし。\u003C\u002Fp\u003E\n\u003Ch2\u003Eその他\u003C\u002Fh2\u003E\n\u003Cp\u003E大きめのSudokuに\u003Ca href=\"https:\u002F\u002Fshnarazk.github.io\u002F2021\u002F2021-01-17-sudoku144\u002F\"\u003E挑戦\u003C\u002Fa\u003E。\n144x144は対応できたけど、400x400はCNFの生成でギブアップ。\nちょっと無理。\u003C\u002Fp\u003E\n\u003Ch2\u003E今後の予定\u003C\u002Fh2\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fshnarazk\u002Fsplr\u002Fpull\u002F72\"\u003ESplr-0.6.3\u003C\u002Fa\u003Eがすぐにでも出せそうなのでまずはそこに集中します。\nベンチマークをすると時間を延ばしても全然求解数が増えないので、問題数を絞る代わりにタイムアウトを十分に長くした設定で何が起きているか調べている最中。\n結果に結びつくかはまだまだ不明だけどUUF250の求解速度が感動的なくらい速くなっている。\nちょっと期待できるものになるのではなかろうか。\u003C\u002Fp\u003E\n",dir:"article\u002F.json\u002F2021",base:"2021-02-02-UNSATlog.json",ext:".json",sourceBase:"2021-02-02-UNSATlog.md",sourceExt:".md"}},title:{writable:true,enumerable:true,value:"UNSAT LOG, 2021, Jan."},subtitle:{writable:true,enumerable:true,value:"Vol.2, No.1."},date:{writable:true,enumerable:true,value:"2021-02-02T00:00:00.000Z"},tags:{writable:true,enumerable:true,value:["SAT","splr","unsatlog"]},banner:{writable:true,enumerable:true,value:"\u002Fimg\u002F2021\u002F02-02\u002Fbanner.jpg"},bodyContent:{writable:true,enumerable:true,value:"# UNSATlog\n\n\n## 202101\n\nあけまして[Splr-0.6.0](https:\u002F\u002Fgithub.com\u002Fshnarazk\u002Fsplr\u002Freleases\u002Ftag\u002Fsplr-0.6.0)出ました。\nそれどころか[0.6.1](https:\u002F\u002Fgithub.com\u002Fshnarazk\u002Fsplr\u002Freleases\u002Ftag\u002Fsplr-0.6.1)も[0.6.2](https:\u002F\u002Fgithub.com\u002Fshnarazk\u002Fsplr\u002Freleases\u002Ftag\u002FSplr-0.6.2)も出ました。\nいやあ長かった。\nその割にはむしろ圧倒的に性能劣化してしまってますが十分にベンチマークを回すだけのリソースがないんだからしょうがない。\nどうでもいい「やってみたらよくなった」的な高速化は捨てる方向に舵を取ったのは長期的にはいい判断だと思いたい。\n\n## What’s Splr-0.6.0?\n\nSplr-0.6.0の売りは、\n- 依存crateの削減、\n- タイムアウトを増加させれば求解数が単調に増加すること、\n- 将来のためにphase, stabilize, stageという構造を土台にしたこと、\n- ベンチマークの結果主導のよくわからない（理論的根拠のない）ヒューリスティックスを捨てたこと\nくらいだろうか。\nおっと、その結果2倍くらい性能が悪くなったことも特筆しなければ。\n\n![](https:\u002F\u002Fuser-images.githubusercontent.com\u002F997855\u002F104808677-24d97080-582b-11eb-85af-d01fd161bafd.png)\n\nただし0.6.0のリリース直後に立て続けに出たpoint releaseによってまあ少しは改善しました。\n0.6.1ではLBDの更新を、0.6.2では節削減のタイミングをstabilization のサイクルに合わせるようにしました（最近使用フラグをクリアする影響を除けば、はるかにゆっくり節を削減するので解けなくなることは原則としてないはず）。\n遅くはなったけどだんだんよく鳴る法華の太鼓ってね。\n\n## ようこそ夏休み\n\n夏休みが終わった！ようやく宿題できました。\nやっぱりLBDはいい尺度だったんだ。ということで納得。\n\n![](https:\u002F\u002Fshnarazk.github.io\u002Fimg\u002F2021\u002F01-26\u002FUUF250-LBD-ave.png)\n\nなんというかファイル名は2020-XX-XXでタイムスタンプは202101という収拾がつかないことになってしまった。\n反省。\nさてこれで去年のcompetition のproceedings 読んで、cactus plot書いて、論文読んだら新シーズンの始まり。\nその前に圏論の入門を読んでしまわなければ。\n巣ごもり生活に抵抗なし。\n\n## その他\n\n大きめのSudokuに[挑戦](https:\u002F\u002Fshnarazk.github.io\u002F2021\u002F2021-01-17-sudoku144\u002F)。\n144x144は対応できたけど、400x400はCNFの生成でギブアップ。\nちょっと無理。\n\n## 今後の予定\n\n[Splr-0.6.3](https:\u002F\u002Fgithub.com\u002Fshnarazk\u002Fsplr\u002Fpull\u002F72)がすぐにでも出せそうなのでまずはそこに集中します。\nベンチマークをすると時間を延ばしても全然求解数が増えないので、問題数を絞る代わりにタイムアウトを十分に長くした設定で何が起きているか調べている最中。\n結果に結びつくかはまだまだ不明だけどUUF250の求解速度が感動的なくらい速くなっている。\nちょっと期待できるものになるのではなかろうか。"},bodyHtml:{writable:true,enumerable:true,value:"\u003Ch1\u003EUNSATlog\u003C\u002Fh1\u003E\n\u003Ch2\u003E202101\u003C\u002Fh2\u003E\n\u003Cp\u003Eあけまして\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fshnarazk\u002Fsplr\u002Freleases\u002Ftag\u002Fsplr-0.6.0\"\u003ESplr-0.6.0\u003C\u002Fa\u003E出ました。\nそれどころか\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fshnarazk\u002Fsplr\u002Freleases\u002Ftag\u002Fsplr-0.6.1\"\u003E0.6.1\u003C\u002Fa\u003Eも\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fshnarazk\u002Fsplr\u002Freleases\u002Ftag\u002FSplr-0.6.2\"\u003E0.6.2\u003C\u002Fa\u003Eも出ました。\nいやあ長かった。\nその割にはむしろ圧倒的に性能劣化してしまってますが十分にベンチマークを回すだけのリソースがないんだからしょうがない。\nどうでもいい「やってみたらよくなった」的な高速化は捨てる方向に舵を取ったのは長期的にはいい判断だと思いたい。\u003C\u002Fp\u003E\n\u003Ch2\u003EWhat’s Splr-0.6.0?\u003C\u002Fh2\u003E\n\u003Cp\u003ESplr-0.6.0の売りは、\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E依存crateの削減、\u003C\u002Fli\u003E\n\u003Cli\u003Eタイムアウトを増加させれば求解数が単調に増加すること、\u003C\u002Fli\u003E\n\u003Cli\u003E将来のためにphase, stabilize, stageという構造を土台にしたこと、\u003C\u002Fli\u003E\n\u003Cli\u003Eベンチマークの結果主導のよくわからない（理論的根拠のない）ヒューリスティックスを捨てたこと\nくらいだろうか。\nおっと、その結果2倍くらい性能が悪くなったことも特筆しなければ。\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fuser-images.githubusercontent.com\u002F997855\u002F104808677-24d97080-582b-11eb-85af-d01fd161bafd.png\" alt=\"\"\u003E\u003C\u002Fp\u003E\n\u003Cp\u003Eただし0.6.0のリリース直後に立て続けに出たpoint releaseによってまあ少しは改善しました。\n0.6.1ではLBDの更新を、0.6.2では節削減のタイミングをstabilization のサイクルに合わせるようにしました（最近使用フラグをクリアする影響を除けば、はるかにゆっくり節を削減するので解けなくなることは原則としてないはず）。\n遅くはなったけどだんだんよく鳴る法華の太鼓ってね。\u003C\u002Fp\u003E\n\u003Ch2\u003Eようこそ夏休み\u003C\u002Fh2\u003E\n\u003Cp\u003E夏休みが終わった！ようやく宿題できました。\nやっぱりLBDはいい尺度だったんだ。ということで納得。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fshnarazk.github.io\u002Fimg\u002F2021\u002F01-26\u002FUUF250-LBD-ave.png\" alt=\"\"\u003E\u003C\u002Fp\u003E\n\u003Cp\u003Eなんというかファイル名は2020-XX-XXでタイムスタンプは202101という収拾がつかないことになってしまった。\n反省。\nさてこれで去年のcompetition のproceedings 読んで、cactus plot書いて、論文読んだら新シーズンの始まり。\nその前に圏論の入門を読んでしまわなければ。\n巣ごもり生活に抵抗なし。\u003C\u002Fp\u003E\n\u003Ch2\u003Eその他\u003C\u002Fh2\u003E\n\u003Cp\u003E大きめのSudokuに\u003Ca href=\"https:\u002F\u002Fshnarazk.github.io\u002F2021\u002F2021-01-17-sudoku144\u002F\"\u003E挑戦\u003C\u002Fa\u003E。\n144x144は対応できたけど、400x400はCNFの生成でギブアップ。\nちょっと無理。\u003C\u002Fp\u003E\n\u003Ch2\u003E今後の予定\u003C\u002Fh2\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fshnarazk\u002Fsplr\u002Fpull\u002F72\"\u003ESplr-0.6.3\u003C\u002Fa\u003Eがすぐにでも出せそうなのでまずはそこに集中します。\nベンチマークをすると時間を延ばしても全然求解数が増えないので、問題数を絞る代わりにタイムアウトを十分に長くした設定で何が起きているか調べている最中。\n結果に結びつくかはまだまだ不明だけどUUF250の求解速度が感動的なくらい速くなっている。\nちょっと期待できるものになるのではなかろうか。\u003C\u002Fp\u003E\n"},dir:{writable:true,enumerable:true,value:"article\u002F.json\u002F2021"},base:{writable:true,enumerable:true,value:"2021-02-02-UNSATlog.json"},ext:{writable:true,enumerable:true,value:".json"},sourceBase:{writable:true,enumerable:true,value:"2021-02-02-UNSATlog.md"},sourceExt:{writable:true,enumerable:true,value:".md"}})}],fetch:[],mutations:[]});