__NUXT_JSONP__("/2019/2019-07-31-observable", {data:[{article:Object.create(null,{default:{writable:true,enumerable:true,value:{title:"About Observable",subtitle:"強力な可視化機能を手に入れた",date:"2019-08-04T00:00:00.000Z",tags:["javascript","Observable","Nuxtjs","jang"],bodyContent:"Javascript版jupyterのようなものの一つの[Observable](https:\u002F\u002Fobservablehq.com\u002F)。\n可視化の結果を貼り付けられるように、Nuxtベースのこのブログに組み込めないか現在考え中。\nとりあえず[こういうこと](https:\u002F\u002Fobservablehq.com\u002Fd\u002F1cbb7a450b192e69)ができるなら、\nやる価値はありそうだ。\n\nまず、以下のコードでObservableのノートは一つのJavascriptにexportできるらしい。\n\n```js\n\u003Cscript type=\"module\"\u003E\nimport {Runtime, Inspector} from \"https:\u002F\u002Fcdn.jsdelivr.net\u002Fnpm\u002F@observablehq\u002Fruntime@4\u002Fdist\u002Fruntime.js\";\nimport notebook from \"https:\u002F\u002Fapi.observablehq.com\u002Fd\u002F1cbb7a450b192e69.js?v=3\";\nnew Runtime().module(notebook, Inspector.into(document.body));\n\u003C\u002Fscript\u003E\n```\n\nなので、それをfetchするような専用のテンプレートを用意すれば埋め込めるはず。\n\n- pages\u002F_year\u002F_slug\u002Findex.vue\n- pages\u002F_year\u002F_slug\u002Fobservable\u002Findex.vue\n\nみたいにすればいいのでは。でその中身は、\n\n```js\n\u003Cscript\u003E\nawait fetch()\n\u003Cscript\u003E\n```\n\nはて？ templateの中に書けるのかしらん？\nさっきのコードをちゃんと読んで、だんだんわかってきた。\njquery的なDOM mountが前提だ。vueの仮想DOMとは相性悪そう。。。\n\n\u003Cscript type=\"module\"\u003E\nimport {Runtime, Inspector} from \"https:\u002F\u002Fcdn.jsdelivr.net\u002Fnpm\u002F@observablehq\u002Fruntime@4\u002Fdist\u002Fruntime.js\";\nimport notebook from \"https:\u002F\u002Fapi.observablehq.com\u002Fd\u002F1cbb7a450b192e69.js?v=3\";\nnew Runtime().module(notebook, Inspector.into(document.body));\n\u003C\u002Fscript\u003E\n\nとりあえずでっち上げたもの： \n\n- https:\u002F\u002Fshnarazk.now.sh\u002Fobs\u002F\n- https:\u002F\u002Fshnarazk.now.sh\u002Fobs\u002Findex.html\n\nrouterを設定しないといけない？？\n\n## 2019-08-01T21:05 上手くいったversion 0.1\n\nまずインデックスページにJSONおよびエントリをでっち上げて\nnuxt-linkで振ってみる。このようなObservable由来のページは\n\n- pages\u002F_year\u002F_slug\u002Fobs\u002Findex.vue\n\nに処理させることにした。index.vueの中身は以下の通り。\ntemplate中のscriptはObservableのマニュアルにあったものをそのまま流用。\n\n```js\n\u003Ctemplate\u003E\n  \u003Cdiv\u003E\n    \u003CHeader title=\"Embedded Observable\" \u002F\u003E\n    \u003Csection class=\"section\"\u003E\n      \u003Cdiv id=\"Observed\"\u003E\u003C\u002Fdiv\u003E\n      \u003CEntryFooter tags=\"['Observable']\" \u002F\u003E\n    \u003C\u002Fsection\u003E\n    \u003Cscript type=\"module\"\u003E\n      import {\n        Runtime,\n        Inspector\n      } from 'https:\u002F\u002Fcdn.jsdelivr.net\u002Fnpm\u002F@observablehq\u002Fruntime@4\u002Fdist\u002Fruntime.js'\n      import notebook from 'https:\u002F\u002Fapi.observablehq.com\u002Fd\u002F1cbb7a450b192e69.js?v=3'\n      new Runtime().module(notebook, Inspector.into('#Observed'))\n    \u003C\u002Fscript\u003E\n  \u003C\u002Fdiv\u003E\n\u003C\u002Ftemplate\u003E\n\u003Cscript\u003E\nimport Header from '~\u002Fcomponents\u002FTheHeader'\nimport EntryFooter from '~\u002Fcomponents\u002FEntryFooter'\nexport default {\n  components: {\n    Header,\n    EntryFooter\n  }\n}\n\u003C\u002Fscript\u003E\n```\n\n仮想DOMとの協調は不安定だが中身は`#Obesarbable`な要素に取り込まれ、\n他のエントリと同じ体裁で表示できるようになった。\nDOMの上書き問題は適切なidを作成してやればいいだろう。\nあとはvuexにうまく取り込めばいい。\n\n## 2019-08-03T21:05 上手くいったversion 0.9\n\n先日の方法を延長するだけでうまくいきそうだ。\n\n- mdから作ったjsonファイルにObservable用の手書きJSONを混ぜてvuexに登録\n- Observableのnotebookに対するend pointは先に書いた通り\n  - pages\u002F_year\u002F_slug\u002Fobs\u002Findex.vue\n  に対応させる。\n- canvasの埋め込み先はObservableでのnotebook idを`_sulg`としたユニークな`dvi`要素にすることで、\n  仮想DOMによる干渉を極力避ける。\n- `\\deep\\`対応したCSSを用意してあげる。\n  ただしcanvasのサイズがピクセルで固定なのはどう対応したものか見当つかない。\n\nまあ、これくらいで最低限のことはできるようになった。\n\n```js\n\u003Ctemplate\u003E\n  \u003Cdiv\u003E\n    \u003CHeader title=\"Embedded Observable Notebook\" \u002F\u003E\n    \u003Csection class=\"section\"\u003E\n      \u003Ch1 class=\"title has-text-primary has-text-weight-semibold\"\u003E\n        \u003Ca :href=\"'https:\u002F\u002Fobservablehq.com\u002Fd\u002F' + $route.params.slug\"\u003E\n          Id #_{{ $route.params.slug }}\n        \u003C\u002Fa\u003E\n      \u003C\u002Fh1\u003E\n      \u003Cdiv :id=\"'_' + $route.params.slug\" class=\"observable-content\"\u003E\u003C\u002Fdiv\u003E\n      \u003CEntryFooter :tags=\"['Observable']\" \u002F\u003E\n    \u003C\u002Fsection\u003E\n    \u003Cscript type=\"module\"\u003E\n      import {\n        Runtime,\n        Inspector\n      } from 'https:\u002F\u002Fcdn.jsdelivr.net\u002Fnpm\u002F@observablehq\u002Fruntime@4\u002Fdist\u002Fruntime.js'\n      import notebook from 'https:\u002F\u002Fapi.observablehq.com\u002Fd\u002F{{$route.params.slug}}.js?v=3'\n      new Runtime().module(notebook, Inspector.into('{{'#_' + $route.params.slug}}'))\n    \u003C\u002Fscript\u003E\n  \u003C\u002Fdiv\u003E\n\u003C\u002Ftemplate\u003E\n\u003Cscript\u003E\nimport Header from '~\u002Fcomponents\u002FTheHeader'\nimport EntryFooter from '~\u002Fcomponents\u002FEntryFooter'\nexport default {\n  components: {\n    Header,\n    EntryFooter\n  }\n}\n\u003C\u002Fscript\u003E\n```",bodyHtml:"\u003Cp\u003EJavascript版jupyterのようなものの一つの\u003Ca href=\"https:\u002F\u002Fobservablehq.com\u002F\"\u003EObservable\u003C\u002Fa\u003E。\n可視化の結果を貼り付けられるように、Nuxtベースのこのブログに組み込めないか現在考え中。\nとりあえず\u003Ca href=\"https:\u002F\u002Fobservablehq.com\u002Fd\u002F1cbb7a450b192e69\"\u003Eこういうこと\u003C\u002Fa\u003Eができるなら、\nやる価値はありそうだ。\u003C\u002Fp\u003E\n\u003Cp\u003Eまず、以下のコードでObservableのノートは一つのJavascriptにexportできるらしい。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E&lt;script type=\u003Cspan class=\"hljs-string\"\u003E&quot;module&quot;\u003C\u002Fspan\u003E&gt;\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E {Runtime, Inspector} \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;https:\u002F\u002Fcdn.jsdelivr.net\u002Fnpm\u002F@observablehq\u002Fruntime@4\u002Fdist\u002Fruntime.js&quot;\u003C\u002Fspan\u003E;\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E notebook \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;https:\u002F\u002Fapi.observablehq.com\u002Fd\u002F1cbb7a450b192e69.js?v=3&quot;\u003C\u002Fspan\u003E;\n\u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E Runtime().module(notebook, Inspector.into(\u003Cspan class=\"hljs-built_in\"\u003Edocument\u003C\u002Fspan\u003E.body));\n&lt;\u002Fscript&gt;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003Eなので、それをfetchするような専用のテンプレートを用意すれば埋め込めるはず。\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003Epages\u002F_year\u002F_slug\u002Findex.vue\u003C\u002Fli\u003E\n\u003Cli\u003Epages\u002F_year\u002F_slug\u002Fobservable\u002Findex.vue\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003Eみたいにすればいいのでは。でその中身は、\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E&lt;script&gt;\n\u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E fetch()\n&lt;script&gt;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003Eはて？ templateの中に書けるのかしらん？\nさっきのコードをちゃんと読んで、だんだんわかってきた。\njquery的なDOM mountが前提だ。vueの仮想DOMとは相性悪そう。。。\u003C\u002Fp\u003E\n\u003Cp\u003E&lt;script type=&quot;module&quot;&gt;\nimport {Runtime, Inspector} from &quot;https:\u002F\u002Fcdn.jsdelivr.net\u002Fnpm\u002F@observablehq\u002Fruntime@4\u002Fdist\u002Fruntime.js&quot;;\nimport notebook from &quot;https:\u002F\u002Fapi.observablehq.com\u002Fd\u002F1cbb7a450b192e69.js?v=3&quot;;\nnew Runtime().module(notebook, Inspector.into(document.body));\n&lt;\u002Fscript&gt;\u003C\u002Fp\u003E\n\u003Cp\u003Eとりあえずでっち上げたもの：\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003Ehttps:\u002F\u002Fshnarazk.now.sh\u002Fobs\u002F\u003C\u002Fli\u003E\n\u003Cli\u003Ehttps:\u002F\u002Fshnarazk.now.sh\u002Fobs\u002Findex.html\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003Erouterを設定しないといけない？？\u003C\u002Fp\u003E\n\u003Ch2\u003E2019-08-01T21:05 上手くいったversion 0.1\u003C\u002Fh2\u003E\n\u003Cp\u003EまずインデックスページにJSONおよびエントリをでっち上げて\nnuxt-linkで振ってみる。このようなObservable由来のページは\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003Epages\u002F_year\u002F_slug\u002Fobs\u002Findex.vue\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003Eに処理させることにした。index.vueの中身は以下の通り。\ntemplate中のscriptはObservableのマニュアルにあったものをそのまま流用。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E&lt;template&gt;\n  \u003Cspan class=\"xml\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003EHeader\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Etitle\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;Embedded Observable&quot;\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Esection\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;section&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eid\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;Observed&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003EEntryFooter\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Etags\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;[&#x27;Observable&#x27;]&quot;\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Esection\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Etype\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;module&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"javascript\"\u003E\n      \u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E {\n        Runtime,\n        Inspector\n      } \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;https:\u002F\u002Fcdn.jsdelivr.net\u002Fnpm\u002F@observablehq\u002Fruntime@4\u002Fdist\u002Fruntime.js&#x27;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E notebook \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;https:\u002F\u002Fapi.observablehq.com\u002Fd\u002F1cbb7a450b192e69.js?v=3&#x27;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E Runtime().module(notebook, Inspector.into(\u003Cspan class=\"hljs-string\"\u003E&#x27;#Observed&#x27;\u003C\u002Fspan\u003E))\n    \u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\n&lt;\u002Ftemplate&gt;\n\u003Cspan class=\"xml\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"javascript\"\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E Header \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;~\u002Fcomponents\u002FTheHeader&#x27;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E EntryFooter \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;~\u002Fcomponents\u002FEntryFooter&#x27;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Ecomponents\u003C\u002Fspan\u003E: {\n    Header,\n    EntryFooter\n  }\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E仮想DOMとの協調は不安定だが中身は\u003Ccode\u003E#Obesarbable\u003C\u002Fcode\u003Eな要素に取り込まれ、\n他のエントリと同じ体裁で表示できるようになった。\nDOMの上書き問題は適切なidを作成してやればいいだろう。\nあとはvuexにうまく取り込めばいい。\u003C\u002Fp\u003E\n\u003Ch2\u003E2019-08-03T21:05 上手くいったversion 0.9\u003C\u002Fh2\u003E\n\u003Cp\u003E先日の方法を延長するだけでうまくいきそうだ。\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003Emdから作ったjsonファイルにObservable用の手書きJSONを混ぜてvuexに登録\u003C\u002Fli\u003E\n\u003Cli\u003EObservableのnotebookに対するend pointは先に書いた通り\n\u003Cul\u003E\n\u003Cli\u003Epages\u002F_year\u002F_slug\u002Fobs\u002Findex.vue\nに対応させる。\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003Ecanvasの埋め込み先はObservableでのnotebook idを\u003Ccode\u003E_sulg\u003C\u002Fcode\u003Eとしたユニークな\u003Ccode\u003Edvi\u003C\u002Fcode\u003E要素にすることで、\n仮想DOMによる干渉を極力避ける。\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003E\\deep\\\u003C\u002Fcode\u003E対応したCSSを用意してあげる。\nただしcanvasのサイズがピクセルで固定なのはどう対応したものか見当つかない。\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003Eまあ、これくらいで最低限のことはできるようになった。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E&lt;template&gt;\n  \u003Cspan class=\"xml\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003EHeader\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Etitle\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;Embedded Observable Notebook&quot;\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Esection\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;section&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eh1\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;title has-text-primary has-text-weight-semibold&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ea\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:href\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;&#x27;https:\u002F\u002Fobservablehq.com\u002Fd\u002F&#x27; + $route.params.slug&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n          Id #_{{ $route.params.slug }}\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ea\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eh1\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:id\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;&#x27;_&#x27; + $route.params.slug&quot;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;observable-content&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003EEntryFooter\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:tags\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;[&#x27;Observable&#x27;]&quot;\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Esection\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Etype\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;module&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"javascript\"\u003E\n      \u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E {\n        Runtime,\n        Inspector\n      } \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;https:\u002F\u002Fcdn.jsdelivr.net\u002Fnpm\u002F@observablehq\u002Fruntime@4\u002Fdist\u002Fruntime.js&#x27;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E notebook \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;https:\u002F\u002Fapi.observablehq.com\u002Fd\u002F{{$route.params.slug}}.js?v=3&#x27;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E Runtime().module(notebook, Inspector.into(\u003Cspan class=\"hljs-string\"\u003E&#x27;{{&#x27;\u003C\u002Fspan\u003E#_\u003Cspan class=\"hljs-string\"\u003E&#x27; + $route.params.slug}}&#x27;\u003C\u002Fspan\u003E))\n    \u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\n&lt;\u002Ftemplate&gt;\n\u003Cspan class=\"xml\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"javascript\"\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E Header \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;~\u002Fcomponents\u002FTheHeader&#x27;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E EntryFooter \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;~\u002Fcomponents\u002FEntryFooter&#x27;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Ecomponents\u003C\u002Fspan\u003E: {\n    Header,\n    EntryFooter\n  }\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E",dir:"article\u002F.json\u002F2019",base:"2019-07-31-observable.json",ext:".json",sourceBase:"2019-07-31-observable.md",sourceExt:".md"}},title:{writable:true,enumerable:true,value:"About Observable"},subtitle:{writable:true,enumerable:true,value:"強力な可視化機能を手に入れた"},date:{writable:true,enumerable:true,value:"2019-08-04T00:00:00.000Z"},tags:{writable:true,enumerable:true,value:["javascript","Observable","Nuxtjs","jang"]},bodyContent:{writable:true,enumerable:true,value:"Javascript版jupyterのようなものの一つの[Observable](https:\u002F\u002Fobservablehq.com\u002F)。\n可視化の結果を貼り付けられるように、Nuxtベースのこのブログに組み込めないか現在考え中。\nとりあえず[こういうこと](https:\u002F\u002Fobservablehq.com\u002Fd\u002F1cbb7a450b192e69)ができるなら、\nやる価値はありそうだ。\n\nまず、以下のコードでObservableのノートは一つのJavascriptにexportできるらしい。\n\n```js\n\u003Cscript type=\"module\"\u003E\nimport {Runtime, Inspector} from \"https:\u002F\u002Fcdn.jsdelivr.net\u002Fnpm\u002F@observablehq\u002Fruntime@4\u002Fdist\u002Fruntime.js\";\nimport notebook from \"https:\u002F\u002Fapi.observablehq.com\u002Fd\u002F1cbb7a450b192e69.js?v=3\";\nnew Runtime().module(notebook, Inspector.into(document.body));\n\u003C\u002Fscript\u003E\n```\n\nなので、それをfetchするような専用のテンプレートを用意すれば埋め込めるはず。\n\n- pages\u002F_year\u002F_slug\u002Findex.vue\n- pages\u002F_year\u002F_slug\u002Fobservable\u002Findex.vue\n\nみたいにすればいいのでは。でその中身は、\n\n```js\n\u003Cscript\u003E\nawait fetch()\n\u003Cscript\u003E\n```\n\nはて？ templateの中に書けるのかしらん？\nさっきのコードをちゃんと読んで、だんだんわかってきた。\njquery的なDOM mountが前提だ。vueの仮想DOMとは相性悪そう。。。\n\n\u003Cscript type=\"module\"\u003E\nimport {Runtime, Inspector} from \"https:\u002F\u002Fcdn.jsdelivr.net\u002Fnpm\u002F@observablehq\u002Fruntime@4\u002Fdist\u002Fruntime.js\";\nimport notebook from \"https:\u002F\u002Fapi.observablehq.com\u002Fd\u002F1cbb7a450b192e69.js?v=3\";\nnew Runtime().module(notebook, Inspector.into(document.body));\n\u003C\u002Fscript\u003E\n\nとりあえずでっち上げたもの： \n\n- https:\u002F\u002Fshnarazk.now.sh\u002Fobs\u002F\n- https:\u002F\u002Fshnarazk.now.sh\u002Fobs\u002Findex.html\n\nrouterを設定しないといけない？？\n\n## 2019-08-01T21:05 上手くいったversion 0.1\n\nまずインデックスページにJSONおよびエントリをでっち上げて\nnuxt-linkで振ってみる。このようなObservable由来のページは\n\n- pages\u002F_year\u002F_slug\u002Fobs\u002Findex.vue\n\nに処理させることにした。index.vueの中身は以下の通り。\ntemplate中のscriptはObservableのマニュアルにあったものをそのまま流用。\n\n```js\n\u003Ctemplate\u003E\n  \u003Cdiv\u003E\n    \u003CHeader title=\"Embedded Observable\" \u002F\u003E\n    \u003Csection class=\"section\"\u003E\n      \u003Cdiv id=\"Observed\"\u003E\u003C\u002Fdiv\u003E\n      \u003CEntryFooter tags=\"['Observable']\" \u002F\u003E\n    \u003C\u002Fsection\u003E\n    \u003Cscript type=\"module\"\u003E\n      import {\n        Runtime,\n        Inspector\n      } from 'https:\u002F\u002Fcdn.jsdelivr.net\u002Fnpm\u002F@observablehq\u002Fruntime@4\u002Fdist\u002Fruntime.js'\n      import notebook from 'https:\u002F\u002Fapi.observablehq.com\u002Fd\u002F1cbb7a450b192e69.js?v=3'\n      new Runtime().module(notebook, Inspector.into('#Observed'))\n    \u003C\u002Fscript\u003E\n  \u003C\u002Fdiv\u003E\n\u003C\u002Ftemplate\u003E\n\u003Cscript\u003E\nimport Header from '~\u002Fcomponents\u002FTheHeader'\nimport EntryFooter from '~\u002Fcomponents\u002FEntryFooter'\nexport default {\n  components: {\n    Header,\n    EntryFooter\n  }\n}\n\u003C\u002Fscript\u003E\n```\n\n仮想DOMとの協調は不安定だが中身は`#Obesarbable`な要素に取り込まれ、\n他のエントリと同じ体裁で表示できるようになった。\nDOMの上書き問題は適切なidを作成してやればいいだろう。\nあとはvuexにうまく取り込めばいい。\n\n## 2019-08-03T21:05 上手くいったversion 0.9\n\n先日の方法を延長するだけでうまくいきそうだ。\n\n- mdから作ったjsonファイルにObservable用の手書きJSONを混ぜてvuexに登録\n- Observableのnotebookに対するend pointは先に書いた通り\n  - pages\u002F_year\u002F_slug\u002Fobs\u002Findex.vue\n  に対応させる。\n- canvasの埋め込み先はObservableでのnotebook idを`_sulg`としたユニークな`dvi`要素にすることで、\n  仮想DOMによる干渉を極力避ける。\n- `\\deep\\`対応したCSSを用意してあげる。\n  ただしcanvasのサイズがピクセルで固定なのはどう対応したものか見当つかない。\n\nまあ、これくらいで最低限のことはできるようになった。\n\n```js\n\u003Ctemplate\u003E\n  \u003Cdiv\u003E\n    \u003CHeader title=\"Embedded Observable Notebook\" \u002F\u003E\n    \u003Csection class=\"section\"\u003E\n      \u003Ch1 class=\"title has-text-primary has-text-weight-semibold\"\u003E\n        \u003Ca :href=\"'https:\u002F\u002Fobservablehq.com\u002Fd\u002F' + $route.params.slug\"\u003E\n          Id #_{{ $route.params.slug }}\n        \u003C\u002Fa\u003E\n      \u003C\u002Fh1\u003E\n      \u003Cdiv :id=\"'_' + $route.params.slug\" class=\"observable-content\"\u003E\u003C\u002Fdiv\u003E\n      \u003CEntryFooter :tags=\"['Observable']\" \u002F\u003E\n    \u003C\u002Fsection\u003E\n    \u003Cscript type=\"module\"\u003E\n      import {\n        Runtime,\n        Inspector\n      } from 'https:\u002F\u002Fcdn.jsdelivr.net\u002Fnpm\u002F@observablehq\u002Fruntime@4\u002Fdist\u002Fruntime.js'\n      import notebook from 'https:\u002F\u002Fapi.observablehq.com\u002Fd\u002F{{$route.params.slug}}.js?v=3'\n      new Runtime().module(notebook, Inspector.into('{{'#_' + $route.params.slug}}'))\n    \u003C\u002Fscript\u003E\n  \u003C\u002Fdiv\u003E\n\u003C\u002Ftemplate\u003E\n\u003Cscript\u003E\nimport Header from '~\u002Fcomponents\u002FTheHeader'\nimport EntryFooter from '~\u002Fcomponents\u002FEntryFooter'\nexport default {\n  components: {\n    Header,\n    EntryFooter\n  }\n}\n\u003C\u002Fscript\u003E\n```"},bodyHtml:{writable:true,enumerable:true,value:"\u003Cp\u003EJavascript版jupyterのようなものの一つの\u003Ca href=\"https:\u002F\u002Fobservablehq.com\u002F\"\u003EObservable\u003C\u002Fa\u003E。\n可視化の結果を貼り付けられるように、Nuxtベースのこのブログに組み込めないか現在考え中。\nとりあえず\u003Ca href=\"https:\u002F\u002Fobservablehq.com\u002Fd\u002F1cbb7a450b192e69\"\u003Eこういうこと\u003C\u002Fa\u003Eができるなら、\nやる価値はありそうだ。\u003C\u002Fp\u003E\n\u003Cp\u003Eまず、以下のコードでObservableのノートは一つのJavascriptにexportできるらしい。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E&lt;script type=\u003Cspan class=\"hljs-string\"\u003E&quot;module&quot;\u003C\u002Fspan\u003E&gt;\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E {Runtime, Inspector} \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;https:\u002F\u002Fcdn.jsdelivr.net\u002Fnpm\u002F@observablehq\u002Fruntime@4\u002Fdist\u002Fruntime.js&quot;\u003C\u002Fspan\u003E;\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E notebook \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;https:\u002F\u002Fapi.observablehq.com\u002Fd\u002F1cbb7a450b192e69.js?v=3&quot;\u003C\u002Fspan\u003E;\n\u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E Runtime().module(notebook, Inspector.into(\u003Cspan class=\"hljs-built_in\"\u003Edocument\u003C\u002Fspan\u003E.body));\n&lt;\u002Fscript&gt;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003Eなので、それをfetchするような専用のテンプレートを用意すれば埋め込めるはず。\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003Epages\u002F_year\u002F_slug\u002Findex.vue\u003C\u002Fli\u003E\n\u003Cli\u003Epages\u002F_year\u002F_slug\u002Fobservable\u002Findex.vue\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003Eみたいにすればいいのでは。でその中身は、\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E&lt;script&gt;\n\u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E fetch()\n&lt;script&gt;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003Eはて？ templateの中に書けるのかしらん？\nさっきのコードをちゃんと読んで、だんだんわかってきた。\njquery的なDOM mountが前提だ。vueの仮想DOMとは相性悪そう。。。\u003C\u002Fp\u003E\n\u003Cp\u003E&lt;script type=&quot;module&quot;&gt;\nimport {Runtime, Inspector} from &quot;https:\u002F\u002Fcdn.jsdelivr.net\u002Fnpm\u002F@observablehq\u002Fruntime@4\u002Fdist\u002Fruntime.js&quot;;\nimport notebook from &quot;https:\u002F\u002Fapi.observablehq.com\u002Fd\u002F1cbb7a450b192e69.js?v=3&quot;;\nnew Runtime().module(notebook, Inspector.into(document.body));\n&lt;\u002Fscript&gt;\u003C\u002Fp\u003E\n\u003Cp\u003Eとりあえずでっち上げたもの：\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003Ehttps:\u002F\u002Fshnarazk.now.sh\u002Fobs\u002F\u003C\u002Fli\u003E\n\u003Cli\u003Ehttps:\u002F\u002Fshnarazk.now.sh\u002Fobs\u002Findex.html\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003Erouterを設定しないといけない？？\u003C\u002Fp\u003E\n\u003Ch2\u003E2019-08-01T21:05 上手くいったversion 0.1\u003C\u002Fh2\u003E\n\u003Cp\u003EまずインデックスページにJSONおよびエントリをでっち上げて\nnuxt-linkで振ってみる。このようなObservable由来のページは\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003Epages\u002F_year\u002F_slug\u002Fobs\u002Findex.vue\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003Eに処理させることにした。index.vueの中身は以下の通り。\ntemplate中のscriptはObservableのマニュアルにあったものをそのまま流用。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E&lt;template&gt;\n  \u003Cspan class=\"xml\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003EHeader\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Etitle\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;Embedded Observable&quot;\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Esection\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;section&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eid\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;Observed&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003EEntryFooter\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Etags\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;[&#x27;Observable&#x27;]&quot;\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Esection\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Etype\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;module&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"javascript\"\u003E\n      \u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E {\n        Runtime,\n        Inspector\n      } \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;https:\u002F\u002Fcdn.jsdelivr.net\u002Fnpm\u002F@observablehq\u002Fruntime@4\u002Fdist\u002Fruntime.js&#x27;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E notebook \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;https:\u002F\u002Fapi.observablehq.com\u002Fd\u002F1cbb7a450b192e69.js?v=3&#x27;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E Runtime().module(notebook, Inspector.into(\u003Cspan class=\"hljs-string\"\u003E&#x27;#Observed&#x27;\u003C\u002Fspan\u003E))\n    \u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\n&lt;\u002Ftemplate&gt;\n\u003Cspan class=\"xml\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"javascript\"\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E Header \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;~\u002Fcomponents\u002FTheHeader&#x27;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E EntryFooter \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;~\u002Fcomponents\u002FEntryFooter&#x27;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Ecomponents\u003C\u002Fspan\u003E: {\n    Header,\n    EntryFooter\n  }\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E仮想DOMとの協調は不安定だが中身は\u003Ccode\u003E#Obesarbable\u003C\u002Fcode\u003Eな要素に取り込まれ、\n他のエントリと同じ体裁で表示できるようになった。\nDOMの上書き問題は適切なidを作成してやればいいだろう。\nあとはvuexにうまく取り込めばいい。\u003C\u002Fp\u003E\n\u003Ch2\u003E2019-08-03T21:05 上手くいったversion 0.9\u003C\u002Fh2\u003E\n\u003Cp\u003E先日の方法を延長するだけでうまくいきそうだ。\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003Emdから作ったjsonファイルにObservable用の手書きJSONを混ぜてvuexに登録\u003C\u002Fli\u003E\n\u003Cli\u003EObservableのnotebookに対するend pointは先に書いた通り\n\u003Cul\u003E\n\u003Cli\u003Epages\u002F_year\u002F_slug\u002Fobs\u002Findex.vue\nに対応させる。\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003Ecanvasの埋め込み先はObservableでのnotebook idを\u003Ccode\u003E_sulg\u003C\u002Fcode\u003Eとしたユニークな\u003Ccode\u003Edvi\u003C\u002Fcode\u003E要素にすることで、\n仮想DOMによる干渉を極力避ける。\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003E\\deep\\\u003C\u002Fcode\u003E対応したCSSを用意してあげる。\nただしcanvasのサイズがピクセルで固定なのはどう対応したものか見当つかない。\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003Eまあ、これくらいで最低限のことはできるようになった。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E&lt;template&gt;\n  \u003Cspan class=\"xml\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003EHeader\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Etitle\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;Embedded Observable Notebook&quot;\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Esection\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;section&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eh1\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;title has-text-primary has-text-weight-semibold&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ea\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:href\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;&#x27;https:\u002F\u002Fobservablehq.com\u002Fd\u002F&#x27; + $route.params.slug&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n          Id #_{{ $route.params.slug }}\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ea\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eh1\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:id\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;&#x27;_&#x27; + $route.params.slug&quot;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;observable-content&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003EEntryFooter\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:tags\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;[&#x27;Observable&#x27;]&quot;\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Esection\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Etype\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;module&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"javascript\"\u003E\n      \u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E {\n        Runtime,\n        Inspector\n      } \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;https:\u002F\u002Fcdn.jsdelivr.net\u002Fnpm\u002F@observablehq\u002Fruntime@4\u002Fdist\u002Fruntime.js&#x27;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E notebook \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;https:\u002F\u002Fapi.observablehq.com\u002Fd\u002F{{$route.params.slug}}.js?v=3&#x27;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E Runtime().module(notebook, Inspector.into(\u003Cspan class=\"hljs-string\"\u003E&#x27;{{&#x27;\u003C\u002Fspan\u003E#_\u003Cspan class=\"hljs-string\"\u003E&#x27; + $route.params.slug}}&#x27;\u003C\u002Fspan\u003E))\n    \u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\n&lt;\u002Ftemplate&gt;\n\u003Cspan class=\"xml\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"javascript\"\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E Header \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;~\u002Fcomponents\u002FTheHeader&#x27;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E EntryFooter \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;~\u002Fcomponents\u002FEntryFooter&#x27;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Ecomponents\u003C\u002Fspan\u003E: {\n    Header,\n    EntryFooter\n  }\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E"},dir:{writable:true,enumerable:true,value:"article\u002F.json\u002F2019"},base:{writable:true,enumerable:true,value:"2019-07-31-observable.json"},ext:{writable:true,enumerable:true,value:".json"},sourceBase:{writable:true,enumerable:true,value:"2019-07-31-observable.md"},sourceExt:{writable:true,enumerable:true,value:".md"}})}],fetch:[],mutations:[]});