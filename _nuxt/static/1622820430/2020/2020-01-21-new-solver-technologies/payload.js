__NUXT_JSONP__("/2020/2020-01-21-new-solver-technologies", {data:[{article:Object.create(null,{default:{writable:true,enumerable:true,value:{title:"New technologies for SAT solvers",subtitle:"from SR2019",date:"2020-01-21T00:00:00.000Z",tags:["SAT"],bodyContent:"遅ればせながらSR2019のベンチマークを見てみた。\n\n## CaDiCaL\n\nデフォルト設定のみのエントリーで3位に位置するソルバ。作者を見たらBiere先生だった。\n\n- chronological backtrack\n- dual restart mode\n- improving phase Saving\n\nといったところが主に使っている新技術。\n\n## Chronological Backtrack\n\nまだチェックしてないがSC2018以降のトレンドみたい。こんな発想はなかった。\nリスタートの抑制よりもさらに網羅的に探索するということか。原著は以下：\n\n- A. Nadel and V. Ryvchin. Chronological backtracking. In *Theory and Applications of Satisfiability Testing - SAT 2018. Proceedings*, 2018.\n\n大事なところだけ読んでみた。えー、それってコスト削減になるのか？\nリスタートを掛けずに先まで行けるのなら、色々と特徴量に対する影響は少しはあると思うが。\n\nちょっと変更したものだったら簡単に実装できたが、散々crashに悩まされる。\n数日かかりそう。で、実装してみたけどちゃんと論文読まねば。単なるレベル0へのバックトラックの\nショートカットでしかないので差が出ない（ひどい。。。）。\n\n## Dual Restart Mode\n\nリスタートしないモードがUNSAT問題に効くので、リスタート戦略を切り替える技術。\nということはdeep searchが正当化されるかもしれない。\nインターリーブはうまくいかない印象なんだけど、実はその実験はやってなかったかも。\n\n## Improving Phase Saving\n\n一番よかったphaseセットを覚えておくという、VoPに似た感じの技術。\nただしこれまでのphaseと併用するとのこと。\nまたprefixという語が頻出している。なんだそりゃ？\n\nこれも重要らしいので、もう少しVoPを検討してみるか。\n手っ取り早い導入としては、全ての割当てではなく、\n割当量更新時のみFoCだかVoCのEMAを更新すると近い感じになるかもしれない。\nリスタートの時にその値を利用するという方針なら試していないはず。\n\n## Reason-Side Rate(Rewarding)\n\nこれはCaDiCaLとは関係ないけど、Conflict History Based Branching (CHB)の論文で出てきた考え。\n依存グラフの学習節のその先にも報酬を与えようとするもの。\n実際実装してみるとよくなることもある。なんでだろう？　簡単に書いてあるのでどうしてなのか考えないとい\nけない。逆向きの伝播を促すのか？だったら逆向きにでパンパした場合にfirstUIPになる可能性が高い\n束の上限節に当たるリテラルだけ報酬を与えてもよさそうだが、やってみたらむしろ何もしない時よりも悪くなった。",bodyHtml:"\u003Cp\u003E遅ればせながらSR2019のベンチマークを見てみた。\u003C\u002Fp\u003E\n\u003Ch2\u003ECaDiCaL\u003C\u002Fh2\u003E\n\u003Cp\u003Eデフォルト設定のみのエントリーで3位に位置するソルバ。作者を見たらBiere先生だった。\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003Echronological backtrack\u003C\u002Fli\u003E\n\u003Cli\u003Edual restart mode\u003C\u002Fli\u003E\n\u003Cli\u003Eimproving phase Saving\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003Eといったところが主に使っている新技術。\u003C\u002Fp\u003E\n\u003Ch2\u003EChronological Backtrack\u003C\u002Fh2\u003E\n\u003Cp\u003EまだチェックしてないがSC2018以降のトレンドみたい。こんな発想はなかった。\nリスタートの抑制よりもさらに網羅的に探索するということか。原著は以下：\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003EA. Nadel and V. Ryvchin. Chronological backtracking. In \u003Cem\u003ETheory and Applications of Satisfiability Testing - SAT 2018. Proceedings\u003C\u002Fem\u003E, 2018.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E大事なところだけ読んでみた。えー、それってコスト削減になるのか？\nリスタートを掛けずに先まで行けるのなら、色々と特徴量に対する影響は少しはあると思うが。\u003C\u002Fp\u003E\n\u003Cp\u003Eちょっと変更したものだったら簡単に実装できたが、散々crashに悩まされる。\n数日かかりそう。で、実装してみたけどちゃんと論文読まねば。単なるレベル0へのバックトラックの\nショートカットでしかないので差が出ない（ひどい。。。）。\u003C\u002Fp\u003E\n\u003Ch2\u003EDual Restart Mode\u003C\u002Fh2\u003E\n\u003Cp\u003EリスタートしないモードがUNSAT問題に効くので、リスタート戦略を切り替える技術。\nということはdeep searchが正当化されるかもしれない。\nインターリーブはうまくいかない印象なんだけど、実はその実験はやってなかったかも。\u003C\u002Fp\u003E\n\u003Ch2\u003EImproving Phase Saving\u003C\u002Fh2\u003E\n\u003Cp\u003E一番よかったphaseセットを覚えておくという、VoPに似た感じの技術。\nただしこれまでのphaseと併用するとのこと。\nまたprefixという語が頻出している。なんだそりゃ？\u003C\u002Fp\u003E\n\u003Cp\u003Eこれも重要らしいので、もう少しVoPを検討してみるか。\n手っ取り早い導入としては、全ての割当てではなく、\n割当量更新時のみFoCだかVoCのEMAを更新すると近い感じになるかもしれない。\nリスタートの時にその値を利用するという方針なら試していないはず。\u003C\u002Fp\u003E\n\u003Ch2\u003EReason-Side Rate(Rewarding)\u003C\u002Fh2\u003E\n\u003Cp\u003EこれはCaDiCaLとは関係ないけど、Conflict History Based Branching (CHB)の論文で出てきた考え。\n依存グラフの学習節のその先にも報酬を与えようとするもの。\n実際実装してみるとよくなることもある。なんでだろう？　簡単に書いてあるのでどうしてなのか考えないとい\nけない。逆向きの伝播を促すのか？だったら逆向きにでパンパした場合にfirstUIPになる可能性が高い\n束の上限節に当たるリテラルだけ報酬を与えてもよさそうだが、やってみたらむしろ何もしない時よりも悪くなった。\u003C\u002Fp\u003E\n",dir:"article\u002F.json\u002F2020",base:"2020-01-21-new-solver-technologies.json",ext:".json",sourceBase:"2020-01-21-new-solver-technologies.md",sourceExt:".md"}},title:{writable:true,enumerable:true,value:"New technologies for SAT solvers"},subtitle:{writable:true,enumerable:true,value:"from SR2019"},date:{writable:true,enumerable:true,value:"2020-01-21T00:00:00.000Z"},tags:{writable:true,enumerable:true,value:["SAT"]},bodyContent:{writable:true,enumerable:true,value:"遅ればせながらSR2019のベンチマークを見てみた。\n\n## CaDiCaL\n\nデフォルト設定のみのエントリーで3位に位置するソルバ。作者を見たらBiere先生だった。\n\n- chronological backtrack\n- dual restart mode\n- improving phase Saving\n\nといったところが主に使っている新技術。\n\n## Chronological Backtrack\n\nまだチェックしてないがSC2018以降のトレンドみたい。こんな発想はなかった。\nリスタートの抑制よりもさらに網羅的に探索するということか。原著は以下：\n\n- A. Nadel and V. Ryvchin. Chronological backtracking. In *Theory and Applications of Satisfiability Testing - SAT 2018. Proceedings*, 2018.\n\n大事なところだけ読んでみた。えー、それってコスト削減になるのか？\nリスタートを掛けずに先まで行けるのなら、色々と特徴量に対する影響は少しはあると思うが。\n\nちょっと変更したものだったら簡単に実装できたが、散々crashに悩まされる。\n数日かかりそう。で、実装してみたけどちゃんと論文読まねば。単なるレベル0へのバックトラックの\nショートカットでしかないので差が出ない（ひどい。。。）。\n\n## Dual Restart Mode\n\nリスタートしないモードがUNSAT問題に効くので、リスタート戦略を切り替える技術。\nということはdeep searchが正当化されるかもしれない。\nインターリーブはうまくいかない印象なんだけど、実はその実験はやってなかったかも。\n\n## Improving Phase Saving\n\n一番よかったphaseセットを覚えておくという、VoPに似た感じの技術。\nただしこれまでのphaseと併用するとのこと。\nまたprefixという語が頻出している。なんだそりゃ？\n\nこれも重要らしいので、もう少しVoPを検討してみるか。\n手っ取り早い導入としては、全ての割当てではなく、\n割当量更新時のみFoCだかVoCのEMAを更新すると近い感じになるかもしれない。\nリスタートの時にその値を利用するという方針なら試していないはず。\n\n## Reason-Side Rate(Rewarding)\n\nこれはCaDiCaLとは関係ないけど、Conflict History Based Branching (CHB)の論文で出てきた考え。\n依存グラフの学習節のその先にも報酬を与えようとするもの。\n実際実装してみるとよくなることもある。なんでだろう？　簡単に書いてあるのでどうしてなのか考えないとい\nけない。逆向きの伝播を促すのか？だったら逆向きにでパンパした場合にfirstUIPになる可能性が高い\n束の上限節に当たるリテラルだけ報酬を与えてもよさそうだが、やってみたらむしろ何もしない時よりも悪くなった。"},bodyHtml:{writable:true,enumerable:true,value:"\u003Cp\u003E遅ればせながらSR2019のベンチマークを見てみた。\u003C\u002Fp\u003E\n\u003Ch2\u003ECaDiCaL\u003C\u002Fh2\u003E\n\u003Cp\u003Eデフォルト設定のみのエントリーで3位に位置するソルバ。作者を見たらBiere先生だった。\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003Echronological backtrack\u003C\u002Fli\u003E\n\u003Cli\u003Edual restart mode\u003C\u002Fli\u003E\n\u003Cli\u003Eimproving phase Saving\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003Eといったところが主に使っている新技術。\u003C\u002Fp\u003E\n\u003Ch2\u003EChronological Backtrack\u003C\u002Fh2\u003E\n\u003Cp\u003EまだチェックしてないがSC2018以降のトレンドみたい。こんな発想はなかった。\nリスタートの抑制よりもさらに網羅的に探索するということか。原著は以下：\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003EA. Nadel and V. Ryvchin. Chronological backtracking. In \u003Cem\u003ETheory and Applications of Satisfiability Testing - SAT 2018. Proceedings\u003C\u002Fem\u003E, 2018.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E大事なところだけ読んでみた。えー、それってコスト削減になるのか？\nリスタートを掛けずに先まで行けるのなら、色々と特徴量に対する影響は少しはあると思うが。\u003C\u002Fp\u003E\n\u003Cp\u003Eちょっと変更したものだったら簡単に実装できたが、散々crashに悩まされる。\n数日かかりそう。で、実装してみたけどちゃんと論文読まねば。単なるレベル0へのバックトラックの\nショートカットでしかないので差が出ない（ひどい。。。）。\u003C\u002Fp\u003E\n\u003Ch2\u003EDual Restart Mode\u003C\u002Fh2\u003E\n\u003Cp\u003EリスタートしないモードがUNSAT問題に効くので、リスタート戦略を切り替える技術。\nということはdeep searchが正当化されるかもしれない。\nインターリーブはうまくいかない印象なんだけど、実はその実験はやってなかったかも。\u003C\u002Fp\u003E\n\u003Ch2\u003EImproving Phase Saving\u003C\u002Fh2\u003E\n\u003Cp\u003E一番よかったphaseセットを覚えておくという、VoPに似た感じの技術。\nただしこれまでのphaseと併用するとのこと。\nまたprefixという語が頻出している。なんだそりゃ？\u003C\u002Fp\u003E\n\u003Cp\u003Eこれも重要らしいので、もう少しVoPを検討してみるか。\n手っ取り早い導入としては、全ての割当てではなく、\n割当量更新時のみFoCだかVoCのEMAを更新すると近い感じになるかもしれない。\nリスタートの時にその値を利用するという方針なら試していないはず。\u003C\u002Fp\u003E\n\u003Ch2\u003EReason-Side Rate(Rewarding)\u003C\u002Fh2\u003E\n\u003Cp\u003EこれはCaDiCaLとは関係ないけど、Conflict History Based Branching (CHB)の論文で出てきた考え。\n依存グラフの学習節のその先にも報酬を与えようとするもの。\n実際実装してみるとよくなることもある。なんでだろう？　簡単に書いてあるのでどうしてなのか考えないとい\nけない。逆向きの伝播を促すのか？だったら逆向きにでパンパした場合にfirstUIPになる可能性が高い\n束の上限節に当たるリテラルだけ報酬を与えてもよさそうだが、やってみたらむしろ何もしない時よりも悪くなった。\u003C\u002Fp\u003E\n"},dir:{writable:true,enumerable:true,value:"article\u002F.json\u002F2020"},base:{writable:true,enumerable:true,value:"2020-01-21-new-solver-technologies.json"},ext:{writable:true,enumerable:true,value:".json"},sourceBase:{writable:true,enumerable:true,value:"2020-01-21-new-solver-technologies.md"},sourceExt:{writable:true,enumerable:true,value:".md"}})}],fetch:[],mutations:[]});