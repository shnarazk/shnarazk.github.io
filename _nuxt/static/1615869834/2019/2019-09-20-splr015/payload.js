__NUXT_JSONP__("/2019/2019-09-20-splr015", {data:[{article:Object.create(null,{default:{writable:true,enumerable:true,value:{title:"Directions for the next Splr",subtitle:"半年でやることやった後のがんばりについて",date:"2019-11-29T00:00:00.000Z",tags:["SAT","splr"],bodyContent:"- https:\u002F\u002Fgitlab.com\u002Fshnarazk\u002FSAT\u002Fsplr\u002Fissues\u002F90\n\n1. global control of restart\n  'global'は大局観ってやつ。`restart_step` の存在はやはり気になる。今のソルバーはまだ何かに気づけていない。\n1. [solved by 0.1.5] a better bounded var-rewarding mechanism\n  ASIDS, CHBどちらも確認済みではあるのだが。ただやる意味あるのかちょっと疑問に思ってきた。\n  時間変化するのだから、求解直後の値を見てもそこには最終ステップを解くのに必要だった情報しか残っていないと考えるべきだろう。\n  従って、最適な値分散なんてものは存在しない。そこに至るまでの履歴も重要。\n  もう一つ、zero-sum rewardingについても検討のこと。\n1. new category of problems based on something like FUP, CNF\n1. investigate the reason why satcoin groups require 'deep search' to be solved.\n  これは1に関係するのだろう。FUPのデータも必要かも。\n  ただし0.1.5では0.1.4で見られたきれいなセパレーションがなくなっている。\n\n## 2019-10-27: A better bounded var-rewarding mechanismに関する意外な展開\n\n夏から9月にかけてリスタートを掛けても意外に割り当て対象が限定されているという話を散々やってきていた\nのだが、よくわからぬregressionの解消に取り組んでいてとんでもないことがわかった。結局、CHBという\nstrictly bounded var-rewardingはやはりいい結果につながっていたようだ。あまりによい成果が出たので一旦\n計画を延期して0.1.5をリリースすることにしよう。0.1.5がなぜいいのかはリリース後に検討。ここの話に戻っ\nてくるのはさらにその後で十分ということになった。\n\n## 2019-11-29: 0.2.0のリリース\n\nパラメータチューニングの消耗戦の合間にHaskellでいうところの実行速度に影響を及ぼさないnewtype的な型安全性を導入してみた。\n実際にRustでも速度低下が見られなかったので内部構造の変更は大きな変更だろうということで0.2.0に格上げ。\nパラメータチューニングの方は変数活性度の減衰係数でわずか1問の進展が見られたのでそれも入れて0.2.0をリリース。\n\n- 1:大局観は進展見られず\n- 3:問題のカテゴライズは全く手付かず\n- 4:deep search問題は進展見られず",bodyHtml:"\u003Cul\u003E\n\u003Cli\u003Ehttps:\u002F\u002Fgitlab.com\u002Fshnarazk\u002FSAT\u002Fsplr\u002Fissues\u002F90\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Col\u003E\n\u003Cli\u003Eglobal control of restart\n'global'は大局観ってやつ。\u003Ccode\u003Erestart_step\u003C\u002Fcode\u003E の存在はやはり気になる。今のソルバーはまだ何かに気づけていない。\u003C\u002Fli\u003E\n\u003Cli\u003E[solved by 0.1.5] a better bounded var-rewarding mechanism\nASIDS, CHBどちらも確認済みではあるのだが。ただやる意味あるのかちょっと疑問に思ってきた。\n時間変化するのだから、求解直後の値を見てもそこには最終ステップを解くのに必要だった情報しか残っていないと考えるべきだろう。\n従って、最適な値分散なんてものは存在しない。そこに至るまでの履歴も重要。\nもう一つ、zero-sum rewardingについても検討のこと。\u003C\u002Fli\u003E\n\u003Cli\u003Enew category of problems based on something like FUP, CNF\u003C\u002Fli\u003E\n\u003Cli\u003Einvestigate the reason why satcoin groups require 'deep search' to be solved.\nこれは1に関係するのだろう。FUPのデータも必要かも。\nただし0.1.5では0.1.4で見られたきれいなセパレーションがなくなっている。\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Ch2\u003E2019-10-27: A better bounded var-rewarding mechanismに関する意外な展開\u003C\u002Fh2\u003E\n\u003Cp\u003E夏から9月にかけてリスタートを掛けても意外に割り当て対象が限定されているという話を散々やってきていた\nのだが、よくわからぬregressionの解消に取り組んでいてとんでもないことがわかった。結局、CHBという\nstrictly bounded var-rewardingはやはりいい結果につながっていたようだ。あまりによい成果が出たので一旦\n計画を延期して0.1.5をリリースすることにしよう。0.1.5がなぜいいのかはリリース後に検討。ここの話に戻っ\nてくるのはさらにその後で十分ということになった。\u003C\u002Fp\u003E\n\u003Ch2\u003E2019-11-29: 0.2.0のリリース\u003C\u002Fh2\u003E\n\u003Cp\u003Eパラメータチューニングの消耗戦の合間にHaskellでいうところの実行速度に影響を及ぼさないnewtype的な型安全性を導入してみた。\n実際にRustでも速度低下が見られなかったので内部構造の変更は大きな変更だろうということで0.2.0に格上げ。\nパラメータチューニングの方は変数活性度の減衰係数でわずか1問の進展が見られたのでそれも入れて0.2.0をリリース。\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E1:大局観は進展見られず\u003C\u002Fli\u003E\n\u003Cli\u003E3:問題のカテゴライズは全く手付かず\u003C\u002Fli\u003E\n\u003Cli\u003E4:deep search問題は進展見られず\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n",dir:"article\u002F.json\u002F2019",base:"2019-09-20-splr015.json",ext:".json",sourceBase:"2019-09-20-splr015.md",sourceExt:".md"}},title:{writable:true,enumerable:true,value:"Directions for the next Splr"},subtitle:{writable:true,enumerable:true,value:"半年でやることやった後のがんばりについて"},date:{writable:true,enumerable:true,value:"2019-11-29T00:00:00.000Z"},tags:{writable:true,enumerable:true,value:["SAT","splr"]},bodyContent:{writable:true,enumerable:true,value:"- https:\u002F\u002Fgitlab.com\u002Fshnarazk\u002FSAT\u002Fsplr\u002Fissues\u002F90\n\n1. global control of restart\n  'global'は大局観ってやつ。`restart_step` の存在はやはり気になる。今のソルバーはまだ何かに気づけていない。\n1. [solved by 0.1.5] a better bounded var-rewarding mechanism\n  ASIDS, CHBどちらも確認済みではあるのだが。ただやる意味あるのかちょっと疑問に思ってきた。\n  時間変化するのだから、求解直後の値を見てもそこには最終ステップを解くのに必要だった情報しか残っていないと考えるべきだろう。\n  従って、最適な値分散なんてものは存在しない。そこに至るまでの履歴も重要。\n  もう一つ、zero-sum rewardingについても検討のこと。\n1. new category of problems based on something like FUP, CNF\n1. investigate the reason why satcoin groups require 'deep search' to be solved.\n  これは1に関係するのだろう。FUPのデータも必要かも。\n  ただし0.1.5では0.1.4で見られたきれいなセパレーションがなくなっている。\n\n## 2019-10-27: A better bounded var-rewarding mechanismに関する意外な展開\n\n夏から9月にかけてリスタートを掛けても意外に割り当て対象が限定されているという話を散々やってきていた\nのだが、よくわからぬregressionの解消に取り組んでいてとんでもないことがわかった。結局、CHBという\nstrictly bounded var-rewardingはやはりいい結果につながっていたようだ。あまりによい成果が出たので一旦\n計画を延期して0.1.5をリリースすることにしよう。0.1.5がなぜいいのかはリリース後に検討。ここの話に戻っ\nてくるのはさらにその後で十分ということになった。\n\n## 2019-11-29: 0.2.0のリリース\n\nパラメータチューニングの消耗戦の合間にHaskellでいうところの実行速度に影響を及ぼさないnewtype的な型安全性を導入してみた。\n実際にRustでも速度低下が見られなかったので内部構造の変更は大きな変更だろうということで0.2.0に格上げ。\nパラメータチューニングの方は変数活性度の減衰係数でわずか1問の進展が見られたのでそれも入れて0.2.0をリリース。\n\n- 1:大局観は進展見られず\n- 3:問題のカテゴライズは全く手付かず\n- 4:deep search問題は進展見られず"},bodyHtml:{writable:true,enumerable:true,value:"\u003Cul\u003E\n\u003Cli\u003Ehttps:\u002F\u002Fgitlab.com\u002Fshnarazk\u002FSAT\u002Fsplr\u002Fissues\u002F90\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Col\u003E\n\u003Cli\u003Eglobal control of restart\n'global'は大局観ってやつ。\u003Ccode\u003Erestart_step\u003C\u002Fcode\u003E の存在はやはり気になる。今のソルバーはまだ何かに気づけていない。\u003C\u002Fli\u003E\n\u003Cli\u003E[solved by 0.1.5] a better bounded var-rewarding mechanism\nASIDS, CHBどちらも確認済みではあるのだが。ただやる意味あるのかちょっと疑問に思ってきた。\n時間変化するのだから、求解直後の値を見てもそこには最終ステップを解くのに必要だった情報しか残っていないと考えるべきだろう。\n従って、最適な値分散なんてものは存在しない。そこに至るまでの履歴も重要。\nもう一つ、zero-sum rewardingについても検討のこと。\u003C\u002Fli\u003E\n\u003Cli\u003Enew category of problems based on something like FUP, CNF\u003C\u002Fli\u003E\n\u003Cli\u003Einvestigate the reason why satcoin groups require 'deep search' to be solved.\nこれは1に関係するのだろう。FUPのデータも必要かも。\nただし0.1.5では0.1.4で見られたきれいなセパレーションがなくなっている。\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Ch2\u003E2019-10-27: A better bounded var-rewarding mechanismに関する意外な展開\u003C\u002Fh2\u003E\n\u003Cp\u003E夏から9月にかけてリスタートを掛けても意外に割り当て対象が限定されているという話を散々やってきていた\nのだが、よくわからぬregressionの解消に取り組んでいてとんでもないことがわかった。結局、CHBという\nstrictly bounded var-rewardingはやはりいい結果につながっていたようだ。あまりによい成果が出たので一旦\n計画を延期して0.1.5をリリースすることにしよう。0.1.5がなぜいいのかはリリース後に検討。ここの話に戻っ\nてくるのはさらにその後で十分ということになった。\u003C\u002Fp\u003E\n\u003Ch2\u003E2019-11-29: 0.2.0のリリース\u003C\u002Fh2\u003E\n\u003Cp\u003Eパラメータチューニングの消耗戦の合間にHaskellでいうところの実行速度に影響を及ぼさないnewtype的な型安全性を導入してみた。\n実際にRustでも速度低下が見られなかったので内部構造の変更は大きな変更だろうということで0.2.0に格上げ。\nパラメータチューニングの方は変数活性度の減衰係数でわずか1問の進展が見られたのでそれも入れて0.2.0をリリース。\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E1:大局観は進展見られず\u003C\u002Fli\u003E\n\u003Cli\u003E3:問題のカテゴライズは全く手付かず\u003C\u002Fli\u003E\n\u003Cli\u003E4:deep search問題は進展見られず\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n"},dir:{writable:true,enumerable:true,value:"article\u002F.json\u002F2019"},base:{writable:true,enumerable:true,value:"2019-09-20-splr015.json"},ext:{writable:true,enumerable:true,value:".json"},sourceBase:{writable:true,enumerable:true,value:"2019-09-20-splr015.md"},sourceExt:{writable:true,enumerable:true,value:".md"}})}],fetch:[],mutations:[]});