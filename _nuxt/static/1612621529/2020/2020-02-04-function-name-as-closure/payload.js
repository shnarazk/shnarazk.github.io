__NUXT_JSONP__("/2020/2020-02-04-function-name-as-closure", {data:[{article:Object.create(null,{default:{writable:true,enumerable:true,value:{title:"Function name as a 1-argumented closure",subtitle:"more functional style",date:"2020-02-04T00:00:00.000Z",tags:["rust"],bodyContent:"rustc 1.41でcargo clippyを走らせて以下が指摘された。\n\n```\ncargo clippy\n    Checking splr v0.3.0 (\u002FUsers\u002Fnash\u002FRepositories\u002Fsplr)\nwarning: redundant closure found\n   --\u003E src\u002Ftypes.rs:394:69\n    |\n394 |         let fs = File::open(path).map_or(Err(SolverError::IOError), | f | Ok(f))?;\n    |                                                                     ^^^^^^^^^^^ help: remove closure as shown: `Ok`\n    |\n    = note: `#[warn(clippy::redundant_closure)]` on by default\n    = help: for further information visit https:\u002F\u002Frust-lang.github.io\u002Frust-clippy\u002Fmaster\u002Findex.html#redundant_closure\n```\n\nということで以下のように変更した。\n\n```diff\n-        let fs = File::open(path).map_or(Err(SolverError::IOError), |f| Ok(f))?;\n+        let fs = File::open(path).map_or(Err(SolverError::IOError), Ok)?;\n```\n\nなんだ、こう書けたのか。随分と関数型プログラミングらしくなるな。",bodyHtml:"\u003Cp\u003Erustc 1.41でcargo clippyを走らせて以下が指摘された。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Ecargo clippy\n    Checking splr v0.3.0 (\u002FUsers\u002Fnash\u002FRepositories\u002Fsplr)\nwarning: redundant closure found\n   --&gt; src\u002Ftypes.rs:394:69\n    |\n394 |         let fs = File::open(path).map_or(Err(SolverError::IOError), | f | Ok(f))?;\n    |                                                                     ^^^^^^^^^^^ help: remove closure as shown: `Ok`\n    |\n    = note: `#[warn(clippy::redundant_closure)]` on by default\n    = help: for further information visit https:\u002F\u002Frust-lang.github.io\u002Frust-clippy\u002Fmaster\u002Findex.html#redundant_closure\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003Eということで以下のように変更した。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E\u003Cspan class=\"hljs-deletion\"\u003E-        let fs = File::open(path).map_or(Err(SolverError::IOError), |f| Ok(f))?;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+        let fs = File::open(path).map_or(Err(SolverError::IOError), Ok)?;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003Eなんだ、こう書けたのか。随分と関数型プログラミングらしくなるな。\u003C\u002Fp\u003E\n",dir:"article\u002F.json\u002F2020",base:"2020-02-04-function-name-as-closure.json",ext:".json",sourceBase:"2020-02-04-function-name-as-closure.md",sourceExt:".md"}},title:{writable:true,enumerable:true,value:"Function name as a 1-argumented closure"},subtitle:{writable:true,enumerable:true,value:"more functional style"},date:{writable:true,enumerable:true,value:"2020-02-04T00:00:00.000Z"},tags:{writable:true,enumerable:true,value:["rust"]},bodyContent:{writable:true,enumerable:true,value:"rustc 1.41でcargo clippyを走らせて以下が指摘された。\n\n```\ncargo clippy\n    Checking splr v0.3.0 (\u002FUsers\u002Fnash\u002FRepositories\u002Fsplr)\nwarning: redundant closure found\n   --\u003E src\u002Ftypes.rs:394:69\n    |\n394 |         let fs = File::open(path).map_or(Err(SolverError::IOError), | f | Ok(f))?;\n    |                                                                     ^^^^^^^^^^^ help: remove closure as shown: `Ok`\n    |\n    = note: `#[warn(clippy::redundant_closure)]` on by default\n    = help: for further information visit https:\u002F\u002Frust-lang.github.io\u002Frust-clippy\u002Fmaster\u002Findex.html#redundant_closure\n```\n\nということで以下のように変更した。\n\n```diff\n-        let fs = File::open(path).map_or(Err(SolverError::IOError), |f| Ok(f))?;\n+        let fs = File::open(path).map_or(Err(SolverError::IOError), Ok)?;\n```\n\nなんだ、こう書けたのか。随分と関数型プログラミングらしくなるな。"},bodyHtml:{writable:true,enumerable:true,value:"\u003Cp\u003Erustc 1.41でcargo clippyを走らせて以下が指摘された。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Ecargo clippy\n    Checking splr v0.3.0 (\u002FUsers\u002Fnash\u002FRepositories\u002Fsplr)\nwarning: redundant closure found\n   --&gt; src\u002Ftypes.rs:394:69\n    |\n394 |         let fs = File::open(path).map_or(Err(SolverError::IOError), | f | Ok(f))?;\n    |                                                                     ^^^^^^^^^^^ help: remove closure as shown: `Ok`\n    |\n    = note: `#[warn(clippy::redundant_closure)]` on by default\n    = help: for further information visit https:\u002F\u002Frust-lang.github.io\u002Frust-clippy\u002Fmaster\u002Findex.html#redundant_closure\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003Eということで以下のように変更した。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E\u003Cspan class=\"hljs-deletion\"\u003E-        let fs = File::open(path).map_or(Err(SolverError::IOError), |f| Ok(f))?;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-addition\"\u003E+        let fs = File::open(path).map_or(Err(SolverError::IOError), Ok)?;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003Eなんだ、こう書けたのか。随分と関数型プログラミングらしくなるな。\u003C\u002Fp\u003E\n"},dir:{writable:true,enumerable:true,value:"article\u002F.json\u002F2020"},base:{writable:true,enumerable:true,value:"2020-02-04-function-name-as-closure.json"},ext:{writable:true,enumerable:true,value:".json"},sourceBase:{writable:true,enumerable:true,value:"2020-02-04-function-name-as-closure.md"},sourceExt:{writable:true,enumerable:true,value:".md"}})}],fetch:[],mutations:[]});