__NUXT_JSONP__("/2017/2017-10-20-emacs-tex-print", {data:[{article:Object.create(null,{default:{writable:true,enumerable:true,value:{title:"tex-print for old Emacs",subtitle:"pdfを直接生成するlatex系のためのtex-print",date:"2017-10-20T00:00:00.000Z",tags:["emacs","latex"],bodyContent:"A customized tex-print for latex family that generate a pdf file directly.It works now!\n\n```lisp\n(defun tex-print (&optional alt)\n  \"Print the .dvi file made by \\\\[tex-region], \\\\[tex-buffer] or \\\\[tex-file].\nRuns the shell command defined by `tex-dvi-print-command'.  If prefix argument\nis provided, use the alternative command, `tex-alt-dvi-print-command'.\"\n  (interactive \"P\")\n  (let ((print-file-name-pdf (tex-append tex-print-file \".pdf\"))\n\t(print-file-name-dvi (tex-append tex-print-file \".dvi\"))\n\ttest-name)\n    (if (and (not (equal (current-buffer) tex-last-buffer-texed))\n\t     (buffer-file-name)\n\t     ;; Check that this buffer's printed file is up to date.\n\t     (or\n\t      (file-newer-than-file-p\n\t       (setq test-name (tex-append (buffer-file-name) \".pdf\"))\n\t       (buffer-file-name))\n\t      (file-newer-than-file-p\n\t       (setq test-name (tex-append (buffer-file-name) \".dvi\"))\n\t       (buffer-file-name))))\n\t(setq print-file-name-dvi test-name))\n    (and\n     (not (file-exists-p print-file-name-dvi))\n     (file-exists-p print-file-name-pdf)\n     (setq print-file-name-dvi print-file-name-pdf))\n    (if (not (file-exists-p print-file-name-dvi))\n        (error \"No appropriate `.pdf' nor `.dvi' file could be found %s \" print-file-name-dvi)\n      (if (tex-shell-running)\n          (tex-kill-job)\n        (tex-start-shell))\n      (tex-send-command\n       (if alt tex-alt-dvi-print-command tex-dvi-print-command)\n       print-file-name-dvi\n       t))))\n```",bodyHtml:"\u003Cp\u003EA customized tex-print for latex family that generate a pdf file directly.It works now!\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E(\u003Cspan class=\"hljs-name\"\u003Edefun\u003C\u002Fspan\u003E tex-print (\u003Cspan class=\"hljs-name\"\u003E&amp;optional\u003C\u002Fspan\u003E alt)\n  \u003Cspan class=\"hljs-string\"\u003E&quot;Print the .dvi file made by \\\\[tex-region], \\\\[tex-buffer] or \\\\[tex-file].\nRuns the shell command defined by `tex-dvi-print-command&#x27;.  If prefix argument\nis provided, use the alternative command, `tex-alt-dvi-print-command&#x27;.&quot;\u003C\u002Fspan\u003E\n  (\u003Cspan class=\"hljs-name\"\u003Einteractive\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;P&quot;\u003C\u002Fspan\u003E)\n  (\u003Cspan class=\"hljs-name\"\u003Elet\u003C\u002Fspan\u003E ((\u003Cspan class=\"hljs-name\"\u003Eprint-file-name-pdf\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-name\"\u003Etex-append\u003C\u002Fspan\u003E tex-print-file \u003Cspan class=\"hljs-string\"\u003E&quot;.pdf&quot;\u003C\u002Fspan\u003E))\n\t(\u003Cspan class=\"hljs-name\"\u003Eprint-file-name-dvi\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-name\"\u003Etex-append\u003C\u002Fspan\u003E tex-print-file \u003Cspan class=\"hljs-string\"\u003E&quot;.dvi&quot;\u003C\u002Fspan\u003E))\n\ttest-name)\n    (\u003Cspan class=\"hljs-name\"\u003Eif\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-name\"\u003Eand\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-name\"\u003Enot\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-name\"\u003Eequal\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-name\"\u003Ecurrent-buffer\u003C\u002Fspan\u003E) tex-last-buffer-texed))\n\t     (\u003Cspan class=\"hljs-name\"\u003Ebuffer-file-name\u003C\u002Fspan\u003E)\n\t     \u003Cspan class=\"hljs-comment\"\u003E;; Check that this buffer&#x27;s printed file is up to date.\u003C\u002Fspan\u003E\n\t     (\u003Cspan class=\"hljs-name\"\u003Eor\u003C\u002Fspan\u003E\n\t      (\u003Cspan class=\"hljs-name\"\u003Efile-newer-than-file-p\u003C\u002Fspan\u003E\n\t       (\u003Cspan class=\"hljs-name\"\u003Esetq\u003C\u002Fspan\u003E test-name (\u003Cspan class=\"hljs-name\"\u003Etex-append\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-name\"\u003Ebuffer-file-name\u003C\u002Fspan\u003E) \u003Cspan class=\"hljs-string\"\u003E&quot;.pdf&quot;\u003C\u002Fspan\u003E))\n\t       (\u003Cspan class=\"hljs-name\"\u003Ebuffer-file-name\u003C\u002Fspan\u003E))\n\t      (\u003Cspan class=\"hljs-name\"\u003Efile-newer-than-file-p\u003C\u002Fspan\u003E\n\t       (\u003Cspan class=\"hljs-name\"\u003Esetq\u003C\u002Fspan\u003E test-name (\u003Cspan class=\"hljs-name\"\u003Etex-append\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-name\"\u003Ebuffer-file-name\u003C\u002Fspan\u003E) \u003Cspan class=\"hljs-string\"\u003E&quot;.dvi&quot;\u003C\u002Fspan\u003E))\n\t       (\u003Cspan class=\"hljs-name\"\u003Ebuffer-file-name\u003C\u002Fspan\u003E))))\n\t(\u003Cspan class=\"hljs-name\"\u003Esetq\u003C\u002Fspan\u003E print-file-name-dvi test-name))\n    (\u003Cspan class=\"hljs-name\"\u003Eand\u003C\u002Fspan\u003E\n     (\u003Cspan class=\"hljs-name\"\u003Enot\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-name\"\u003Efile-exists-p\u003C\u002Fspan\u003E print-file-name-dvi))\n     (\u003Cspan class=\"hljs-name\"\u003Efile-exists-p\u003C\u002Fspan\u003E print-file-name-pdf)\n     (\u003Cspan class=\"hljs-name\"\u003Esetq\u003C\u002Fspan\u003E print-file-name-dvi print-file-name-pdf))\n    (\u003Cspan class=\"hljs-name\"\u003Eif\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-name\"\u003Enot\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-name\"\u003Efile-exists-p\u003C\u002Fspan\u003E print-file-name-dvi))\n        (\u003Cspan class=\"hljs-name\"\u003Eerror\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;No appropriate `.pdf&#x27; nor `.dvi&#x27; file could be found %s &quot;\u003C\u002Fspan\u003E print-file-name-dvi)\n      (\u003Cspan class=\"hljs-name\"\u003Eif\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-name\"\u003Etex-shell-running\u003C\u002Fspan\u003E)\n          (\u003Cspan class=\"hljs-name\"\u003Etex-kill-job\u003C\u002Fspan\u003E)\n        (\u003Cspan class=\"hljs-name\"\u003Etex-start-shell\u003C\u002Fspan\u003E))\n      (\u003Cspan class=\"hljs-name\"\u003Etex-send-command\u003C\u002Fspan\u003E\n       (\u003Cspan class=\"hljs-name\"\u003Eif\u003C\u002Fspan\u003E alt tex-alt-dvi-print-command tex-dvi-print-command)\n       print-file-name-dvi\n       \u003Cspan class=\"hljs-literal\"\u003Et\u003C\u002Fspan\u003E))))\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E",dir:"article\u002F.json\u002F2017",base:"2017-10-20-emacs-tex-print.json",ext:".json",sourceBase:"2017-10-20-emacs-tex-print.md",sourceExt:".md"}},title:{writable:true,enumerable:true,value:"tex-print for old Emacs"},subtitle:{writable:true,enumerable:true,value:"pdfを直接生成するlatex系のためのtex-print"},date:{writable:true,enumerable:true,value:"2017-10-20T00:00:00.000Z"},tags:{writable:true,enumerable:true,value:["emacs","latex"]},bodyContent:{writable:true,enumerable:true,value:"A customized tex-print for latex family that generate a pdf file directly.It works now!\n\n```lisp\n(defun tex-print (&optional alt)\n  \"Print the .dvi file made by \\\\[tex-region], \\\\[tex-buffer] or \\\\[tex-file].\nRuns the shell command defined by `tex-dvi-print-command'.  If prefix argument\nis provided, use the alternative command, `tex-alt-dvi-print-command'.\"\n  (interactive \"P\")\n  (let ((print-file-name-pdf (tex-append tex-print-file \".pdf\"))\n\t(print-file-name-dvi (tex-append tex-print-file \".dvi\"))\n\ttest-name)\n    (if (and (not (equal (current-buffer) tex-last-buffer-texed))\n\t     (buffer-file-name)\n\t     ;; Check that this buffer's printed file is up to date.\n\t     (or\n\t      (file-newer-than-file-p\n\t       (setq test-name (tex-append (buffer-file-name) \".pdf\"))\n\t       (buffer-file-name))\n\t      (file-newer-than-file-p\n\t       (setq test-name (tex-append (buffer-file-name) \".dvi\"))\n\t       (buffer-file-name))))\n\t(setq print-file-name-dvi test-name))\n    (and\n     (not (file-exists-p print-file-name-dvi))\n     (file-exists-p print-file-name-pdf)\n     (setq print-file-name-dvi print-file-name-pdf))\n    (if (not (file-exists-p print-file-name-dvi))\n        (error \"No appropriate `.pdf' nor `.dvi' file could be found %s \" print-file-name-dvi)\n      (if (tex-shell-running)\n          (tex-kill-job)\n        (tex-start-shell))\n      (tex-send-command\n       (if alt tex-alt-dvi-print-command tex-dvi-print-command)\n       print-file-name-dvi\n       t))))\n```"},bodyHtml:{writable:true,enumerable:true,value:"\u003Cp\u003EA customized tex-print for latex family that generate a pdf file directly.It works now!\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E(\u003Cspan class=\"hljs-name\"\u003Edefun\u003C\u002Fspan\u003E tex-print (\u003Cspan class=\"hljs-name\"\u003E&amp;optional\u003C\u002Fspan\u003E alt)\n  \u003Cspan class=\"hljs-string\"\u003E&quot;Print the .dvi file made by \\\\[tex-region], \\\\[tex-buffer] or \\\\[tex-file].\nRuns the shell command defined by `tex-dvi-print-command&#x27;.  If prefix argument\nis provided, use the alternative command, `tex-alt-dvi-print-command&#x27;.&quot;\u003C\u002Fspan\u003E\n  (\u003Cspan class=\"hljs-name\"\u003Einteractive\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;P&quot;\u003C\u002Fspan\u003E)\n  (\u003Cspan class=\"hljs-name\"\u003Elet\u003C\u002Fspan\u003E ((\u003Cspan class=\"hljs-name\"\u003Eprint-file-name-pdf\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-name\"\u003Etex-append\u003C\u002Fspan\u003E tex-print-file \u003Cspan class=\"hljs-string\"\u003E&quot;.pdf&quot;\u003C\u002Fspan\u003E))\n\t(\u003Cspan class=\"hljs-name\"\u003Eprint-file-name-dvi\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-name\"\u003Etex-append\u003C\u002Fspan\u003E tex-print-file \u003Cspan class=\"hljs-string\"\u003E&quot;.dvi&quot;\u003C\u002Fspan\u003E))\n\ttest-name)\n    (\u003Cspan class=\"hljs-name\"\u003Eif\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-name\"\u003Eand\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-name\"\u003Enot\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-name\"\u003Eequal\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-name\"\u003Ecurrent-buffer\u003C\u002Fspan\u003E) tex-last-buffer-texed))\n\t     (\u003Cspan class=\"hljs-name\"\u003Ebuffer-file-name\u003C\u002Fspan\u003E)\n\t     \u003Cspan class=\"hljs-comment\"\u003E;; Check that this buffer&#x27;s printed file is up to date.\u003C\u002Fspan\u003E\n\t     (\u003Cspan class=\"hljs-name\"\u003Eor\u003C\u002Fspan\u003E\n\t      (\u003Cspan class=\"hljs-name\"\u003Efile-newer-than-file-p\u003C\u002Fspan\u003E\n\t       (\u003Cspan class=\"hljs-name\"\u003Esetq\u003C\u002Fspan\u003E test-name (\u003Cspan class=\"hljs-name\"\u003Etex-append\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-name\"\u003Ebuffer-file-name\u003C\u002Fspan\u003E) \u003Cspan class=\"hljs-string\"\u003E&quot;.pdf&quot;\u003C\u002Fspan\u003E))\n\t       (\u003Cspan class=\"hljs-name\"\u003Ebuffer-file-name\u003C\u002Fspan\u003E))\n\t      (\u003Cspan class=\"hljs-name\"\u003Efile-newer-than-file-p\u003C\u002Fspan\u003E\n\t       (\u003Cspan class=\"hljs-name\"\u003Esetq\u003C\u002Fspan\u003E test-name (\u003Cspan class=\"hljs-name\"\u003Etex-append\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-name\"\u003Ebuffer-file-name\u003C\u002Fspan\u003E) \u003Cspan class=\"hljs-string\"\u003E&quot;.dvi&quot;\u003C\u002Fspan\u003E))\n\t       (\u003Cspan class=\"hljs-name\"\u003Ebuffer-file-name\u003C\u002Fspan\u003E))))\n\t(\u003Cspan class=\"hljs-name\"\u003Esetq\u003C\u002Fspan\u003E print-file-name-dvi test-name))\n    (\u003Cspan class=\"hljs-name\"\u003Eand\u003C\u002Fspan\u003E\n     (\u003Cspan class=\"hljs-name\"\u003Enot\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-name\"\u003Efile-exists-p\u003C\u002Fspan\u003E print-file-name-dvi))\n     (\u003Cspan class=\"hljs-name\"\u003Efile-exists-p\u003C\u002Fspan\u003E print-file-name-pdf)\n     (\u003Cspan class=\"hljs-name\"\u003Esetq\u003C\u002Fspan\u003E print-file-name-dvi print-file-name-pdf))\n    (\u003Cspan class=\"hljs-name\"\u003Eif\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-name\"\u003Enot\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-name\"\u003Efile-exists-p\u003C\u002Fspan\u003E print-file-name-dvi))\n        (\u003Cspan class=\"hljs-name\"\u003Eerror\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;No appropriate `.pdf&#x27; nor `.dvi&#x27; file could be found %s &quot;\u003C\u002Fspan\u003E print-file-name-dvi)\n      (\u003Cspan class=\"hljs-name\"\u003Eif\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-name\"\u003Etex-shell-running\u003C\u002Fspan\u003E)\n          (\u003Cspan class=\"hljs-name\"\u003Etex-kill-job\u003C\u002Fspan\u003E)\n        (\u003Cspan class=\"hljs-name\"\u003Etex-start-shell\u003C\u002Fspan\u003E))\n      (\u003Cspan class=\"hljs-name\"\u003Etex-send-command\u003C\u002Fspan\u003E\n       (\u003Cspan class=\"hljs-name\"\u003Eif\u003C\u002Fspan\u003E alt tex-alt-dvi-print-command tex-dvi-print-command)\n       print-file-name-dvi\n       \u003Cspan class=\"hljs-literal\"\u003Et\u003C\u002Fspan\u003E))))\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E"},dir:{writable:true,enumerable:true,value:"article\u002F.json\u002F2017"},base:{writable:true,enumerable:true,value:"2017-10-20-emacs-tex-print.json"},ext:{writable:true,enumerable:true,value:".json"},sourceBase:{writable:true,enumerable:true,value:"2017-10-20-emacs-tex-print.md"},sourceExt:{writable:true,enumerable:true,value:".md"}})}],fetch:[],mutations:[]});