__NUXT_JSONP__("/2021/2021-01-17-sudoku144", {data:[{article:Object.create(null,{default:{writable:true,enumerable:true,value:{title:"Rust製のSATソルバーで144x144のSudokuを解こう",subtitle:"そろそろ限界",date:"2021-01-17T00:00:00.000Z",tags:["splr","sudoku"],bodyContent:"着々と巨大なSudokuが解けるようになったのでどんどん行きましょう。\nlargeとかgiantとかを追加キーワードにして検索してとてもよさそうな[サイト](https:\u002F\u002Fsudokugeant.cabanova.com\u002Fnoflash.html)を見つけたけど、そのサイトはflashで書いてあって一切見れない。\nなんという時代（技術）の断絶！\n\nただ[チャットページ](http:\u002F\u002Fforum.enjoysudoku.com\u002Fgiant-sudoku-s-16x16-25x25-36x36-100x100-t6578.html)が生きていたのでなんとか144x144とか400x400の問題を見つけることができました。\n\nということで[144x144 sudoku](http:\u002F\u002Fforum.enjoysudoku.com\u002Fgiant-sudoku-s-16x16-25x25-36x36-100x100-t6578.html#p68796)を対象にしてみます。\nparseをちゃっちゃと書いて、実行してみるとルール生成中のプロセスサイズが主記憶の16GBを超え出したのでさらにルール数の削減が必要になりました。まあ、気づいていたけどこれまでやらなかった\n\n**全ての場合を網羅するルールを生成してから、初期状態を入れるのは無駄**\n\nという当たり前のことをいよいよ[実践](https:\u002F\u002Fgithub.com\u002Fshnarazk\u002Fsudoku_sat\u002Fcommit\u002Fa21fc2f90c4b965cc417b0d07af181de68a1bd88)することになりました。\n\n144x144の問題も400x400の問題もどちらも人間が解きやすいように初期状態で結構なセルが埋まっているのでそれらに関する無意味なルールの作成を止めれば、本当に次数が1下がるくらいの効果が期待できるのではなかろうか。\nさらに二重にルールを作成していたところがあったので（上三角だけ計算するような感じで）半分だけ生成するようにすると生成されるCNFはおよそ200MB。\nこれは最初に生成されたものより1桁は小さくなるくらいの効果がありました。\nこれで、生成時にも16GB内で収まるようになった（ヘッダーを作るためにファイルに書き出すのは全てのルールを生成した後）し、Splr的にも節数は全然問題ありません。\n実際、Splrは数秒で解きました。色々とデータが大きいので試したい方は以下をどうぞ。\n\n```\ngit clone https:\u002F\u002Fgithub.com\u002Fshnarazk\u002Fsudoku_sat.git\ncd sudoku_sat\ncargo run --bin sudoku144 --release \u003C sudoku144.txt\n```\n　\nちなみにこの変更を施しても400x400は全然ダメ。ルールの生成中にプロセスサイズが40GBを超え、1時間経っても生成が終わらない。ちょっと無理ですね。ルール数は $O(n^4)$ だからなあ。\n\n## Link\n\n- https:\u002F\u002Fgithub.com\u002Fshnarazk\u002Fsudoku_sat\u002F",bodyHtml:"\u003Cp\u003E着々と巨大なSudokuが解けるようになったのでどんどん行きましょう。\nlargeとかgiantとかを追加キーワードにして検索してとてもよさそうな\u003Ca href=\"https:\u002F\u002Fsudokugeant.cabanova.com\u002Fnoflash.html\"\u003Eサイト\u003C\u002Fa\u003Eを見つけたけど、そのサイトはflashで書いてあって一切見れない。\nなんという時代（技術）の断絶！\u003C\u002Fp\u003E\n\u003Cp\u003Eただ\u003Ca href=\"http:\u002F\u002Fforum.enjoysudoku.com\u002Fgiant-sudoku-s-16x16-25x25-36x36-100x100-t6578.html\"\u003Eチャットページ\u003C\u002Fa\u003Eが生きていたのでなんとか144x144とか400x400の問題を見つけることができました。\u003C\u002Fp\u003E\n\u003Cp\u003Eということで\u003Ca href=\"http:\u002F\u002Fforum.enjoysudoku.com\u002Fgiant-sudoku-s-16x16-25x25-36x36-100x100-t6578.html#p68796\"\u003E144x144 sudoku\u003C\u002Fa\u003Eを対象にしてみます。\nparseをちゃっちゃと書いて、実行してみるとルール生成中のプロセスサイズが主記憶の16GBを超え出したのでさらにルール数の削減が必要になりました。まあ、気づいていたけどこれまでやらなかった\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003E全ての場合を網羅するルールを生成してから、初期状態を入れるのは無駄\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003Eという当たり前のことをいよいよ\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fshnarazk\u002Fsudoku_sat\u002Fcommit\u002Fa21fc2f90c4b965cc417b0d07af181de68a1bd88\"\u003E実践\u003C\u002Fa\u003Eすることになりました。\u003C\u002Fp\u003E\n\u003Cp\u003E144x144の問題も400x400の問題もどちらも人間が解きやすいように初期状態で結構なセルが埋まっているのでそれらに関する無意味なルールの作成を止めれば、本当に次数が1下がるくらいの効果が期待できるのではなかろうか。\nさらに二重にルールを作成していたところがあったので（上三角だけ計算するような感じで）半分だけ生成するようにすると生成されるCNFはおよそ200MB。\nこれは最初に生成されたものより1桁は小さくなるくらいの効果がありました。\nこれで、生成時にも16GB内で収まるようになった（ヘッダーを作るためにファイルに書き出すのは全てのルールを生成した後）し、Splr的にも節数は全然問題ありません。\n実際、Splrは数秒で解きました。色々とデータが大きいので試したい方は以下をどうぞ。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Egit clone https:\u002F\u002Fgithub.com\u002Fshnarazk\u002Fsudoku_sat.git\ncd sudoku_sat\ncargo run --bin sudoku144 --release &lt; sudoku144.txt\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003Eちなみにこの変更を施しても400x400は全然ダメ。ルールの生成中にプロセスサイズが40GBを超え、1時間経っても生成が終わらない。ちょっと無理ですね。ルール数は $O(n^4)$ だからなあ。\u003C\u002Fp\u003E\n\u003Ch2\u003ELink\u003C\u002Fh2\u003E\n\u003Cul\u003E\n\u003Cli\u003Ehttps:\u002F\u002Fgithub.com\u002Fshnarazk\u002Fsudoku_sat\u002F\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n",dir:"article\u002F.json\u002F2021",base:"2021-01-17-sudoku144.json",ext:".json",sourceBase:"2021-01-17-sudoku144.md",sourceExt:".md"}},title:{writable:true,enumerable:true,value:"Rust製のSATソルバーで144x144のSudokuを解こう"},subtitle:{writable:true,enumerable:true,value:"そろそろ限界"},date:{writable:true,enumerable:true,value:"2021-01-17T00:00:00.000Z"},tags:{writable:true,enumerable:true,value:["splr","sudoku"]},bodyContent:{writable:true,enumerable:true,value:"着々と巨大なSudokuが解けるようになったのでどんどん行きましょう。\nlargeとかgiantとかを追加キーワードにして検索してとてもよさそうな[サイト](https:\u002F\u002Fsudokugeant.cabanova.com\u002Fnoflash.html)を見つけたけど、そのサイトはflashで書いてあって一切見れない。\nなんという時代（技術）の断絶！\n\nただ[チャットページ](http:\u002F\u002Fforum.enjoysudoku.com\u002Fgiant-sudoku-s-16x16-25x25-36x36-100x100-t6578.html)が生きていたのでなんとか144x144とか400x400の問題を見つけることができました。\n\nということで[144x144 sudoku](http:\u002F\u002Fforum.enjoysudoku.com\u002Fgiant-sudoku-s-16x16-25x25-36x36-100x100-t6578.html#p68796)を対象にしてみます。\nparseをちゃっちゃと書いて、実行してみるとルール生成中のプロセスサイズが主記憶の16GBを超え出したのでさらにルール数の削減が必要になりました。まあ、気づいていたけどこれまでやらなかった\n\n**全ての場合を網羅するルールを生成してから、初期状態を入れるのは無駄**\n\nという当たり前のことをいよいよ[実践](https:\u002F\u002Fgithub.com\u002Fshnarazk\u002Fsudoku_sat\u002Fcommit\u002Fa21fc2f90c4b965cc417b0d07af181de68a1bd88)することになりました。\n\n144x144の問題も400x400の問題もどちらも人間が解きやすいように初期状態で結構なセルが埋まっているのでそれらに関する無意味なルールの作成を止めれば、本当に次数が1下がるくらいの効果が期待できるのではなかろうか。\nさらに二重にルールを作成していたところがあったので（上三角だけ計算するような感じで）半分だけ生成するようにすると生成されるCNFはおよそ200MB。\nこれは最初に生成されたものより1桁は小さくなるくらいの効果がありました。\nこれで、生成時にも16GB内で収まるようになった（ヘッダーを作るためにファイルに書き出すのは全てのルールを生成した後）し、Splr的にも節数は全然問題ありません。\n実際、Splrは数秒で解きました。色々とデータが大きいので試したい方は以下をどうぞ。\n\n```\ngit clone https:\u002F\u002Fgithub.com\u002Fshnarazk\u002Fsudoku_sat.git\ncd sudoku_sat\ncargo run --bin sudoku144 --release \u003C sudoku144.txt\n```\n　\nちなみにこの変更を施しても400x400は全然ダメ。ルールの生成中にプロセスサイズが40GBを超え、1時間経っても生成が終わらない。ちょっと無理ですね。ルール数は $O(n^4)$ だからなあ。\n\n## Link\n\n- https:\u002F\u002Fgithub.com\u002Fshnarazk\u002Fsudoku_sat\u002F"},bodyHtml:{writable:true,enumerable:true,value:"\u003Cp\u003E着々と巨大なSudokuが解けるようになったのでどんどん行きましょう。\nlargeとかgiantとかを追加キーワードにして検索してとてもよさそうな\u003Ca href=\"https:\u002F\u002Fsudokugeant.cabanova.com\u002Fnoflash.html\"\u003Eサイト\u003C\u002Fa\u003Eを見つけたけど、そのサイトはflashで書いてあって一切見れない。\nなんという時代（技術）の断絶！\u003C\u002Fp\u003E\n\u003Cp\u003Eただ\u003Ca href=\"http:\u002F\u002Fforum.enjoysudoku.com\u002Fgiant-sudoku-s-16x16-25x25-36x36-100x100-t6578.html\"\u003Eチャットページ\u003C\u002Fa\u003Eが生きていたのでなんとか144x144とか400x400の問題を見つけることができました。\u003C\u002Fp\u003E\n\u003Cp\u003Eということで\u003Ca href=\"http:\u002F\u002Fforum.enjoysudoku.com\u002Fgiant-sudoku-s-16x16-25x25-36x36-100x100-t6578.html#p68796\"\u003E144x144 sudoku\u003C\u002Fa\u003Eを対象にしてみます。\nparseをちゃっちゃと書いて、実行してみるとルール生成中のプロセスサイズが主記憶の16GBを超え出したのでさらにルール数の削減が必要になりました。まあ、気づいていたけどこれまでやらなかった\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003E全ての場合を網羅するルールを生成してから、初期状態を入れるのは無駄\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003Eという当たり前のことをいよいよ\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fshnarazk\u002Fsudoku_sat\u002Fcommit\u002Fa21fc2f90c4b965cc417b0d07af181de68a1bd88\"\u003E実践\u003C\u002Fa\u003Eすることになりました。\u003C\u002Fp\u003E\n\u003Cp\u003E144x144の問題も400x400の問題もどちらも人間が解きやすいように初期状態で結構なセルが埋まっているのでそれらに関する無意味なルールの作成を止めれば、本当に次数が1下がるくらいの効果が期待できるのではなかろうか。\nさらに二重にルールを作成していたところがあったので（上三角だけ計算するような感じで）半分だけ生成するようにすると生成されるCNFはおよそ200MB。\nこれは最初に生成されたものより1桁は小さくなるくらいの効果がありました。\nこれで、生成時にも16GB内で収まるようになった（ヘッダーを作るためにファイルに書き出すのは全てのルールを生成した後）し、Splr的にも節数は全然問題ありません。\n実際、Splrは数秒で解きました。色々とデータが大きいので試したい方は以下をどうぞ。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Egit clone https:\u002F\u002Fgithub.com\u002Fshnarazk\u002Fsudoku_sat.git\ncd sudoku_sat\ncargo run --bin sudoku144 --release &lt; sudoku144.txt\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003Eちなみにこの変更を施しても400x400は全然ダメ。ルールの生成中にプロセスサイズが40GBを超え、1時間経っても生成が終わらない。ちょっと無理ですね。ルール数は $O(n^4)$ だからなあ。\u003C\u002Fp\u003E\n\u003Ch2\u003ELink\u003C\u002Fh2\u003E\n\u003Cul\u003E\n\u003Cli\u003Ehttps:\u002F\u002Fgithub.com\u002Fshnarazk\u002Fsudoku_sat\u002F\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n"},dir:{writable:true,enumerable:true,value:"article\u002F.json\u002F2021"},base:{writable:true,enumerable:true,value:"2021-01-17-sudoku144.json"},ext:{writable:true,enumerable:true,value:".json"},sourceBase:{writable:true,enumerable:true,value:"2021-01-17-sudoku144.md"},sourceExt:{writable:true,enumerable:true,value:".md"}})}],fetch:[],mutations:[]});