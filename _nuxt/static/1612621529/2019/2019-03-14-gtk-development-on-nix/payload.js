__NUXT_JSONP__("/2019/2019-03-14-gtk-development-on-nix", {data:[{article:Object.create(null,{default:{writable:true,enumerable:true,value:{title:"GTK development on Nix on macOS",subtitle:"これでどこでもgtkでいいじゃん",date:"2020-07-05T00:00:00.000Z",tags:["gtk","NixOS","macOS"],bodyContent:"## C\n\n- sample target: https:\u002F\u002Fdeveloper.gnome.org\u002Fgtk3\u002Fstable\u002Fgtk-getting-started.html\n\nDive into the environment:\n\n```shell\nnix-shell -p gtk3 gcc pkgconfig\n```\n\nAnd compile:\n```shell\ngcc `pkg-config --cflags gtk+-3.0` -o example example.c `pkg-config --libs gtk+-3.0`\n```\n\nThat works.\n\n## Rust (updated at 2020-07-05)\n\nIf you need not to install your project as a nix package, just run:\n\n```shell\n$ nix-shell -p gtk3 pkgconfig\n```\n\n## Rust\n\n- package: https:\u002F\u002Fcrates.io\u002Fcrates\u002Fgtk  \n   - Cargo.toml: `gtk = 0.9`\n   - Cargo.toml: `gtk = 0.5`  # 0.6 requires unstable channel as of 2019-03-14\n   - Cargo.toml: `gtk = 0.6`  # for stable channel as of 2019-07-02\n- sample target: https:\u002F\u002Fgithub.com\u002Fgtk-rs\u002Fgtk\u002Fblob\u002Fmaster\u002Fsrc\u002Frt.rs\n\nStart with the same approach:\n\n```shell\n$ nix-shell -p gtk3 pkgconfig rustc cargo llvm\n$ cargo run\n    Finished dev [unoptimized + debuginfo] target(s) in 0.21s                                       \n     Running `target\u002Fdebug\u002Fgtktest`\nthread 'main' panicked at 'libgtk-3 was configured with `--enable-debug=no`. See https:\u002F\u002Fgithub.com\u002Fgtk-rs\u002Fgtk\u002Fissues\u002F270 for details', ~\u002F.cargo\u002Fregistry\u002Fsrc\u002Fgithub.com-1ecc6299db9ec823\u002Fgtk-0.5.0\u002Fsrc\u002Frt.rs:137:13\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\n```\n\n- the issue: https:\u002F\u002Fgithub.com\u002Fgtk-rs\u002Fgtk\u002Fissues\u002F270\n- src:  [nix expression for gtk3](https:\u002F\u002Fgithub.com\u002FNixOS\u002Fnixpkgs\u002Fblob\u002Fmaster\u002Fpkgs\u002Fdevelopment\u002Flibraries\u002Fgtk%2B\u002F3.x.nix)\n\n\nSo let's make an overlay:\n\n```\nself: super:\n{\n    gtk3RustDarwin = super.gtk3.overrideDerivation (attrs: { \n        configureFlags = [\n            \"--enable-debug\"\n            \"--disable-dependency-tracking\"\n            \"--disable-glibtest\"\n            \"--enable-quartz-backend\"\n        ];\n    });\n}\n```\n\nWhat's `overrideDerivation`? It's a [deprecated](https:\u002F\u002Fnixos.org\u002Fnixpkgs\u002Fmanual\u002F#sec-pkg-overrideDerivation) function.\nSo the following seems better:\n\n```\nself: super:\n{\n    gtk3RustDarwin = super.gtk3.overrideAttrs (attrs: rec {\n        configureFlags = [\n            \"--enable-debug\"\n            \"--disable-dependency-tracking\"\n            \"--disable-glibtest\"\n            \"--enable-quartz-backend\"\n        ];\n    });\n}\n```\n\nAnyway, give it a try.\n\n```shell\n$ nix-shell -p gtk3RustDarwin pkgconfig rustc cargo llvm\n$ cargo clean  # to purge the previous attempt\n$ cargo run\n```\n\nThat works!",bodyHtml:"\u003Ch2\u003EC\u003C\u002Fh2\u003E\n\u003Cul\u003E\n\u003Cli\u003Esample target: https:\u002F\u002Fdeveloper.gnome.org\u002Fgtk3\u002Fstable\u002Fgtk-getting-started.html\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003EDive into the environment:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003Enix-shell -p gtk3 gcc pkgconfig\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAnd compile:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003Egcc `pkg-config --cflags gtk+-3.0` -o example example.c `pkg-config --libs gtk+-3.0`\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EThat works.\u003C\u002Fp\u003E\n\u003Ch2\u003ERust (updated at 2020-07-05)\u003C\u002Fh2\u003E\n\u003Cp\u003EIf you need not to install your project as a nix package, just run:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E\u003Cspan class=\"hljs-meta\"\u003E$\u003C\u002Fspan\u003E\u003Cspan class=\"bash\"\u003E nix-shell -p gtk3 pkgconfig\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch2\u003ERust\u003C\u002Fh2\u003E\n\u003Cul\u003E\n\u003Cli\u003Epackage: https:\u002F\u002Fcrates.io\u002Fcrates\u002Fgtk\n\u003Cul\u003E\n\u003Cli\u003ECargo.toml: \u003Ccode\u003Egtk = 0.9\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003Cli\u003ECargo.toml: \u003Ccode\u003Egtk = 0.5\u003C\u002Fcode\u003E  # 0.6 requires unstable channel as of 2019-03-14\u003C\u002Fli\u003E\n\u003Cli\u003ECargo.toml: \u003Ccode\u003Egtk = 0.6\u003C\u002Fcode\u003E  # for stable channel as of 2019-07-02\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003Esample target: https:\u002F\u002Fgithub.com\u002Fgtk-rs\u002Fgtk\u002Fblob\u002Fmaster\u002Fsrc\u002Frt.rs\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003EStart with the same approach:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E\u003Cspan class=\"hljs-meta\"\u003E$\u003C\u002Fspan\u003E\u003Cspan class=\"bash\"\u003E nix-shell -p gtk3 pkgconfig rustc cargo llvm\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-meta\"\u003E$\u003C\u002Fspan\u003E\u003Cspan class=\"bash\"\u003E cargo run\u003C\u002Fspan\u003E\n    Finished dev [unoptimized + debuginfo] target(s) in 0.21s                                       \n     Running `target\u002Fdebug\u002Fgtktest`\nthread &#x27;main&#x27; panicked at &#x27;libgtk-3 was configured with `--enable-debug=no`. See https:\u002F\u002Fgithub.com\u002Fgtk-rs\u002Fgtk\u002Fissues\u002F270 for details&#x27;, ~\u002F.cargo\u002Fregistry\u002Fsrc\u002Fgithub.com-1ecc6299db9ec823\u002Fgtk-0.5.0\u002Fsrc\u002Frt.rs:137:13\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cul\u003E\n\u003Cli\u003Ethe issue: https:\u002F\u002Fgithub.com\u002Fgtk-rs\u002Fgtk\u002Fissues\u002F270\u003C\u002Fli\u003E\n\u003Cli\u003Esrc:  \u003Ca href=\"https:\u002F\u002Fgithub.com\u002FNixOS\u002Fnixpkgs\u002Fblob\u002Fmaster\u002Fpkgs\u002Fdevelopment\u002Flibraries\u002Fgtk%2B\u002F3.x.nix\"\u003Enix expression for gtk3\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003ESo let's make an overlay:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Eself: super:\n{\n    gtk3RustDarwin = super.gtk3.overrideDerivation (attrs: { \n        configureFlags = [\n            &quot;--enable-debug&quot;\n            &quot;--disable-dependency-tracking&quot;\n            &quot;--disable-glibtest&quot;\n            &quot;--enable-quartz-backend&quot;\n        ];\n    });\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003EWhat's \u003Ccode\u003EoverrideDerivation\u003C\u002Fcode\u003E? It's a \u003Ca href=\"https:\u002F\u002Fnixos.org\u002Fnixpkgs\u002Fmanual\u002F#sec-pkg-overrideDerivation\"\u003Edeprecated\u003C\u002Fa\u003E function.\nSo the following seems better:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Eself: super:\n{\n    gtk3RustDarwin = super.gtk3.overrideAttrs (attrs: rec {\n        configureFlags = [\n            &quot;--enable-debug&quot;\n            &quot;--disable-dependency-tracking&quot;\n            &quot;--disable-glibtest&quot;\n            &quot;--enable-quartz-backend&quot;\n        ];\n    });\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003EAnyway, give it a try.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E\u003Cspan class=\"hljs-meta\"\u003E$\u003C\u002Fspan\u003E\u003Cspan class=\"bash\"\u003E nix-shell -p gtk3RustDarwin pkgconfig rustc cargo llvm\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-meta\"\u003E$\u003C\u002Fspan\u003E\u003Cspan class=\"bash\"\u003E cargo clean  \u003Cspan class=\"hljs-comment\"\u003E# to purge the previous attempt\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-meta\"\u003E$\u003C\u002Fspan\u003E\u003Cspan class=\"bash\"\u003E cargo run\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EThat works!\u003C\u002Fp\u003E\n",dir:"article\u002F.json\u002F2019",base:"2019-03-14-gtk-development-on-nix.json",ext:".json",sourceBase:"2019-03-14-gtk-development-on-nix.md",sourceExt:".md"}},title:{writable:true,enumerable:true,value:"GTK development on Nix on macOS"},subtitle:{writable:true,enumerable:true,value:"これでどこでもgtkでいいじゃん"},date:{writable:true,enumerable:true,value:"2020-07-05T00:00:00.000Z"},tags:{writable:true,enumerable:true,value:["gtk","NixOS","macOS"]},bodyContent:{writable:true,enumerable:true,value:"## C\n\n- sample target: https:\u002F\u002Fdeveloper.gnome.org\u002Fgtk3\u002Fstable\u002Fgtk-getting-started.html\n\nDive into the environment:\n\n```shell\nnix-shell -p gtk3 gcc pkgconfig\n```\n\nAnd compile:\n```shell\ngcc `pkg-config --cflags gtk+-3.0` -o example example.c `pkg-config --libs gtk+-3.0`\n```\n\nThat works.\n\n## Rust (updated at 2020-07-05)\n\nIf you need not to install your project as a nix package, just run:\n\n```shell\n$ nix-shell -p gtk3 pkgconfig\n```\n\n## Rust\n\n- package: https:\u002F\u002Fcrates.io\u002Fcrates\u002Fgtk  \n   - Cargo.toml: `gtk = 0.9`\n   - Cargo.toml: `gtk = 0.5`  # 0.6 requires unstable channel as of 2019-03-14\n   - Cargo.toml: `gtk = 0.6`  # for stable channel as of 2019-07-02\n- sample target: https:\u002F\u002Fgithub.com\u002Fgtk-rs\u002Fgtk\u002Fblob\u002Fmaster\u002Fsrc\u002Frt.rs\n\nStart with the same approach:\n\n```shell\n$ nix-shell -p gtk3 pkgconfig rustc cargo llvm\n$ cargo run\n    Finished dev [unoptimized + debuginfo] target(s) in 0.21s                                       \n     Running `target\u002Fdebug\u002Fgtktest`\nthread 'main' panicked at 'libgtk-3 was configured with `--enable-debug=no`. See https:\u002F\u002Fgithub.com\u002Fgtk-rs\u002Fgtk\u002Fissues\u002F270 for details', ~\u002F.cargo\u002Fregistry\u002Fsrc\u002Fgithub.com-1ecc6299db9ec823\u002Fgtk-0.5.0\u002Fsrc\u002Frt.rs:137:13\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\n```\n\n- the issue: https:\u002F\u002Fgithub.com\u002Fgtk-rs\u002Fgtk\u002Fissues\u002F270\n- src:  [nix expression for gtk3](https:\u002F\u002Fgithub.com\u002FNixOS\u002Fnixpkgs\u002Fblob\u002Fmaster\u002Fpkgs\u002Fdevelopment\u002Flibraries\u002Fgtk%2B\u002F3.x.nix)\n\n\nSo let's make an overlay:\n\n```\nself: super:\n{\n    gtk3RustDarwin = super.gtk3.overrideDerivation (attrs: { \n        configureFlags = [\n            \"--enable-debug\"\n            \"--disable-dependency-tracking\"\n            \"--disable-glibtest\"\n            \"--enable-quartz-backend\"\n        ];\n    });\n}\n```\n\nWhat's `overrideDerivation`? It's a [deprecated](https:\u002F\u002Fnixos.org\u002Fnixpkgs\u002Fmanual\u002F#sec-pkg-overrideDerivation) function.\nSo the following seems better:\n\n```\nself: super:\n{\n    gtk3RustDarwin = super.gtk3.overrideAttrs (attrs: rec {\n        configureFlags = [\n            \"--enable-debug\"\n            \"--disable-dependency-tracking\"\n            \"--disable-glibtest\"\n            \"--enable-quartz-backend\"\n        ];\n    });\n}\n```\n\nAnyway, give it a try.\n\n```shell\n$ nix-shell -p gtk3RustDarwin pkgconfig rustc cargo llvm\n$ cargo clean  # to purge the previous attempt\n$ cargo run\n```\n\nThat works!"},bodyHtml:{writable:true,enumerable:true,value:"\u003Ch2\u003EC\u003C\u002Fh2\u003E\n\u003Cul\u003E\n\u003Cli\u003Esample target: https:\u002F\u002Fdeveloper.gnome.org\u002Fgtk3\u002Fstable\u002Fgtk-getting-started.html\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003EDive into the environment:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003Enix-shell -p gtk3 gcc pkgconfig\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAnd compile:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003Egcc `pkg-config --cflags gtk+-3.0` -o example example.c `pkg-config --libs gtk+-3.0`\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EThat works.\u003C\u002Fp\u003E\n\u003Ch2\u003ERust (updated at 2020-07-05)\u003C\u002Fh2\u003E\n\u003Cp\u003EIf you need not to install your project as a nix package, just run:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E\u003Cspan class=\"hljs-meta\"\u003E$\u003C\u002Fspan\u003E\u003Cspan class=\"bash\"\u003E nix-shell -p gtk3 pkgconfig\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch2\u003ERust\u003C\u002Fh2\u003E\n\u003Cul\u003E\n\u003Cli\u003Epackage: https:\u002F\u002Fcrates.io\u002Fcrates\u002Fgtk\n\u003Cul\u003E\n\u003Cli\u003ECargo.toml: \u003Ccode\u003Egtk = 0.9\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003Cli\u003ECargo.toml: \u003Ccode\u003Egtk = 0.5\u003C\u002Fcode\u003E  # 0.6 requires unstable channel as of 2019-03-14\u003C\u002Fli\u003E\n\u003Cli\u003ECargo.toml: \u003Ccode\u003Egtk = 0.6\u003C\u002Fcode\u003E  # for stable channel as of 2019-07-02\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003Esample target: https:\u002F\u002Fgithub.com\u002Fgtk-rs\u002Fgtk\u002Fblob\u002Fmaster\u002Fsrc\u002Frt.rs\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003EStart with the same approach:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E\u003Cspan class=\"hljs-meta\"\u003E$\u003C\u002Fspan\u003E\u003Cspan class=\"bash\"\u003E nix-shell -p gtk3 pkgconfig rustc cargo llvm\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-meta\"\u003E$\u003C\u002Fspan\u003E\u003Cspan class=\"bash\"\u003E cargo run\u003C\u002Fspan\u003E\n    Finished dev [unoptimized + debuginfo] target(s) in 0.21s                                       \n     Running `target\u002Fdebug\u002Fgtktest`\nthread &#x27;main&#x27; panicked at &#x27;libgtk-3 was configured with `--enable-debug=no`. See https:\u002F\u002Fgithub.com\u002Fgtk-rs\u002Fgtk\u002Fissues\u002F270 for details&#x27;, ~\u002F.cargo\u002Fregistry\u002Fsrc\u002Fgithub.com-1ecc6299db9ec823\u002Fgtk-0.5.0\u002Fsrc\u002Frt.rs:137:13\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cul\u003E\n\u003Cli\u003Ethe issue: https:\u002F\u002Fgithub.com\u002Fgtk-rs\u002Fgtk\u002Fissues\u002F270\u003C\u002Fli\u003E\n\u003Cli\u003Esrc:  \u003Ca href=\"https:\u002F\u002Fgithub.com\u002FNixOS\u002Fnixpkgs\u002Fblob\u002Fmaster\u002Fpkgs\u002Fdevelopment\u002Flibraries\u002Fgtk%2B\u002F3.x.nix\"\u003Enix expression for gtk3\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003ESo let's make an overlay:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Eself: super:\n{\n    gtk3RustDarwin = super.gtk3.overrideDerivation (attrs: { \n        configureFlags = [\n            &quot;--enable-debug&quot;\n            &quot;--disable-dependency-tracking&quot;\n            &quot;--disable-glibtest&quot;\n            &quot;--enable-quartz-backend&quot;\n        ];\n    });\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003EWhat's \u003Ccode\u003EoverrideDerivation\u003C\u002Fcode\u003E? It's a \u003Ca href=\"https:\u002F\u002Fnixos.org\u002Fnixpkgs\u002Fmanual\u002F#sec-pkg-overrideDerivation\"\u003Edeprecated\u003C\u002Fa\u003E function.\nSo the following seems better:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Eself: super:\n{\n    gtk3RustDarwin = super.gtk3.overrideAttrs (attrs: rec {\n        configureFlags = [\n            &quot;--enable-debug&quot;\n            &quot;--disable-dependency-tracking&quot;\n            &quot;--disable-glibtest&quot;\n            &quot;--enable-quartz-backend&quot;\n        ];\n    });\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003EAnyway, give it a try.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E\u003Cspan class=\"hljs-meta\"\u003E$\u003C\u002Fspan\u003E\u003Cspan class=\"bash\"\u003E nix-shell -p gtk3RustDarwin pkgconfig rustc cargo llvm\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-meta\"\u003E$\u003C\u002Fspan\u003E\u003Cspan class=\"bash\"\u003E cargo clean  \u003Cspan class=\"hljs-comment\"\u003E# to purge the previous attempt\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-meta\"\u003E$\u003C\u002Fspan\u003E\u003Cspan class=\"bash\"\u003E cargo run\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EThat works!\u003C\u002Fp\u003E\n"},dir:{writable:true,enumerable:true,value:"article\u002F.json\u002F2019"},base:{writable:true,enumerable:true,value:"2019-03-14-gtk-development-on-nix.json"},ext:{writable:true,enumerable:true,value:".json"},sourceBase:{writable:true,enumerable:true,value:"2019-03-14-gtk-development-on-nix.md"},sourceExt:{writable:true,enumerable:true,value:".md"}})}],fetch:[],mutations:[]});