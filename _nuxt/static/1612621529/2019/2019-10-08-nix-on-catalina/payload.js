__NUXT_JSONP__("/2019/2019-10-08-nix-on-catalina", {data:[{article:Object.create(null,{default:{writable:true,enumerable:true,value:{title:"Using Nix on Catalina",subtitle:"Catalina上でNixを使う",date:"2019-10-17T00:00:00.000Z",tags:["nixOS","macOS"],bodyContent:"Catalinaでは'\u002F'にディレクトリが作れなくなってしまったので\n`\u002Fnix`がどうにもならんことになってしまった。\n[Discourseのトピック](https:\u002F\u002Fdiscourse.nixos.org\u002Ft\u002Fcurrent-status-of-nix-on-macos-catalina\u002F4286\u002F2)によれば、\nパーティションを作ってマウントすることが必要らしい（[参考](https:\u002F\u002Fgithub.com\u002FNixOS\u002Fnix\u002Fissues\u002F2925)）。\nうーむ、どうもこれしかなさそうなんだけど、\nもうちょっとやり方が確定するまでメインマシンのアップグレードはしばらく待ってみようか。\n\nちなみに現在、Nixで（メインマシンに）インストールしているものは以下の通り。\n\n- **coreutils-8.31** -- あって当然のGNU系のオプションを使うために重要\n- **emacs-26.3**\n- **git-2.23.0**\n- **gnupg-2.2.17**\n- nix-2.3\n- nodejs-12.5.0 -- 各種サイトの生成に使用中\n- nss-cacert-3.46\n- **parallel-20190722** -- `git catchup`が依存している\n- pinentry-1.1.0\n- R-3.6.1-wrapper -- Observableでcactus plotが描ければ捨ててもよくなった\n- sat-bench-0.6.3 -- メインマシンでは重要\n- source-highlight-3.1.8 -- なくてもいい\n- **tmux-2.9a**\n- **xz-5.2.4** -- benchmark結果の圧縮に使用\n\n特に重要なものはcoreutils, emacs, git, parallel, tmux, xzあたり。\nsat-bench, R, source-highlightは多分捨てられる。\ngunpg, nodejsは公式バイナリでもいいか。\n\nとすると、残念だけど、色々と設定が必要ならこの際Nixをやめられない訳ではないようだ。\n\n# 2019-10-08T19:00:00 STEPS THAT WORK\n\nなどと言いつつ、敷居が低い人柱を志願してしまった。\n\n1. synthetic.confを作る\n\n```sh\nsudo echo nix \u003E \u002FSystem\u002FVolumes\u002FData\u002Fprivate\u002Fetc\u002Fsynthetic.conf\n```\n\n（いや\u002Fusr\u002Fbin\u002Fvimを使うことになるのだけど。）\n\n2. `\u002Fnix`を有効にするためまずreboot\n\n3. ボリューム`Nix`を作る\n\n```sh\nsudo \u002Fusr\u002Fsbin\u002Fdiskutil apfs addVolume disk1 APFSX Nix -mountpoint \u002Fnix\n```\n\n4. 色々attributeを設定\n\n```sh\nsudo \u002Fusr\u002Fsbin\u002Fdiskutil enableOwneship \u002Fnix\nsudo \u002Fusr\u002Fsbin\u002Fdiskutil apfs encrypt Nix -user disk\nsudo \u002Fusr\u002Fsbin\u002Fchown -R \u003Cuser\u003E \u002Fnix\n```\n\n5. nixをインストール\n\n```sh\ncurl https:\u002F\u002Fnixos.org\u002Fnix\u002Finstall | sh\n```\n\n移動されたディレクトリから復帰するのはownerなどが変わっていたのでやめたほうがいいだろう。\nということでnix由来のプログラムも復活。メインマシンも更新しよう。\n\nしかしCatalinaはinteractive shellをzshに変えよとうるさい。色々設定を変えるはめんどいんじゃあ。\n\n\n### 2019-10-17\n\nリブートしたらNixボリュームが\u002FVolume\u002FNixにマウントされていた。\u002Fnixはあるけど空。\nということで上記の方法で設定しても、毎回、\n\n```sh\nsudo \u002Fusr\u002Fsbin\u002Fdiskutil umount \u002FVolume\u002FNix\nsudo \u002Fusr\u002Fsbin\u002Fdiskutil mount -mountPoint \u002Fnix Nix\n```\n\nしないといけないっぽい。マウントポイントは永続的ではないのか。",bodyHtml:"\u003Cp\u003ECatalinaでは'\u002F'にディレクトリが作れなくなってしまったので\n\u003Ccode\u003E\u002Fnix\u003C\u002Fcode\u003Eがどうにもならんことになってしまった。\n\u003Ca href=\"https:\u002F\u002Fdiscourse.nixos.org\u002Ft\u002Fcurrent-status-of-nix-on-macos-catalina\u002F4286\u002F2\"\u003EDiscourseのトピック\u003C\u002Fa\u003Eによれば、\nパーティションを作ってマウントすることが必要らしい（\u003Ca href=\"https:\u002F\u002Fgithub.com\u002FNixOS\u002Fnix\u002Fissues\u002F2925\"\u003E参考\u003C\u002Fa\u003E）。\nうーむ、どうもこれしかなさそうなんだけど、\nもうちょっとやり方が確定するまでメインマシンのアップグレードはしばらく待ってみようか。\u003C\u002Fp\u003E\n\u003Cp\u003Eちなみに現在、Nixで（メインマシンに）インストールしているものは以下の通り。\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Cstrong\u003Ecoreutils-8.31\u003C\u002Fstrong\u003E -- あって当然のGNU系のオプションを使うために重要\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003Eemacs-26.3\u003C\u002Fstrong\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003Egit-2.23.0\u003C\u002Fstrong\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003Egnupg-2.2.17\u003C\u002Fstrong\u003E\u003C\u002Fli\u003E\n\u003Cli\u003Enix-2.3\u003C\u002Fli\u003E\n\u003Cli\u003Enodejs-12.5.0 -- 各種サイトの生成に使用中\u003C\u002Fli\u003E\n\u003Cli\u003Enss-cacert-3.46\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003Eparallel-20190722\u003C\u002Fstrong\u003E -- \u003Ccode\u003Egit catchup\u003C\u002Fcode\u003Eが依存している\u003C\u002Fli\u003E\n\u003Cli\u003Epinentry-1.1.0\u003C\u002Fli\u003E\n\u003Cli\u003ER-3.6.1-wrapper -- Observableでcactus plotが描ければ捨ててもよくなった\u003C\u002Fli\u003E\n\u003Cli\u003Esat-bench-0.6.3 -- メインマシンでは重要\u003C\u002Fli\u003E\n\u003Cli\u003Esource-highlight-3.1.8 -- なくてもいい\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003Etmux-2.9a\u003C\u002Fstrong\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003Exz-5.2.4\u003C\u002Fstrong\u003E -- benchmark結果の圧縮に使用\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E特に重要なものはcoreutils, emacs, git, parallel, tmux, xzあたり。\nsat-bench, R, source-highlightは多分捨てられる。\ngunpg, nodejsは公式バイナリでもいいか。\u003C\u002Fp\u003E\n\u003Cp\u003Eとすると、残念だけど、色々と設定が必要ならこの際Nixをやめられない訳ではないようだ。\u003C\u002Fp\u003E\n\u003Ch1\u003E2019-10-08T19:00:00 STEPS THAT WORK\u003C\u002Fh1\u003E\n\u003Cp\u003Eなどと言いつつ、敷居が低い人柱を志願してしまった。\u003C\u002Fp\u003E\n\u003Col\u003E\n\u003Cli\u003Esynthetic.confを作る\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003Esudo \u003Cspan class=\"hljs-built_in\"\u003Eecho\u003C\u002Fspan\u003E nix &gt; \u002FSystem\u002FVolumes\u002FData\u002Fprivate\u002Fetc\u002Fsynthetic.conf\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E（いや\u002Fusr\u002Fbin\u002Fvimを使うことになるのだけど。）\u003C\u002Fp\u003E\n\u003Col start=\"2\"\u003E\n\u003Cli\u003E\n\u003Cp\u003E\u003Ccode\u003E\u002Fnix\u003C\u002Fcode\u003Eを有効にするためまずreboot\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003Eボリューム\u003Ccode\u003ENix\u003C\u002Fcode\u003Eを作る\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003Esudo \u002Fusr\u002Fsbin\u002Fdiskutil apfs addVolume disk1 APFSX Nix -mountpoint \u002Fnix\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Col start=\"4\"\u003E\n\u003Cli\u003E色々attributeを設定\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003Esudo \u002Fusr\u002Fsbin\u002Fdiskutil enableOwneship \u002Fnix\nsudo \u002Fusr\u002Fsbin\u002Fdiskutil apfs encrypt Nix -user disk\nsudo \u002Fusr\u002Fsbin\u002Fchown -R &lt;user&gt; \u002Fnix\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Col start=\"5\"\u003E\n\u003Cli\u003Enixをインストール\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003Ecurl https:\u002F\u002Fnixos.org\u002Fnix\u002Finstall | sh\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E移動されたディレクトリから復帰するのはownerなどが変わっていたのでやめたほうがいいだろう。\nということでnix由来のプログラムも復活。メインマシンも更新しよう。\u003C\u002Fp\u003E\n\u003Cp\u003EしかしCatalinaはinteractive shellをzshに変えよとうるさい。色々設定を変えるはめんどいんじゃあ。\u003C\u002Fp\u003E\n\u003Ch3\u003E2019-10-17\u003C\u002Fh3\u003E\n\u003Cp\u003EリブートしたらNixボリュームが\u002FVolume\u002FNixにマウントされていた。\u002Fnixはあるけど空。\nということで上記の方法で設定しても、毎回、\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003Esudo \u002Fusr\u002Fsbin\u002Fdiskutil umount \u002FVolume\u002FNix\nsudo \u002Fusr\u002Fsbin\u002Fdiskutil mount -mountPoint \u002Fnix Nix\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003Eしないといけないっぽい。マウントポイントは永続的ではないのか。\u003C\u002Fp\u003E\n",dir:"article\u002F.json\u002F2019",base:"2019-10-08-nix-on-catalina.json",ext:".json",sourceBase:"2019-10-08-nix-on-catalina.md",sourceExt:".md"}},title:{writable:true,enumerable:true,value:"Using Nix on Catalina"},subtitle:{writable:true,enumerable:true,value:"Catalina上でNixを使う"},date:{writable:true,enumerable:true,value:"2019-10-17T00:00:00.000Z"},tags:{writable:true,enumerable:true,value:["nixOS","macOS"]},bodyContent:{writable:true,enumerable:true,value:"Catalinaでは'\u002F'にディレクトリが作れなくなってしまったので\n`\u002Fnix`がどうにもならんことになってしまった。\n[Discourseのトピック](https:\u002F\u002Fdiscourse.nixos.org\u002Ft\u002Fcurrent-status-of-nix-on-macos-catalina\u002F4286\u002F2)によれば、\nパーティションを作ってマウントすることが必要らしい（[参考](https:\u002F\u002Fgithub.com\u002FNixOS\u002Fnix\u002Fissues\u002F2925)）。\nうーむ、どうもこれしかなさそうなんだけど、\nもうちょっとやり方が確定するまでメインマシンのアップグレードはしばらく待ってみようか。\n\nちなみに現在、Nixで（メインマシンに）インストールしているものは以下の通り。\n\n- **coreutils-8.31** -- あって当然のGNU系のオプションを使うために重要\n- **emacs-26.3**\n- **git-2.23.0**\n- **gnupg-2.2.17**\n- nix-2.3\n- nodejs-12.5.0 -- 各種サイトの生成に使用中\n- nss-cacert-3.46\n- **parallel-20190722** -- `git catchup`が依存している\n- pinentry-1.1.0\n- R-3.6.1-wrapper -- Observableでcactus plotが描ければ捨ててもよくなった\n- sat-bench-0.6.3 -- メインマシンでは重要\n- source-highlight-3.1.8 -- なくてもいい\n- **tmux-2.9a**\n- **xz-5.2.4** -- benchmark結果の圧縮に使用\n\n特に重要なものはcoreutils, emacs, git, parallel, tmux, xzあたり。\nsat-bench, R, source-highlightは多分捨てられる。\ngunpg, nodejsは公式バイナリでもいいか。\n\nとすると、残念だけど、色々と設定が必要ならこの際Nixをやめられない訳ではないようだ。\n\n# 2019-10-08T19:00:00 STEPS THAT WORK\n\nなどと言いつつ、敷居が低い人柱を志願してしまった。\n\n1. synthetic.confを作る\n\n```sh\nsudo echo nix \u003E \u002FSystem\u002FVolumes\u002FData\u002Fprivate\u002Fetc\u002Fsynthetic.conf\n```\n\n（いや\u002Fusr\u002Fbin\u002Fvimを使うことになるのだけど。）\n\n2. `\u002Fnix`を有効にするためまずreboot\n\n3. ボリューム`Nix`を作る\n\n```sh\nsudo \u002Fusr\u002Fsbin\u002Fdiskutil apfs addVolume disk1 APFSX Nix -mountpoint \u002Fnix\n```\n\n4. 色々attributeを設定\n\n```sh\nsudo \u002Fusr\u002Fsbin\u002Fdiskutil enableOwneship \u002Fnix\nsudo \u002Fusr\u002Fsbin\u002Fdiskutil apfs encrypt Nix -user disk\nsudo \u002Fusr\u002Fsbin\u002Fchown -R \u003Cuser\u003E \u002Fnix\n```\n\n5. nixをインストール\n\n```sh\ncurl https:\u002F\u002Fnixos.org\u002Fnix\u002Finstall | sh\n```\n\n移動されたディレクトリから復帰するのはownerなどが変わっていたのでやめたほうがいいだろう。\nということでnix由来のプログラムも復活。メインマシンも更新しよう。\n\nしかしCatalinaはinteractive shellをzshに変えよとうるさい。色々設定を変えるはめんどいんじゃあ。\n\n\n### 2019-10-17\n\nリブートしたらNixボリュームが\u002FVolume\u002FNixにマウントされていた。\u002Fnixはあるけど空。\nということで上記の方法で設定しても、毎回、\n\n```sh\nsudo \u002Fusr\u002Fsbin\u002Fdiskutil umount \u002FVolume\u002FNix\nsudo \u002Fusr\u002Fsbin\u002Fdiskutil mount -mountPoint \u002Fnix Nix\n```\n\nしないといけないっぽい。マウントポイントは永続的ではないのか。"},bodyHtml:{writable:true,enumerable:true,value:"\u003Cp\u003ECatalinaでは'\u002F'にディレクトリが作れなくなってしまったので\n\u003Ccode\u003E\u002Fnix\u003C\u002Fcode\u003Eがどうにもならんことになってしまった。\n\u003Ca href=\"https:\u002F\u002Fdiscourse.nixos.org\u002Ft\u002Fcurrent-status-of-nix-on-macos-catalina\u002F4286\u002F2\"\u003EDiscourseのトピック\u003C\u002Fa\u003Eによれば、\nパーティションを作ってマウントすることが必要らしい（\u003Ca href=\"https:\u002F\u002Fgithub.com\u002FNixOS\u002Fnix\u002Fissues\u002F2925\"\u003E参考\u003C\u002Fa\u003E）。\nうーむ、どうもこれしかなさそうなんだけど、\nもうちょっとやり方が確定するまでメインマシンのアップグレードはしばらく待ってみようか。\u003C\u002Fp\u003E\n\u003Cp\u003Eちなみに現在、Nixで（メインマシンに）インストールしているものは以下の通り。\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Cstrong\u003Ecoreutils-8.31\u003C\u002Fstrong\u003E -- あって当然のGNU系のオプションを使うために重要\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003Eemacs-26.3\u003C\u002Fstrong\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003Egit-2.23.0\u003C\u002Fstrong\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003Egnupg-2.2.17\u003C\u002Fstrong\u003E\u003C\u002Fli\u003E\n\u003Cli\u003Enix-2.3\u003C\u002Fli\u003E\n\u003Cli\u003Enodejs-12.5.0 -- 各種サイトの生成に使用中\u003C\u002Fli\u003E\n\u003Cli\u003Enss-cacert-3.46\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003Eparallel-20190722\u003C\u002Fstrong\u003E -- \u003Ccode\u003Egit catchup\u003C\u002Fcode\u003Eが依存している\u003C\u002Fli\u003E\n\u003Cli\u003Epinentry-1.1.0\u003C\u002Fli\u003E\n\u003Cli\u003ER-3.6.1-wrapper -- Observableでcactus plotが描ければ捨ててもよくなった\u003C\u002Fli\u003E\n\u003Cli\u003Esat-bench-0.6.3 -- メインマシンでは重要\u003C\u002Fli\u003E\n\u003Cli\u003Esource-highlight-3.1.8 -- なくてもいい\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003Etmux-2.9a\u003C\u002Fstrong\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003Exz-5.2.4\u003C\u002Fstrong\u003E -- benchmark結果の圧縮に使用\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E特に重要なものはcoreutils, emacs, git, parallel, tmux, xzあたり。\nsat-bench, R, source-highlightは多分捨てられる。\ngunpg, nodejsは公式バイナリでもいいか。\u003C\u002Fp\u003E\n\u003Cp\u003Eとすると、残念だけど、色々と設定が必要ならこの際Nixをやめられない訳ではないようだ。\u003C\u002Fp\u003E\n\u003Ch1\u003E2019-10-08T19:00:00 STEPS THAT WORK\u003C\u002Fh1\u003E\n\u003Cp\u003Eなどと言いつつ、敷居が低い人柱を志願してしまった。\u003C\u002Fp\u003E\n\u003Col\u003E\n\u003Cli\u003Esynthetic.confを作る\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003Esudo \u003Cspan class=\"hljs-built_in\"\u003Eecho\u003C\u002Fspan\u003E nix &gt; \u002FSystem\u002FVolumes\u002FData\u002Fprivate\u002Fetc\u002Fsynthetic.conf\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E（いや\u002Fusr\u002Fbin\u002Fvimを使うことになるのだけど。）\u003C\u002Fp\u003E\n\u003Col start=\"2\"\u003E\n\u003Cli\u003E\n\u003Cp\u003E\u003Ccode\u003E\u002Fnix\u003C\u002Fcode\u003Eを有効にするためまずreboot\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003Eボリューム\u003Ccode\u003ENix\u003C\u002Fcode\u003Eを作る\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003Esudo \u002Fusr\u002Fsbin\u002Fdiskutil apfs addVolume disk1 APFSX Nix -mountpoint \u002Fnix\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Col start=\"4\"\u003E\n\u003Cli\u003E色々attributeを設定\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003Esudo \u002Fusr\u002Fsbin\u002Fdiskutil enableOwneship \u002Fnix\nsudo \u002Fusr\u002Fsbin\u002Fdiskutil apfs encrypt Nix -user disk\nsudo \u002Fusr\u002Fsbin\u002Fchown -R &lt;user&gt; \u002Fnix\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Col start=\"5\"\u003E\n\u003Cli\u003Enixをインストール\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003Ecurl https:\u002F\u002Fnixos.org\u002Fnix\u002Finstall | sh\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E移動されたディレクトリから復帰するのはownerなどが変わっていたのでやめたほうがいいだろう。\nということでnix由来のプログラムも復活。メインマシンも更新しよう。\u003C\u002Fp\u003E\n\u003Cp\u003EしかしCatalinaはinteractive shellをzshに変えよとうるさい。色々設定を変えるはめんどいんじゃあ。\u003C\u002Fp\u003E\n\u003Ch3\u003E2019-10-17\u003C\u002Fh3\u003E\n\u003Cp\u003EリブートしたらNixボリュームが\u002FVolume\u002FNixにマウントされていた。\u002Fnixはあるけど空。\nということで上記の方法で設定しても、毎回、\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003Esudo \u002Fusr\u002Fsbin\u002Fdiskutil umount \u002FVolume\u002FNix\nsudo \u002Fusr\u002Fsbin\u002Fdiskutil mount -mountPoint \u002Fnix Nix\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003Eしないといけないっぽい。マウントポイントは永続的ではないのか。\u003C\u002Fp\u003E\n"},dir:{writable:true,enumerable:true,value:"article\u002F.json\u002F2019"},base:{writable:true,enumerable:true,value:"2019-10-08-nix-on-catalina.json"},ext:{writable:true,enumerable:true,value:".json"},sourceBase:{writable:true,enumerable:true,value:"2019-10-08-nix-on-catalina.md"},sourceExt:{writable:true,enumerable:true,value:".md"}})}],fetch:[],mutations:[]});